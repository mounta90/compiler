
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN ASSIGN_DIVIDE ASSIGN_MINUS ASSIGN_MOD ASSIGN_MULTIPLY ASSIGN_PLUS COMMA COMMENT DAND DCONSTANT DECREMENT DEQ DIVIDE DOR GEQ GT ICONSTANT IDENTIFIER INCREMENT K_DO K_DOUBLE K_ELSE K_EXIT K_FUNCTION K_IF K_INTEGER K_PRINT_DOUBLE K_PRINT_INTEGER K_PRINT_STRING K_PROCEDURE K_PROGRAM K_READ_DOUBLE K_READ_INTEGER K_READ_STRING K_RETURN K_STRING K_THEN K_WHILE LBRACKET LCURLY LEQ LPAREN LT MINUS MOD MULTIPLY NE NOT PERIOD PLUS RBRACKET RCURLY RPAREN SCONSTANT SEMI\n    program : K_PROGRAM IDENTIFIER LCURLY program_body RCURLY\n    \n    program_body : function program_body\n                 | procedure program_body\n                 | empty\n    \n    function : K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY\n             | K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY\n             | K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY\n    \n    procedure : K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY\n    \n    procedure : K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY\n    \n    arguments : variable_definition arguments\n    \n    arguments : COMMA arguments\n    \n    arguments : empty\n    \n    scope_body : statement scope_body\n               | function scope_body\n               | procedure scope_body\n               | empty\n    \n    statement : variable_definition SEMI\n              | variable_declaration SEMI\n              | variable_assignment SEMI\n              | function_call SEMI\n              | function_return SEMI\n              | procedure_call SEMI\n              | variable_decrement_increment SEMI\n    \n    statement : if_statement\n              | do_statement\n              | while_statement\n    \n    while_statement : K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY\n    \n    while_statement : K_WHILE LPAREN boolean_logic RPAREN statement\n    \n    do_statement : K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY\n                 | K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY\n                 | K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY\n                 | K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY\n    \n    do_statement : K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement\n                 | K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement\n                 | K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement\n                 | K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement\n    \n    if_statement : if\n    \n    if_statement : if K_ELSE after_else\n    \n    if : K_IF LPAREN boolean_logic RPAREN K_THEN statement\n    \n    if : K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY\n    \n    if : empty\n    \n    after_else : statement\n    \n    after_else : LCURLY scope_body RCURLY\n    \n    after_else : if K_ELSE after_else\n    \n    function_call : built_in_functions LPAREN function_call_args RPAREN\n    \n    function_call : IDENTIFIER LPAREN function_call_args RPAREN\n    \n    function_return : K_RETURN IDENTIFIER\n    \n    function_return : K_RETURN ICONSTANT\n                    | K_RETURN DCONSTANT\n                    | K_RETURN SCONSTANT\n    \n    function_return : K_RETURN function_call\n                    | K_RETURN variable_assignment\n    \n    procedure_call : IDENTIFIER LPAREN procedure_call_args RPAREN\n    \n    built_in_functions : K_PRINT_INTEGER\n                       | K_PRINT_DOUBLE\n                       | K_PRINT_STRING\n                       | K_READ_INTEGER\n                       | K_READ_DOUBLE\n                       | K_READ_STRING\n    \n    procedure_call_args : identifiers\n                        | term\n    \n    function_call_args : identifiers function_call_args\n                       | term function_call_args\n                       | empty\n    \n    variable_decrement_increment : IDENTIFIER INCREMENT\n                                 | IDENTIFIER DECREMENT\n    \n    variable_assignment : IDENTIFIER ASSIGN variable_assignment\n                        | IDENTIFIER ASSIGN function_call\n                        | IDENTIFIER ASSIGN expression\n                        | IDENTIFIER ASSIGN_DIVIDE expression\n                        | IDENTIFIER ASSIGN_MULTIPLY expression\n                        | IDENTIFIER ASSIGN_PLUS expression\n                        | IDENTIFIER ASSIGN_MINUS expression\n                        | IDENTIFIER ASSIGN_MOD expression\n    \n    variable_assignment : IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression\n                        | IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression\n                        | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression\n    \n    variable_declaration : variable_definition ASSIGN expression identifiers\n    \n    variable_definition : K_INTEGER identifiers\n                        | K_DOUBLE identifiers\n                        | K_STRING identifiers\n    \n    identifiers : IDENTIFIER identifiers\n    \n    identifiers : IDENTIFIER LBRACKET expression RBRACKET identifiers\n                | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers\n    \n    identifiers : COMMA identifiers\n    \n    identifiers : empty\n    \n    variable_definition : K_INTEGER IDENTIFIER LBRACKET RBRACKET\n                        | K_DOUBLE IDENTIFIER LBRACKET RBRACKET\n                        | K_STRING IDENTIFIER LBRACKET RBRACKET\n    \n    variable_definition : K_INTEGER IDENTIFIER LBRACKET expression RBRACKET\n                        | K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET\n                        | K_STRING IDENTIFIER LBRACKET expression RBRACKET\n                        | K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET\n                        | K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET\n                        | K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET\n    \n    boolean_logic : arithmetic_logic DAND arithmetic_logic\n                  | arithmetic_logic DOR arithmetic_logic\n    \n    boolean_logic : NOT arithmetic_logic\n    \n    boolean_logic : arithmetic_logic\n    \n    arithmetic_logic : function_call DEQ function_call\n                     | function_call GEQ function_call\n                     | function_call GT function_call\n                     | function_call LEQ function_call\n                     | function_call LT function_call\n                     | function_call NE function_call\n                     | function_call DEQ expression\n                     | function_call GEQ expression\n                     | function_call GT expression\n                     | function_call LEQ expression\n                     | function_call LT expression\n                     | function_call NE expression\n    \n    arithmetic_logic : expression DEQ expression\n                     | expression GEQ expression\n                     | expression GT expression\n                     | expression LEQ expression\n                     | expression LT expression\n                     | expression NE expression\n                     | expression DEQ function_call\n                     | expression GEQ function_call\n                     | expression GT function_call\n                     | expression LEQ function_call\n                     | expression LT function_call\n                     | expression NE function_call\n    \n    expression : term PLUS expression\n               | term MINUS expression\n    \n    expression : term\n    \n    term : factor DIVIDE term\n         | factor MULTIPLY term\n         | factor MOD term\n    \n    term : factor\n    \n    factor : LPAREN expression RPAREN\n    \n    factor : ICONSTANT\n           | DCONSTANT\n           | SCONSTANT\n    \n    factor : MINUS ICONSTANT\n           | MINUS DCONSTANT\n    \n    factor : IDENTIFIER\n    \n    factor : MINUS IDENTIFIER\n    \n    factor : IDENTIFIER LBRACKET expression RBRACKET\n           | IDENTIFIER LBRACKET variable_decrement_increment RBRACKET\n    \n    factor : MINUS IDENTIFIER LBRACKET expression RBRACKET\n           | MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET\n    \n    empty :\n    '
    
_lr_action_items = {'K_PROGRAM':([0,],[2,]),'$end':([1,11,],[0,-1,]),'IDENTIFIER':([2,10,14,15,16,30,31,32,36,41,42,43,45,47,53,54,55,56,64,65,66,68,69,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,103,104,105,106,107,108,109,110,111,118,119,120,121,123,128,129,130,131,132,133,134,148,156,159,160,161,162,164,165,166,167,168,169,170,171,177,182,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,207,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,240,241,242,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,260,261,264,265,268,269,296,297,298,319,320,321,322,324,325,326,327,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[3,17,18,19,20,41,45,47,51,80,80,-98,80,80,51,51,51,-41,-24,-25,-26,112,-37,51,80,124,-94,-97,124,124,51,51,51,144,148,148,148,148,148,124,156,-8,-17,148,-18,-19,-20,-21,-22,-23,156,51,174,180,180,124,-138,192,-142,148,-144,-145,-146,-149,80,156,156,-98,80,156,156,156,-37,-38,-42,51,-41,180,-9,124,80,80,148,148,-147,-148,-150,148,148,148,80,80,80,80,-5,-6,-7,124,124,51,180,180,51,180,180,180,180,180,180,180,180,180,180,180,180,180,180,80,80,-95,-96,-136,-137,124,-139,-140,-141,-143,144,148,148,148,148,148,311,148,148,148,148,148,-38,-43,51,-28,51,-151,-152,80,80,330,330,-39,51,-153,-154,-27,51,51,51,51,-40,51,-33,51,-35,51,-34,51,-36,-29,-31,-30,-32,]),'LCURLY':([3,25,37,48,49,50,118,214,218,296,335,336,337,338,],[4,36,79,86,87,88,170,170,268,325,340,342,344,346,]),'K_FUNCTION':([4,6,7,36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[9,9,9,9,9,9,9,-41,-24,-25,-26,-37,9,9,9,9,-8,-17,-18,-19,-20,-21,-22,-23,-155,-37,-38,-42,9,-41,-9,-5,-6,-7,-155,-155,-38,-43,9,-28,-155,-39,9,-27,-155,-155,-155,-155,-40,9,-33,9,-35,9,-34,9,-36,-29,-31,-30,-32,]),'K_PROCEDURE':([4,6,7,36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[10,10,10,10,10,10,10,-41,-24,-25,-26,-37,10,10,10,10,-8,-17,-18,-19,-20,-21,-22,-23,-155,-37,-38,-42,10,-41,-9,-5,-6,-7,-155,-155,-38,-43,10,-28,-155,-39,10,-27,-155,-155,-155,-155,-40,10,-33,10,-35,10,-34,10,-36,-29,-31,-30,-32,]),'RCURLY':([4,5,6,7,8,12,13,36,52,53,54,55,56,64,65,66,69,79,86,87,88,99,100,101,102,103,105,106,107,108,109,110,118,122,141,142,143,167,168,169,170,171,182,201,202,203,214,215,218,264,265,268,269,296,323,324,325,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,],[-155,11,-155,-155,-4,-2,-3,-155,99,-155,-155,-155,-16,-24,-25,-26,-37,-155,-155,-155,-155,-8,-13,-14,-15,-17,-18,-19,-20,-21,-22,-23,-155,182,201,202,203,-37,-38,-42,-155,-41,-9,-5,-6,-7,-155,265,-155,-38,-43,-155,-28,-155,333,-39,-155,-27,339,-155,-155,-155,-155,-40,-155,-33,-155,-35,-155,-34,-155,-36,352,353,354,355,-29,-31,-30,-32,]),'K_INTEGER':([9,21,22,23,24,27,28,30,31,32,36,40,41,42,43,44,45,46,47,53,54,55,56,64,65,66,69,79,80,82,83,86,87,88,99,103,105,106,107,108,109,110,118,119,125,135,138,167,168,169,170,171,182,186,187,197,198,199,200,201,202,203,214,218,235,236,239,240,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[14,30,30,30,30,30,30,-155,-155,-155,30,-91,-155,-155,-98,-92,-155,-93,-155,30,30,30,-41,-24,-25,-26,-37,30,-155,-94,-97,30,30,30,-8,-17,-18,-19,-20,-21,-22,-23,30,30,-99,-100,-101,-37,-38,-42,30,-41,-9,-102,-105,-103,-106,-104,-107,-5,-6,-7,30,30,-155,-155,-95,-96,-38,-43,30,-28,30,-39,30,-27,30,30,30,30,-40,30,-33,30,-35,30,-34,30,-36,-29,-31,-30,-32,]),'K_DOUBLE':([9,21,22,23,24,27,28,30,31,32,36,40,41,42,43,44,45,46,47,53,54,55,56,64,65,66,69,79,80,82,83,86,87,88,99,103,105,106,107,108,109,110,118,119,125,135,138,167,168,169,170,171,182,186,187,197,198,199,200,201,202,203,214,218,235,236,239,240,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[15,31,31,31,31,31,31,-155,-155,-155,31,-91,-155,-155,-98,-92,-155,-93,-155,31,31,31,-41,-24,-25,-26,-37,31,-155,-94,-97,31,31,31,-8,-17,-18,-19,-20,-21,-22,-23,31,31,-99,-100,-101,-37,-38,-42,31,-41,-9,-102,-105,-103,-106,-104,-107,-5,-6,-7,31,31,-155,-155,-95,-96,-38,-43,31,-28,31,-39,31,-27,31,31,31,31,-40,31,-33,31,-35,31,-34,31,-36,-29,-31,-30,-32,]),'K_STRING':([9,21,22,23,24,27,28,30,31,32,36,40,41,42,43,44,45,46,47,53,54,55,56,64,65,66,69,79,80,82,83,86,87,88,99,103,105,106,107,108,109,110,118,119,125,135,138,167,168,169,170,171,182,186,187,197,198,199,200,201,202,203,214,218,235,236,239,240,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[16,32,32,32,32,32,32,-155,-155,-155,32,-91,-155,-155,-98,-92,-155,-93,-155,32,32,32,-41,-24,-25,-26,-37,32,-155,-94,-97,32,32,32,-8,-17,-18,-19,-20,-21,-22,-23,32,32,-99,-100,-101,-37,-38,-42,32,-41,-9,-102,-105,-103,-106,-104,-107,-5,-6,-7,32,32,-155,-155,-95,-96,-38,-43,32,-28,32,-39,32,-27,32,32,32,32,-40,32,-33,32,-35,32,-34,32,-36,-29,-31,-30,-32,]),'LPAREN':([17,18,19,20,42,43,51,67,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,89,90,91,92,93,94,95,96,104,111,112,120,121,123,130,131,132,133,134,144,148,156,159,160,161,164,165,166,177,180,185,188,189,190,191,192,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,240,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,260,261,297,298,319,320,326,327,],[21,22,23,24,-155,-98,96,111,119,120,-54,-55,-56,-57,-58,-59,121,-155,131,-94,-97,131,131,131,131,131,131,131,131,131,131,131,131,166,131,131,131,-142,131,-144,-145,-146,166,-149,-149,131,131,-98,131,131,131,131,166,131,131,131,-147,-148,-150,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-155,-155,-95,-96,131,-139,-140,-141,-143,131,131,131,131,131,131,131,131,131,131,131,131,-151,-152,-151,-152,-153,-154,]),'RPAREN':([21,22,23,24,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,80,82,83,96,97,98,111,125,128,130,132,133,134,135,138,144,145,146,147,148,149,150,151,152,153,156,157,158,159,160,161,163,164,165,166,175,176,180,181,186,187,190,191,192,196,197,198,199,200,208,210,211,213,221,235,236,239,240,241,242,244,245,246,247,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,326,327,328,329,331,332,],[25,-155,-155,-155,37,-155,-155,-12,-155,-155,-155,48,49,50,-10,-11,-91,-155,-155,-98,-92,-155,-93,-155,-155,-94,-97,-155,-65,-66,-155,-99,-138,-142,-144,-145,-146,-100,-101,-149,-67,-68,-69,-149,-70,-71,-72,-73,-74,-149,208,209,-60,-61,-64,213,-155,-155,-155,218,-111,-149,234,-102,-105,-147,-148,-150,247,-103,-106,-104,-107,-46,-62,-63,-45,-110,-155,-155,-95,-96,-136,-137,-139,-140,-141,-143,-108,-109,-112,-118,-113,-119,-114,-120,-115,-121,-116,-122,-117,-123,-124,-130,-125,-131,-126,-132,-127,-133,-128,-134,-129,-135,-151,-152,-151,-152,-77,-75,-76,-78,-79,-80,-81,-82,-149,-83,-84,-85,-86,-87,-88,-89,-151,-152,-153,-154,335,336,337,338,]),'COMMA':([21,22,23,24,27,28,30,31,32,40,41,42,43,44,45,46,47,80,82,83,96,111,125,128,130,132,133,134,135,138,148,156,159,160,161,162,164,165,166,186,187,190,191,192,197,198,199,200,235,236,239,240,241,242,244,245,246,247,297,298,319,320,326,327,],[28,28,28,28,28,28,42,42,42,-91,42,42,-98,-92,42,-93,42,42,-94,-97,42,42,-99,-138,-142,-144,-145,-146,-100,-101,-149,42,42,42,-98,42,42,42,42,42,42,-147,-148,-150,42,42,42,42,42,42,-95,-96,-136,-137,-139,-140,-141,-143,-151,-152,42,42,-153,-154,]),'SEMI':([30,31,32,40,41,42,43,44,45,46,47,57,58,59,60,61,62,63,80,82,83,97,98,112,113,114,115,116,117,125,128,130,132,133,134,135,138,144,145,146,147,148,149,150,151,152,153,162,172,173,176,180,186,187,190,191,192,197,198,199,200,208,209,212,213,221,235,236,239,240,241,242,244,245,246,247,266,267,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,326,327,],[-155,-155,-155,-91,-155,-155,-98,-92,-155,-93,-155,103,105,106,107,108,109,110,-155,-94,-97,-65,-66,-47,-48,-49,-50,-51,-52,-99,-138,-142,-144,-145,-146,-100,-101,-149,-67,-68,-69,-149,-70,-71,-72,-73,-74,-155,216,217,-111,-149,-102,-105,-147,-148,-150,-103,-106,-104,-107,-46,-53,-90,-45,-110,-155,-155,-95,-96,-136,-137,-139,-140,-141,-143,321,322,-108,-109,-112,-118,-113,-119,-114,-120,-115,-121,-116,-122,-117,-123,-124,-130,-125,-131,-126,-132,-127,-133,-128,-134,-129,-135,-151,-152,-151,-152,-77,-75,-76,-78,-79,-80,-81,-82,-149,-83,-84,-85,-86,-87,-88,-89,-153,-154,]),'ASSIGN':([30,31,32,40,41,42,43,44,45,46,47,51,57,80,82,83,112,125,135,138,144,174,186,187,197,198,199,200,205,206,235,236,239,240,301,302,311,330,],[-155,-155,-155,-91,-155,-155,-98,-92,-155,-93,-155,89,104,-155,-94,-97,89,-99,-100,-101,89,89,-102,-105,-103,-106,-104,-107,250,256,-155,-155,-95,-96,250,256,89,89,]),'K_ELSE':([36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[-155,-155,-155,-155,-41,-24,-25,-26,118,-155,-155,-155,-155,-8,-17,-18,-19,-20,-21,-22,-23,-155,214,-38,-42,-155,-41,-9,-5,-6,-7,-155,-155,-38,-43,-155,-28,-155,-39,-155,-27,-155,-155,-155,-155,-40,-155,-33,-155,-35,-155,-34,-155,-36,-29,-31,-30,-32,]),'K_RETURN':([36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[68,68,68,68,-41,-24,-25,-26,-37,68,68,68,68,-8,-17,-18,-19,-20,-21,-22,-23,68,-37,-38,-42,68,-41,-9,-5,-6,-7,68,68,-38,-43,68,-28,68,-39,68,-27,68,68,68,68,-40,68,-33,68,-35,68,-34,68,-36,-29,-31,-30,-32,]),'K_DO':([36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[70,70,70,70,-41,-24,-25,-26,-37,70,70,70,70,-8,-17,-18,-19,-20,-21,-22,-23,70,-37,-38,-42,70,-41,-9,-5,-6,-7,70,70,-38,-43,70,-28,70,-39,70,-27,70,70,70,70,-40,70,-33,70,-35,70,-34,70,-36,-29,-31,-30,-32,]),'K_WHILE':([36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[71,71,71,71,-41,-24,-25,-26,-37,71,71,71,71,-8,-17,-18,-19,-20,-21,-22,-23,71,-37,-38,-42,71,-41,-9,-5,-6,-7,71,71,-38,-43,71,-28,71,-39,71,-27,71,71,71,71,-40,71,-33,71,-35,71,-34,71,-36,-29,-31,-30,-32,]),'K_PRINT_INTEGER':([36,53,54,55,56,64,65,66,68,69,79,86,87,88,89,99,103,105,106,107,108,109,110,118,120,121,167,168,169,170,171,177,182,201,202,203,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[72,72,72,72,-41,-24,-25,-26,72,-37,72,72,72,72,72,-8,-17,-18,-19,-20,-21,-22,-23,72,72,72,-37,-38,-42,72,-41,72,-9,-5,-6,-7,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-38,-43,72,-28,72,-39,72,-27,72,72,72,72,-40,72,-33,72,-35,72,-34,72,-36,-29,-31,-30,-32,]),'K_PRINT_DOUBLE':([36,53,54,55,56,64,65,66,68,69,79,86,87,88,89,99,103,105,106,107,108,109,110,118,120,121,167,168,169,170,171,177,182,201,202,203,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[73,73,73,73,-41,-24,-25,-26,73,-37,73,73,73,73,73,-8,-17,-18,-19,-20,-21,-22,-23,73,73,73,-37,-38,-42,73,-41,73,-9,-5,-6,-7,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-38,-43,73,-28,73,-39,73,-27,73,73,73,73,-40,73,-33,73,-35,73,-34,73,-36,-29,-31,-30,-32,]),'K_PRINT_STRING':([36,53,54,55,56,64,65,66,68,69,79,86,87,88,89,99,103,105,106,107,108,109,110,118,120,121,167,168,169,170,171,177,182,201,202,203,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[74,74,74,74,-41,-24,-25,-26,74,-37,74,74,74,74,74,-8,-17,-18,-19,-20,-21,-22,-23,74,74,74,-37,-38,-42,74,-41,74,-9,-5,-6,-7,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-38,-43,74,-28,74,-39,74,-27,74,74,74,74,-40,74,-33,74,-35,74,-34,74,-36,-29,-31,-30,-32,]),'K_READ_INTEGER':([36,53,54,55,56,64,65,66,68,69,79,86,87,88,89,99,103,105,106,107,108,109,110,118,120,121,167,168,169,170,171,177,182,201,202,203,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[75,75,75,75,-41,-24,-25,-26,75,-37,75,75,75,75,75,-8,-17,-18,-19,-20,-21,-22,-23,75,75,75,-37,-38,-42,75,-41,75,-9,-5,-6,-7,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-38,-43,75,-28,75,-39,75,-27,75,75,75,75,-40,75,-33,75,-35,75,-34,75,-36,-29,-31,-30,-32,]),'K_READ_DOUBLE':([36,53,54,55,56,64,65,66,68,69,79,86,87,88,89,99,103,105,106,107,108,109,110,118,120,121,167,168,169,170,171,177,182,201,202,203,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[76,76,76,76,-41,-24,-25,-26,76,-37,76,76,76,76,76,-8,-17,-18,-19,-20,-21,-22,-23,76,76,76,-37,-38,-42,76,-41,76,-9,-5,-6,-7,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-38,-43,76,-28,76,-39,76,-27,76,76,76,76,-40,76,-33,76,-35,76,-34,76,-36,-29,-31,-30,-32,]),'K_READ_STRING':([36,53,54,55,56,64,65,66,68,69,79,86,87,88,89,99,103,105,106,107,108,109,110,118,120,121,167,168,169,170,171,177,182,201,202,203,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[77,77,77,77,-41,-24,-25,-26,77,-37,77,77,77,77,77,-8,-17,-18,-19,-20,-21,-22,-23,77,77,77,-37,-38,-42,77,-41,77,-9,-5,-6,-7,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-38,-43,77,-28,77,-39,77,-27,77,77,77,77,-40,77,-33,77,-35,77,-34,77,-36,-29,-31,-30,-32,]),'K_IF':([36,53,54,55,56,64,65,66,69,79,86,87,88,99,103,105,106,107,108,109,110,118,167,168,169,170,171,182,201,202,203,214,218,264,265,268,269,296,324,325,333,335,336,337,338,339,340,341,342,343,344,345,346,347,352,353,354,355,],[78,78,78,78,-41,-24,-25,-26,-37,78,78,78,78,-8,-17,-18,-19,-20,-21,-22,-23,78,-37,-38,-42,78,-41,-9,-5,-6,-7,78,78,-38,-43,78,-28,78,-39,78,-27,78,78,78,78,-40,78,-33,78,-35,78,-34,78,-36,-29,-31,-30,-32,]),'LBRACKET':([41,45,47,51,80,112,124,144,148,156,174,180,192,311,330,],[81,84,85,95,123,95,185,204,185,207,95,185,243,204,95,]),'ICONSTANT':([42,43,68,80,81,82,83,84,85,89,90,91,92,93,94,95,96,104,111,120,121,123,129,130,131,132,133,134,148,156,159,160,161,164,165,166,177,185,188,189,190,191,192,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,240,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,260,261,297,298,319,320,326,327,],[-155,-98,113,-155,132,-94,-97,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,190,-142,132,-144,-145,-146,-149,-149,132,132,-98,132,132,132,132,132,132,132,-147,-148,-150,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-155,-155,-95,-96,132,-139,-140,-141,-143,132,132,132,132,132,132,132,132,132,132,132,132,-151,-152,-151,-152,-153,-154,]),'DCONSTANT':([42,43,68,80,81,82,83,84,85,89,90,91,92,93,94,95,96,104,111,120,121,123,129,130,131,132,133,134,148,156,159,160,161,164,165,166,177,185,188,189,190,191,192,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,240,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,260,261,297,298,319,320,326,327,],[-155,-98,114,-155,133,-94,-97,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,191,-142,133,-144,-145,-146,-149,-149,133,133,-98,133,133,133,133,133,133,133,-147,-148,-150,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-155,-155,-95,-96,133,-139,-140,-141,-143,133,133,133,133,133,133,133,133,133,133,133,133,-151,-152,-151,-152,-153,-154,]),'SCONSTANT':([42,43,68,80,81,82,83,84,85,89,90,91,92,93,94,95,96,104,111,120,121,123,130,131,132,133,134,148,156,159,160,161,164,165,166,177,185,188,189,190,191,192,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,240,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,260,261,297,298,319,320,326,327,],[-155,-98,115,-155,134,-94,-97,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-142,134,-144,-145,-146,-149,-149,134,134,-98,134,134,134,134,134,134,134,-147,-148,-150,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-155,-155,-95,-96,134,-139,-140,-141,-143,134,134,134,134,134,134,134,134,134,134,134,134,-151,-152,-151,-152,-153,-154,]),'MINUS':([42,43,80,81,82,83,84,85,89,90,91,92,93,94,95,96,104,111,120,121,123,124,128,130,131,132,133,134,144,148,156,159,160,161,164,165,166,177,180,185,188,189,190,191,192,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,239,240,243,244,245,246,247,250,251,252,253,254,255,256,257,258,259,260,261,297,298,301,302,311,319,320,326,327,],[-155,-98,-155,129,-94,-97,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-149,189,-142,129,-144,-145,-146,-149,-149,-149,129,129,-98,129,129,129,129,-149,129,129,129,-147,-148,-150,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-155,-155,-95,-96,129,-139,-140,-141,-143,129,129,129,129,129,129,129,129,129,129,129,129,-151,-152,-151,-152,-149,-151,-152,-153,-154,]),'ASSIGN_DIVIDE':([51,112,144,174,205,206,301,302,311,330,],[90,90,90,90,251,257,251,257,90,90,]),'ASSIGN_MULTIPLY':([51,112,144,174,205,206,301,302,311,330,],[91,91,91,91,252,258,252,258,91,91,]),'ASSIGN_PLUS':([51,112,144,174,205,206,301,302,311,330,],[92,92,92,92,253,259,253,259,92,92,]),'ASSIGN_MINUS':([51,112,144,174,205,206,301,302,311,330,],[93,93,93,93,254,260,254,260,93,93,]),'ASSIGN_MOD':([51,112,144,174,205,206,301,302,311,330,],[94,94,94,94,255,261,255,261,94,94,]),'INCREMENT':([51,124,330,],[97,97,97,]),'DECREMENT':([51,124,330,],[98,98,98,]),'RBRACKET':([81,84,85,97,98,124,126,127,128,130,132,133,134,136,137,139,140,148,154,155,183,184,190,191,192,237,238,241,242,244,245,246,247,248,249,262,263,297,298,299,300,326,327,],[125,135,138,-65,-66,-149,186,187,-138,-142,-144,-145,-146,197,198,199,200,-149,205,206,235,236,-147,-148,-150,297,298,-136,-137,-139,-140,-141,-143,301,302,319,320,-151,-152,326,327,-153,-154,]),'NOT':([120,121,216,217,],[177,177,177,177,]),'DIVIDE':([124,130,132,133,134,144,148,156,180,190,191,192,247,297,298,301,302,311,319,320,326,327,],[-149,193,-144,-145,-146,-149,-149,-149,-149,-147,-148,-150,-143,-151,-152,-151,-152,-149,-151,-152,-153,-154,]),'MULTIPLY':([124,130,132,133,134,144,148,156,180,190,191,192,247,297,298,301,302,311,319,320,326,327,],[-149,194,-144,-145,-146,-149,-149,-149,-149,-147,-148,-150,-143,-151,-152,-151,-152,-149,-151,-152,-153,-154,]),'MOD':([124,130,132,133,134,144,148,156,180,190,191,192,247,297,298,301,302,311,319,320,326,327,],[-149,195,-144,-145,-146,-149,-149,-149,-149,-147,-148,-150,-143,-151,-152,-151,-152,-149,-151,-152,-153,-154,]),'PLUS':([124,128,130,132,133,134,144,148,180,190,191,192,244,245,246,247,297,298,301,302,311,326,327,],[-149,188,-142,-144,-145,-146,-149,-149,-149,-147,-148,-150,-139,-140,-141,-143,-151,-152,-151,-152,-149,-153,-154,]),'DEQ':([128,130,132,133,134,148,178,179,180,190,191,192,208,213,241,242,244,245,246,247,297,298,326,327,],[-138,-142,-144,-145,-146,-149,222,228,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-151,-152,-153,-154,]),'GEQ':([128,130,132,133,134,148,178,179,180,190,191,192,208,213,241,242,244,245,246,247,297,298,326,327,],[-138,-142,-144,-145,-146,-149,223,229,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-151,-152,-153,-154,]),'GT':([128,130,132,133,134,148,178,179,180,190,191,192,208,213,241,242,244,245,246,247,297,298,326,327,],[-138,-142,-144,-145,-146,-149,224,230,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-151,-152,-153,-154,]),'LEQ':([128,130,132,133,134,148,178,179,180,190,191,192,208,213,241,242,244,245,246,247,297,298,326,327,],[-138,-142,-144,-145,-146,-149,225,231,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-151,-152,-153,-154,]),'LT':([128,130,132,133,134,148,178,179,180,190,191,192,208,213,241,242,244,245,246,247,297,298,326,327,],[-138,-142,-144,-145,-146,-149,226,232,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-151,-152,-153,-154,]),'NE':([128,130,132,133,134,148,178,179,180,190,191,192,208,213,241,242,244,245,246,247,297,298,326,327,],[-138,-142,-144,-145,-146,-149,227,233,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-151,-152,-153,-154,]),'DAND':([128,130,132,133,134,148,176,180,190,191,192,208,213,241,242,244,245,246,247,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,326,327,],[-138,-142,-144,-145,-146,-149,219,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-112,-118,-113,-119,-114,-120,-115,-121,-116,-122,-117,-123,-124,-130,-125,-131,-126,-132,-127,-133,-128,-134,-129,-135,-151,-152,-153,-154,]),'DOR':([128,130,132,133,134,148,176,180,190,191,192,208,213,241,242,244,245,246,247,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,326,327,],[-138,-142,-144,-145,-146,-149,220,-149,-147,-148,-150,-46,-45,-136,-137,-139,-140,-141,-143,-112,-118,-113,-119,-114,-120,-115,-121,-116,-122,-117,-123,-124,-130,-125,-131,-126,-132,-127,-133,-128,-134,-129,-135,-151,-152,-153,-154,]),'K_THEN':([234,],[296,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_body':([4,6,7,],[5,12,13,]),'function':([4,6,7,36,53,54,55,79,86,87,88,170,268,325,340,342,344,346,],[6,6,6,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'procedure':([4,6,7,36,53,54,55,79,86,87,88,170,268,325,340,342,344,346,],[7,7,7,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'empty':([4,6,7,21,22,23,24,27,28,30,31,32,36,41,42,45,47,53,54,55,79,80,86,87,88,96,111,118,156,159,160,162,164,165,166,170,186,187,197,198,199,200,214,218,235,236,268,296,319,320,325,335,336,337,338,340,342,344,346,],[8,8,8,29,29,29,29,29,29,43,43,43,56,43,43,43,43,56,56,56,56,43,56,56,56,161,161,171,43,161,161,43,161,161,161,56,43,43,43,43,43,43,171,171,43,43,56,171,43,43,56,171,171,171,171,56,56,56,56,]),'arguments':([21,22,23,24,27,28,],[26,33,34,35,38,39,]),'variable_definition':([21,22,23,24,27,28,36,53,54,55,79,86,87,88,118,119,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[27,27,27,27,27,27,57,57,57,57,57,57,57,57,57,173,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'identifiers':([30,31,32,41,42,45,47,80,96,111,156,159,160,162,164,165,166,186,187,197,198,199,200,235,236,319,320,],[40,44,46,82,83,82,82,82,159,164,82,164,164,212,164,164,164,239,240,239,240,239,240,239,240,239,240,]),'scope_body':([36,53,54,55,79,86,87,88,170,268,325,340,342,344,346,],[52,100,101,102,122,141,142,143,215,323,334,348,349,350,351,]),'statement':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[53,53,53,53,53,53,53,53,169,53,169,269,53,324,53,341,343,345,347,53,53,53,53,]),'variable_declaration':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'variable_assignment':([36,53,54,55,68,79,86,87,88,89,118,119,170,214,218,250,256,268,296,321,322,325,335,336,337,338,340,342,344,346,],[59,59,59,59,117,59,59,59,59,145,59,172,59,59,59,304,312,59,59,328,331,59,59,59,59,59,59,59,59,59,]),'function_call':([36,53,54,55,68,79,86,87,88,89,118,120,121,170,177,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,268,296,325,335,336,337,338,340,342,344,346,],[60,60,60,60,116,60,60,60,60,146,60,178,178,60,178,60,178,178,60,178,178,272,274,276,278,280,282,285,287,289,291,293,295,305,60,60,60,60,60,60,60,60,60,60,60,]),'function_return':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'procedure_call':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'variable_decrement_increment':([36,53,54,55,79,81,84,85,86,87,88,95,118,123,170,185,204,207,214,218,243,268,296,321,322,325,335,336,337,338,340,342,344,346,],[63,63,63,63,63,127,137,140,63,63,63,155,63,184,63,238,249,263,63,63,300,63,63,329,332,63,63,63,63,63,63,63,63,63,]),'if_statement':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'do_statement':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'while_statement':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'built_in_functions':([36,53,54,55,68,79,86,87,88,89,118,120,121,170,177,214,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,250,268,296,325,335,336,337,338,340,342,344,346,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'if':([36,53,54,55,79,86,87,88,118,170,214,218,268,296,325,335,336,337,338,340,342,344,346,],[69,69,69,69,69,69,69,69,167,69,167,69,69,69,69,69,69,69,69,69,69,69,69,]),'expression':([81,84,85,89,90,91,92,93,94,95,104,120,121,123,131,177,185,188,189,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,243,250,251,252,253,254,255,256,257,258,259,260,261,],[126,136,139,147,149,150,151,152,153,154,162,179,179,183,196,179,237,241,242,248,262,179,179,179,179,273,275,277,279,281,283,284,286,288,290,292,294,299,303,306,307,308,309,310,313,314,315,316,317,318,]),'term':([81,84,85,89,90,91,92,93,94,95,96,104,111,120,121,123,131,159,160,164,165,166,177,185,188,189,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,243,250,251,252,253,254,255,256,257,258,259,260,261,],[128,128,128,128,128,128,128,128,128,128,160,128,165,128,128,128,128,165,165,165,165,165,128,128,128,128,244,245,246,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'factor':([81,84,85,89,90,91,92,93,94,95,96,104,111,120,121,123,131,159,160,164,165,166,177,185,188,189,193,194,195,204,207,216,217,219,220,222,223,224,225,226,227,228,229,230,231,232,233,243,250,251,252,253,254,255,256,257,258,259,260,261,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'function_call_args':([96,111,159,160,164,165,166,],[157,163,210,211,210,211,157,]),'procedure_call_args':([96,],[158,]),'after_else':([118,214,],[168,264,]),'boolean_logic':([120,121,216,217,],[175,181,266,267,]),'arithmetic_logic':([120,121,177,216,217,219,220,],[176,176,221,176,176,270,271,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> K_PROGRAM IDENTIFIER LCURLY program_body RCURLY','program',5,'p_program','simple_ast.py',601),
  ('program_body -> function program_body','program_body',2,'p_program_body','simple_ast.py',610),
  ('program_body -> procedure program_body','program_body',2,'p_program_body','simple_ast.py',611),
  ('program_body -> empty','program_body',1,'p_program_body','simple_ast.py',612),
  ('function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY','function',9,'p_function','simple_ast.py',626),
  ('function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY','function',9,'p_function','simple_ast.py',627),
  ('function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY','function',9,'p_function','simple_ast.py',628),
  ('procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY','procedure',7,'p_procedure','simple_ast.py',638),
  ('procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY','procedure',8,'p_procedure_with_args','simple_ast.py',648),
  ('arguments -> variable_definition arguments','arguments',2,'p_arguments','simple_ast.py',659),
  ('arguments -> COMMA arguments','arguments',2,'p_arguments_with_comma','simple_ast.py',667),
  ('arguments -> empty','arguments',1,'p_arguments_empty','simple_ast.py',675),
  ('scope_body -> statement scope_body','scope_body',2,'p_scope_body','simple_ast.py',682),
  ('scope_body -> function scope_body','scope_body',2,'p_scope_body','simple_ast.py',683),
  ('scope_body -> procedure scope_body','scope_body',2,'p_scope_body','simple_ast.py',684),
  ('scope_body -> empty','scope_body',1,'p_scope_body','simple_ast.py',685),
  ('statement -> variable_definition SEMI','statement',2,'p_statement','simple_ast.py',699),
  ('statement -> variable_declaration SEMI','statement',2,'p_statement','simple_ast.py',700),
  ('statement -> variable_assignment SEMI','statement',2,'p_statement','simple_ast.py',701),
  ('statement -> function_call SEMI','statement',2,'p_statement','simple_ast.py',702),
  ('statement -> function_return SEMI','statement',2,'p_statement','simple_ast.py',703),
  ('statement -> procedure_call SEMI','statement',2,'p_statement','simple_ast.py',704),
  ('statement -> variable_decrement_increment SEMI','statement',2,'p_statement','simple_ast.py',705),
  ('statement -> if_statement','statement',1,'p_statement_looping','simple_ast.py',713),
  ('statement -> do_statement','statement',1,'p_statement_looping','simple_ast.py',714),
  ('statement -> while_statement','statement',1,'p_statement_looping','simple_ast.py',715),
  ('while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY','while_statement',7,'p_while_statement_with_braces','simple_ast.py',723),
  ('while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement','while_statement',5,'p_while_statement_without_braces','simple_ast.py',731),
  ('do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY','do_statement',11,'p_do_statement','simple_ast.py',739),
  ('do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY','do_statement',11,'p_do_statement','simple_ast.py',740),
  ('do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY','do_statement',11,'p_do_statement','simple_ast.py',741),
  ('do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY','do_statement',11,'p_do_statement','simple_ast.py',742),
  ('do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement','do_statement',9,'p_do_statement_without_braces','simple_ast.py',750),
  ('do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement','do_statement',9,'p_do_statement_without_braces','simple_ast.py',751),
  ('do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement','do_statement',9,'p_do_statement_without_braces','simple_ast.py',752),
  ('do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement','do_statement',9,'p_do_statement_without_braces','simple_ast.py',753),
  ('if_statement -> if','if_statement',1,'p_if_statement_only','simple_ast.py',761),
  ('if_statement -> if K_ELSE after_else','if_statement',3,'p_if_statement','simple_ast.py',769),
  ('if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement','if',6,'p_if_without_braces','simple_ast.py',777),
  ('if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY','if',8,'p_if_with_braces','simple_ast.py',785),
  ('if -> empty','if',1,'p_if_empty','simple_ast.py',793),
  ('after_else -> statement','after_else',1,'p_after_else_1_without_braces','simple_ast.py',801),
  ('after_else -> LCURLY scope_body RCURLY','after_else',3,'p_after_else_1_with_braces','simple_ast.py',810),
  ('after_else -> if K_ELSE after_else','after_else',3,'p_after_else_2','simple_ast.py',819),
  ('function_call -> built_in_functions LPAREN function_call_args RPAREN','function_call',4,'p_built_in_function_call','simple_ast.py',828),
  ('function_call -> IDENTIFIER LPAREN function_call_args RPAREN','function_call',4,'p_created_function_call','simple_ast.py',836),
  ('function_return -> K_RETURN IDENTIFIER','function_return',2,'p_function_return_identifier','simple_ast.py',848),
  ('function_return -> K_RETURN ICONSTANT','function_return',2,'p_function_return_constant','simple_ast.py',860),
  ('function_return -> K_RETURN DCONSTANT','function_return',2,'p_function_return_constant','simple_ast.py',861),
  ('function_return -> K_RETURN SCONSTANT','function_return',2,'p_function_return_constant','simple_ast.py',862),
  ('function_return -> K_RETURN function_call','function_return',2,'p_function_return_other','simple_ast.py',874),
  ('function_return -> K_RETURN variable_assignment','function_return',2,'p_function_return_other','simple_ast.py',875),
  ('procedure_call -> IDENTIFIER LPAREN procedure_call_args RPAREN','procedure_call',4,'p_procedure_call','simple_ast.py',884),
  ('built_in_functions -> K_PRINT_INTEGER','built_in_functions',1,'p_built_in_functions','simple_ast.py',893),
  ('built_in_functions -> K_PRINT_DOUBLE','built_in_functions',1,'p_built_in_functions','simple_ast.py',894),
  ('built_in_functions -> K_PRINT_STRING','built_in_functions',1,'p_built_in_functions','simple_ast.py',895),
  ('built_in_functions -> K_READ_INTEGER','built_in_functions',1,'p_built_in_functions','simple_ast.py',896),
  ('built_in_functions -> K_READ_DOUBLE','built_in_functions',1,'p_built_in_functions','simple_ast.py',897),
  ('built_in_functions -> K_READ_STRING','built_in_functions',1,'p_built_in_functions','simple_ast.py',898),
  ('procedure_call_args -> identifiers','procedure_call_args',1,'p_procedure_call_args','simple_ast.py',906),
  ('procedure_call_args -> term','procedure_call_args',1,'p_procedure_call_args','simple_ast.py',907),
  ('function_call_args -> identifiers function_call_args','function_call_args',2,'p_function_call_args','simple_ast.py',916),
  ('function_call_args -> term function_call_args','function_call_args',2,'p_function_call_args','simple_ast.py',917),
  ('function_call_args -> empty','function_call_args',1,'p_function_call_args','simple_ast.py',918),
  ('variable_decrement_increment -> IDENTIFIER INCREMENT','variable_decrement_increment',2,'p_variable_decrement_increment','simple_ast.py',929),
  ('variable_decrement_increment -> IDENTIFIER DECREMENT','variable_decrement_increment',2,'p_variable_decrement_increment','simple_ast.py',930),
  ('variable_assignment -> IDENTIFIER ASSIGN variable_assignment','variable_assignment',3,'p_variable_assignment','simple_ast.py',944),
  ('variable_assignment -> IDENTIFIER ASSIGN function_call','variable_assignment',3,'p_variable_assignment','simple_ast.py',945),
  ('variable_assignment -> IDENTIFIER ASSIGN expression','variable_assignment',3,'p_variable_assignment','simple_ast.py',946),
  ('variable_assignment -> IDENTIFIER ASSIGN_DIVIDE expression','variable_assignment',3,'p_variable_assignment','simple_ast.py',947),
  ('variable_assignment -> IDENTIFIER ASSIGN_MULTIPLY expression','variable_assignment',3,'p_variable_assignment','simple_ast.py',948),
  ('variable_assignment -> IDENTIFIER ASSIGN_PLUS expression','variable_assignment',3,'p_variable_assignment','simple_ast.py',949),
  ('variable_assignment -> IDENTIFIER ASSIGN_MINUS expression','variable_assignment',3,'p_variable_assignment','simple_ast.py',950),
  ('variable_assignment -> IDENTIFIER ASSIGN_MOD expression','variable_assignment',3,'p_variable_assignment','simple_ast.py',951),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',964),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',965),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',966),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',967),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',968),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',969),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',970),
  ('variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',971),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',972),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',973),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',974),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',975),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',976),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',977),
  ('variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression','variable_assignment',6,'p_variable_assignment_array','simple_ast.py',978),
  ('variable_declaration -> variable_definition ASSIGN expression identifiers','variable_declaration',4,'p_variable_declaration','simple_ast.py',991),
  ('variable_definition -> K_INTEGER identifiers','variable_definition',2,'p_variable_definition','simple_ast.py',1003),
  ('variable_definition -> K_DOUBLE identifiers','variable_definition',2,'p_variable_definition','simple_ast.py',1004),
  ('variable_definition -> K_STRING identifiers','variable_definition',2,'p_variable_definition','simple_ast.py',1005),
  ('identifiers -> IDENTIFIER identifiers','identifiers',2,'p_identifiers','simple_ast.py',1020),
  ('identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers','identifiers',5,'p_identifiers_array','simple_ast.py',1030),
  ('identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers','identifiers',5,'p_identifiers_array','simple_ast.py',1031),
  ('identifiers -> COMMA identifiers','identifiers',2,'p_identifiers_comma','simple_ast.py',1041),
  ('identifiers -> empty','identifiers',1,'p_identifiers_empty','simple_ast.py',1049),
  ('variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET','variable_definition',4,'p_variable_definition_array','simple_ast.py',1057),
  ('variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET','variable_definition',4,'p_variable_definition_array','simple_ast.py',1058),
  ('variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET','variable_definition',4,'p_variable_definition_array','simple_ast.py',1059),
  ('variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET','variable_definition',5,'p_variable_definition_array_other','simple_ast.py',1073),
  ('variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET','variable_definition',5,'p_variable_definition_array_other','simple_ast.py',1074),
  ('variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET','variable_definition',5,'p_variable_definition_array_other','simple_ast.py',1075),
  ('variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET','variable_definition',5,'p_variable_definition_array_other','simple_ast.py',1076),
  ('variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET','variable_definition',5,'p_variable_definition_array_other','simple_ast.py',1077),
  ('variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET','variable_definition',5,'p_variable_definition_array_other','simple_ast.py',1078),
  ('boolean_logic -> arithmetic_logic DAND arithmetic_logic','boolean_logic',3,'p_boolean_logic_1','simple_ast.py',1092),
  ('boolean_logic -> arithmetic_logic DOR arithmetic_logic','boolean_logic',3,'p_boolean_logic_1','simple_ast.py',1093),
  ('boolean_logic -> NOT arithmetic_logic','boolean_logic',2,'p_boolean_logic_2','simple_ast.py',1110),
  ('boolean_logic -> arithmetic_logic','boolean_logic',1,'p_boolean_logic_3','simple_ast.py',1127),
  ('arithmetic_logic -> function_call DEQ function_call','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1136),
  ('arithmetic_logic -> function_call GEQ function_call','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1137),
  ('arithmetic_logic -> function_call GT function_call','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1138),
  ('arithmetic_logic -> function_call LEQ function_call','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1139),
  ('arithmetic_logic -> function_call LT function_call','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1140),
  ('arithmetic_logic -> function_call NE function_call','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1141),
  ('arithmetic_logic -> function_call DEQ expression','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1142),
  ('arithmetic_logic -> function_call GEQ expression','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1143),
  ('arithmetic_logic -> function_call GT expression','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1144),
  ('arithmetic_logic -> function_call LEQ expression','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1145),
  ('arithmetic_logic -> function_call LT expression','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1146),
  ('arithmetic_logic -> function_call NE expression','arithmetic_logic',3,'p_arithmetic_logic_function_call','simple_ast.py',1147),
  ('arithmetic_logic -> expression DEQ expression','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1165),
  ('arithmetic_logic -> expression GEQ expression','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1166),
  ('arithmetic_logic -> expression GT expression','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1167),
  ('arithmetic_logic -> expression LEQ expression','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1168),
  ('arithmetic_logic -> expression LT expression','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1169),
  ('arithmetic_logic -> expression NE expression','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1170),
  ('arithmetic_logic -> expression DEQ function_call','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1171),
  ('arithmetic_logic -> expression GEQ function_call','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1172),
  ('arithmetic_logic -> expression GT function_call','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1173),
  ('arithmetic_logic -> expression LEQ function_call','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1174),
  ('arithmetic_logic -> expression LT function_call','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1175),
  ('arithmetic_logic -> expression NE function_call','arithmetic_logic',3,'p_arithmetic_logic_expression','simple_ast.py',1176),
  ('expression -> term PLUS expression','expression',3,'p_expression_term_plus_minus_expression','simple_ast.py',1194),
  ('expression -> term MINUS expression','expression',3,'p_expression_term_plus_minus_expression','simple_ast.py',1195),
  ('expression -> term','expression',1,'p_expression_term','simple_ast.py',1211),
  ('term -> factor DIVIDE term','term',3,'p_term_factor_divide_multiply_term','simple_ast.py',1219),
  ('term -> factor MULTIPLY term','term',3,'p_term_factor_divide_multiply_term','simple_ast.py',1220),
  ('term -> factor MOD term','term',3,'p_term_factor_divide_multiply_term','simple_ast.py',1221),
  ('term -> factor','term',1,'p_term_factor','simple_ast.py',1230),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_paren_expression','simple_ast.py',1238),
  ('factor -> ICONSTANT','factor',1,'p_factor_constant','simple_ast.py',1247),
  ('factor -> DCONSTANT','factor',1,'p_factor_constant','simple_ast.py',1248),
  ('factor -> SCONSTANT','factor',1,'p_factor_constant','simple_ast.py',1249),
  ('factor -> MINUS ICONSTANT','factor',2,'p_factor_negative_constant','simple_ast.py',1261),
  ('factor -> MINUS DCONSTANT','factor',2,'p_factor_negative_constant','simple_ast.py',1262),
  ('factor -> IDENTIFIER','factor',1,'p_factor_identifier','simple_ast.py',1273),
  ('factor -> MINUS IDENTIFIER','factor',2,'p_factor_negative_identifier','simple_ast.py',1285),
  ('factor -> IDENTIFIER LBRACKET expression RBRACKET','factor',4,'p_factor_array_identifier','simple_ast.py',1297),
  ('factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET','factor',4,'p_factor_array_identifier','simple_ast.py',1298),
  ('factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET','factor',5,'p_factor_array_negative_identifier','simple_ast.py',1310),
  ('factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET','factor',5,'p_factor_array_negative_identifier','simple_ast.py',1311),
  ('empty -> <empty>','empty',0,'p_empty','simple_ast.py',1323),
]
