Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    K_EXIT
    PERIOD

Grammar

Rule 0     S' -> program
Rule 1     program -> K_PROGRAM IDENTIFIER LCURLY program_body RCURLY
Rule 2     program_body -> function program_body
Rule 3     program_body -> procedure program_body
Rule 4     program_body -> empty
Rule 5     function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
Rule 6     function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
Rule 7     function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
Rule 8     procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
Rule 9     procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
Rule 10    arguments -> variable_definition arguments
Rule 11    arguments -> COMMA arguments
Rule 12    arguments -> empty
Rule 13    scope_body -> statement scope_body
Rule 14    scope_body -> function scope_body
Rule 15    scope_body -> procedure scope_body
Rule 16    scope_body -> empty
Rule 17    statement -> variable_definition SEMI
Rule 18    statement -> variable_declaration SEMI
Rule 19    statement -> variable_assignment SEMI
Rule 20    statement -> function_call SEMI
Rule 21    statement -> function_return SEMI
Rule 22    statement -> procedure_call SEMI
Rule 23    statement -> variable_decrement_increment SEMI
Rule 24    statement -> if_statement
Rule 25    statement -> do_statement
Rule 26    statement -> while_statement
Rule 27    while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
Rule 28    while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement
Rule 29    do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
Rule 30    do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
Rule 31    do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
Rule 32    do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
Rule 33    do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
Rule 34    do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
Rule 35    do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
Rule 36    do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
Rule 37    if_statement -> if
Rule 38    if_statement -> if K_ELSE after_else
Rule 39    if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement
Rule 40    if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
Rule 41    if -> empty
Rule 42    after_else -> statement
Rule 43    after_else -> LCURLY scope_body RCURLY
Rule 44    after_else -> if K_ELSE after_else
Rule 45    function_call -> built_in_functions LPAREN function_call_args RPAREN
Rule 46    function_call -> IDENTIFIER LPAREN function_call_args RPAREN
Rule 47    function_return -> K_RETURN IDENTIFIER
Rule 48    function_return -> K_RETURN ICONSTANT
Rule 49    function_return -> K_RETURN DCONSTANT
Rule 50    function_return -> K_RETURN SCONSTANT
Rule 51    function_return -> K_RETURN function_call
Rule 52    function_return -> K_RETURN variable_assignment
Rule 53    procedure_call -> IDENTIFIER LPAREN procedure_call_args RPAREN
Rule 54    built_in_functions -> K_PRINT_INTEGER
Rule 55    built_in_functions -> K_PRINT_DOUBLE
Rule 56    built_in_functions -> K_PRINT_STRING
Rule 57    built_in_functions -> K_READ_INTEGER
Rule 58    built_in_functions -> K_READ_DOUBLE
Rule 59    built_in_functions -> K_READ_STRING
Rule 60    procedure_call_args -> identifiers
Rule 61    procedure_call_args -> term
Rule 62    function_call_args -> identifiers function_call_args
Rule 63    function_call_args -> term function_call_args
Rule 64    function_call_args -> empty
Rule 65    variable_decrement_increment -> IDENTIFIER INCREMENT
Rule 66    variable_decrement_increment -> IDENTIFIER DECREMENT
Rule 67    variable_assignment -> IDENTIFIER ASSIGN variable_assignment
Rule 68    variable_assignment -> IDENTIFIER ASSIGN function_call
Rule 69    variable_assignment -> IDENTIFIER ASSIGN expression
Rule 70    variable_assignment -> IDENTIFIER ASSIGN_DIVIDE expression
Rule 71    variable_assignment -> IDENTIFIER ASSIGN_MULTIPLY expression
Rule 72    variable_assignment -> IDENTIFIER ASSIGN_PLUS expression
Rule 73    variable_assignment -> IDENTIFIER ASSIGN_MINUS expression
Rule 74    variable_assignment -> IDENTIFIER ASSIGN_MOD expression
Rule 75    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
Rule 76    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
Rule 77    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
Rule 78    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
Rule 79    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
Rule 80    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
Rule 81    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
Rule 82    variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
Rule 83    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
Rule 84    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
Rule 85    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
Rule 86    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
Rule 87    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
Rule 88    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
Rule 89    variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
Rule 90    variable_declaration -> variable_definition ASSIGN expression identifiers
Rule 91    variable_definition -> K_INTEGER identifiers
Rule 92    variable_definition -> K_DOUBLE identifiers
Rule 93    variable_definition -> K_STRING identifiers
Rule 94    identifiers -> IDENTIFIER identifiers
Rule 95    identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers
Rule 96    identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
Rule 97    identifiers -> COMMA identifiers
Rule 98    identifiers -> empty
Rule 99    variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET
Rule 100   variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET
Rule 101   variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET
Rule 102   variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
Rule 103   variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
Rule 104   variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET
Rule 105   variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
Rule 106   variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
Rule 107   variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
Rule 108   boolean_logic -> arithmetic_logic DAND arithmetic_logic
Rule 109   boolean_logic -> arithmetic_logic DOR arithmetic_logic
Rule 110   boolean_logic -> NOT arithmetic_logic
Rule 111   boolean_logic -> arithmetic_logic
Rule 112   arithmetic_logic -> function_call DEQ function_call
Rule 113   arithmetic_logic -> function_call GEQ function_call
Rule 114   arithmetic_logic -> function_call GT function_call
Rule 115   arithmetic_logic -> function_call LEQ function_call
Rule 116   arithmetic_logic -> function_call LT function_call
Rule 117   arithmetic_logic -> function_call NE function_call
Rule 118   arithmetic_logic -> function_call DEQ expression
Rule 119   arithmetic_logic -> function_call GEQ expression
Rule 120   arithmetic_logic -> function_call GT expression
Rule 121   arithmetic_logic -> function_call LEQ expression
Rule 122   arithmetic_logic -> function_call LT expression
Rule 123   arithmetic_logic -> function_call NE expression
Rule 124   arithmetic_logic -> expression DEQ expression
Rule 125   arithmetic_logic -> expression GEQ expression
Rule 126   arithmetic_logic -> expression GT expression
Rule 127   arithmetic_logic -> expression LEQ expression
Rule 128   arithmetic_logic -> expression LT expression
Rule 129   arithmetic_logic -> expression NE expression
Rule 130   arithmetic_logic -> expression DEQ function_call
Rule 131   arithmetic_logic -> expression GEQ function_call
Rule 132   arithmetic_logic -> expression GT function_call
Rule 133   arithmetic_logic -> expression LEQ function_call
Rule 134   arithmetic_logic -> expression LT function_call
Rule 135   arithmetic_logic -> expression NE function_call
Rule 136   expression -> term PLUS expression
Rule 137   expression -> term MINUS expression
Rule 138   expression -> term
Rule 139   term -> factor DIVIDE term
Rule 140   term -> factor MULTIPLY term
Rule 141   term -> factor MOD term
Rule 142   term -> factor
Rule 143   factor -> LPAREN expression RPAREN
Rule 144   factor -> ICONSTANT
Rule 145   factor -> DCONSTANT
Rule 146   factor -> SCONSTANT
Rule 147   factor -> MINUS ICONSTANT
Rule 148   factor -> MINUS DCONSTANT
Rule 149   factor -> IDENTIFIER
Rule 150   factor -> MINUS IDENTIFIER
Rule 151   factor -> IDENTIFIER LBRACKET expression RBRACKET
Rule 152   factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
Rule 153   factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET
Rule 154   factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
Rule 155   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 67 68 69 75 76 77 83 84 90
ASSIGN_DIVIDE        : 70 78 85
ASSIGN_MINUS         : 73 81 88
ASSIGN_MOD           : 74 82 89
ASSIGN_MULTIPLY      : 71 79 86
ASSIGN_PLUS          : 72 80 87
COMMA                : 11 97
COMMENT              : 
DAND                 : 108
DCONSTANT            : 49 145 148
DECREMENT            : 66
DEQ                  : 112 118 124 130
DIVIDE               : 139
DOR                  : 109
GEQ                  : 113 119 125 131
GT                   : 114 120 126 132
ICONSTANT            : 48 144 147
IDENTIFIER           : 1 5 6 7 8 9 46 47 53 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 94 95 96 99 100 101 102 103 104 105 106 107 149 150 151 152 153 154
INCREMENT            : 65
K_DO                 : 29 30 31 32 33 34 35 36
K_DOUBLE             : 6 92 100 103 106
K_ELSE               : 38 44
K_EXIT               : 
K_FUNCTION           : 5 6 7
K_IF                 : 39 40
K_INTEGER            : 5 91 99 102 105
K_PRINT_DOUBLE       : 55
K_PRINT_INTEGER      : 54
K_PRINT_STRING       : 56
K_PROCEDURE          : 8 9
K_PROGRAM            : 1
K_READ_DOUBLE        : 58
K_READ_INTEGER       : 57
K_READ_STRING        : 59
K_RETURN             : 47 48 49 50 51 52
K_STRING             : 7 93 101 104 107
K_THEN               : 39 40
K_WHILE              : 27 28
LBRACKET             : 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 95 96 99 100 101 102 103 104 105 106 107 151 152 153 154
LCURLY               : 1 5 6 7 8 9 27 29 30 31 32 40 43
LEQ                  : 115 121 127 133
LPAREN               : 5 6 7 8 9 27 28 29 30 31 32 33 34 35 36 39 40 45 46 53 143
LT                   : 116 122 128 134
MINUS                : 137 147 148 150 153 154
MOD                  : 141
MULTIPLY             : 140
NE                   : 117 123 129 135
NOT                  : 110
PERIOD               : 
PLUS                 : 136
RBRACKET             : 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 95 96 99 100 101 102 103 104 105 106 107 151 152 153 154
RCURLY               : 1 5 6 7 8 9 27 29 30 31 32 40 43
RPAREN               : 5 6 7 8 9 27 28 29 30 31 32 33 34 35 36 39 40 45 46 53 143
SCONSTANT            : 50 146
SEMI                 : 17 18 19 20 21 22 23 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36
error                : 

Nonterminals, with rules where they appear

after_else           : 38 44
arguments            : 5 6 7 9 10 11
arithmetic_logic     : 108 108 109 109 110 111
boolean_logic        : 27 28 29 30 31 32 33 34 35 36 39 40
built_in_functions   : 45
do_statement         : 25
empty                : 4 12 16 41 64 98
expression           : 69 70 71 72 73 74 75 76 77 77 78 78 79 79 80 80 81 81 82 82 84 85 86 87 88 89 90 95 102 103 104 118 119 120 121 122 123 124 124 125 125 126 126 127 127 128 128 129 129 130 131 132 133 134 135 136 137 143 151 153
factor               : 139 140 141 142
function             : 2 14
function_call        : 20 51 68 76 112 112 113 113 114 114 115 115 116 116 117 117 118 119 120 121 122 123 130 131 132 133 134 135
function_call_args   : 45 46 62 63
function_return      : 21
identifiers          : 60 62 90 91 92 93 94 95 96 97
if                   : 37 38 44
if_statement         : 24
procedure            : 3 15
procedure_call       : 22
procedure_call_args  : 53
program              : 0
program_body         : 1 2 3
scope_body           : 5 6 7 8 9 13 14 15 27 29 30 31 32 40 43
statement            : 13 28 33 34 35 36 39 42
term                 : 61 63 136 137 138 139 140 141
variable_assignment  : 19 29 29 30 31 33 33 34 35 52 67 75 83
variable_declaration : 18
variable_decrement_increment : 23 31 32 35 36 83 84 85 86 87 88 89 96 105 106 107 152 154
variable_definition  : 10 17 30 32 34 36 90
while_statement      : 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . K_PROGRAM IDENTIFIER LCURLY program_body RCURLY

    K_PROGRAM       shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> K_PROGRAM . IDENTIFIER LCURLY program_body RCURLY

    IDENTIFIER      shift and go to state 3


state 3

    (1) program -> K_PROGRAM IDENTIFIER . LCURLY program_body RCURLY

    LCURLY          shift and go to state 4


state 4

    (1) program -> K_PROGRAM IDENTIFIER LCURLY . program_body RCURLY
    (2) program_body -> . function program_body
    (3) program_body -> . procedure program_body
    (4) program_body -> . empty
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .

    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)

    program_body                   shift and go to state 5
    function                       shift and go to state 6
    procedure                      shift and go to state 7
    empty                          shift and go to state 8

state 5

    (1) program -> K_PROGRAM IDENTIFIER LCURLY program_body . RCURLY

    RCURLY          shift and go to state 11


state 6

    (2) program_body -> function . program_body
    (2) program_body -> . function program_body
    (3) program_body -> . procedure program_body
    (4) program_body -> . empty
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .

    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)

    function                       shift and go to state 6
    program_body                   shift and go to state 12
    procedure                      shift and go to state 7
    empty                          shift and go to state 8

state 7

    (3) program_body -> procedure . program_body
    (2) program_body -> . function program_body
    (3) program_body -> . procedure program_body
    (4) program_body -> . empty
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .

    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)

    procedure                      shift and go to state 7
    program_body                   shift and go to state 13
    function                       shift and go to state 6
    empty                          shift and go to state 8

state 8

    (4) program_body -> empty .

    RCURLY          reduce using rule 4 (program_body -> empty .)


state 9

    (5) function -> K_FUNCTION . K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> K_FUNCTION . K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> K_FUNCTION . K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY

    K_INTEGER       shift and go to state 14
    K_DOUBLE        shift and go to state 15
    K_STRING        shift and go to state 16


state 10

    (8) procedure -> K_PROCEDURE . IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> K_PROCEDURE . IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY

    IDENTIFIER      shift and go to state 17


state 11

    (1) program -> K_PROGRAM IDENTIFIER LCURLY program_body RCURLY .

    $end            reduce using rule 1 (program -> K_PROGRAM IDENTIFIER LCURLY program_body RCURLY .)


state 12

    (2) program_body -> function program_body .

    RCURLY          reduce using rule 2 (program_body -> function program_body .)


state 13

    (3) program_body -> procedure program_body .

    RCURLY          reduce using rule 3 (program_body -> procedure program_body .)


state 14

    (5) function -> K_FUNCTION K_INTEGER . IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY

    IDENTIFIER      shift and go to state 18


state 15

    (6) function -> K_FUNCTION K_DOUBLE . IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY

    IDENTIFIER      shift and go to state 19


state 16

    (7) function -> K_FUNCTION K_STRING . IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY

    IDENTIFIER      shift and go to state 20


state 17

    (8) procedure -> K_PROCEDURE IDENTIFIER . LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> K_PROCEDURE IDENTIFIER . LPAREN arguments RPAREN LCURLY scope_body RCURLY

    LPAREN          shift and go to state 21


state 18

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER . LPAREN arguments RPAREN LCURLY scope_body RCURLY

    LPAREN          shift and go to state 22


state 19

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER . LPAREN arguments RPAREN LCURLY scope_body RCURLY

    LPAREN          shift and go to state 23


state 20

    (7) function -> K_FUNCTION K_STRING IDENTIFIER . LPAREN arguments RPAREN LCURLY scope_body RCURLY

    LPAREN          shift and go to state 24


state 21

    (8) procedure -> K_PROCEDURE IDENTIFIER LPAREN . RPAREN LCURLY scope_body RCURLY
    (9) procedure -> K_PROCEDURE IDENTIFIER LPAREN . arguments RPAREN LCURLY scope_body RCURLY
    (10) arguments -> . variable_definition arguments
    (11) arguments -> . COMMA arguments
    (12) arguments -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (155) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 25
    COMMA           shift and go to state 28
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32

  ! RPAREN          [ reduce using rule 155 (empty -> .) ]

    arguments                      shift and go to state 26
    variable_definition            shift and go to state 27
    empty                          shift and go to state 29

state 22

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN . arguments RPAREN LCURLY scope_body RCURLY
    (10) arguments -> . variable_definition arguments
    (11) arguments -> . COMMA arguments
    (12) arguments -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (155) empty -> .

    COMMA           shift and go to state 28
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    RPAREN          reduce using rule 155 (empty -> .)

    arguments                      shift and go to state 33
    variable_definition            shift and go to state 27
    empty                          shift and go to state 29

state 23

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN . arguments RPAREN LCURLY scope_body RCURLY
    (10) arguments -> . variable_definition arguments
    (11) arguments -> . COMMA arguments
    (12) arguments -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (155) empty -> .

    COMMA           shift and go to state 28
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    RPAREN          reduce using rule 155 (empty -> .)

    arguments                      shift and go to state 34
    variable_definition            shift and go to state 27
    empty                          shift and go to state 29

state 24

    (7) function -> K_FUNCTION K_STRING IDENTIFIER LPAREN . arguments RPAREN LCURLY scope_body RCURLY
    (10) arguments -> . variable_definition arguments
    (11) arguments -> . COMMA arguments
    (12) arguments -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (155) empty -> .

    COMMA           shift and go to state 28
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    RPAREN          reduce using rule 155 (empty -> .)

    arguments                      shift and go to state 35
    variable_definition            shift and go to state 27
    empty                          shift and go to state 29

state 25

    (8) procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN . LCURLY scope_body RCURLY

    LCURLY          shift and go to state 36


state 26

    (9) procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments . RPAREN LCURLY scope_body RCURLY

    RPAREN          shift and go to state 37


state 27

    (10) arguments -> variable_definition . arguments
    (10) arguments -> . variable_definition arguments
    (11) arguments -> . COMMA arguments
    (12) arguments -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (155) empty -> .

    COMMA           shift and go to state 28
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    RPAREN          reduce using rule 155 (empty -> .)

    variable_definition            shift and go to state 27
    arguments                      shift and go to state 38
    empty                          shift and go to state 29

state 28

    (11) arguments -> COMMA . arguments
    (10) arguments -> . variable_definition arguments
    (11) arguments -> . COMMA arguments
    (12) arguments -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (155) empty -> .

    COMMA           shift and go to state 28
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    RPAREN          reduce using rule 155 (empty -> .)

    arguments                      shift and go to state 39
    variable_definition            shift and go to state 27
    empty                          shift and go to state 29

state 29

    (12) arguments -> empty .

    RPAREN          reduce using rule 12 (arguments -> empty .)


state 30

    (91) variable_definition -> K_INTEGER . identifiers
    (99) variable_definition -> K_INTEGER . IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> K_INTEGER . IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> K_INTEGER . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    IDENTIFIER      shift and go to state 41
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 40
    empty                          shift and go to state 43

state 31

    (92) variable_definition -> K_DOUBLE . identifiers
    (100) variable_definition -> K_DOUBLE . IDENTIFIER LBRACKET RBRACKET
    (103) variable_definition -> K_DOUBLE . IDENTIFIER LBRACKET expression RBRACKET
    (106) variable_definition -> K_DOUBLE . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    IDENTIFIER      shift and go to state 45
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 44
    empty                          shift and go to state 43

state 32

    (93) variable_definition -> K_STRING . identifiers
    (101) variable_definition -> K_STRING . IDENTIFIER LBRACKET RBRACKET
    (104) variable_definition -> K_STRING . IDENTIFIER LBRACKET expression RBRACKET
    (107) variable_definition -> K_STRING . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    IDENTIFIER      shift and go to state 47
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 46
    empty                          shift and go to state 43

state 33

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments . RPAREN LCURLY scope_body RCURLY

    RPAREN          shift and go to state 48


state 34

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments . RPAREN LCURLY scope_body RCURLY

    RPAREN          shift and go to state 49


state 35

    (7) function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments . RPAREN LCURLY scope_body RCURLY

    RPAREN          shift and go to state 50


state 36

    (8) procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 52
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 37

    (9) procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN . LCURLY scope_body RCURLY

    LCURLY          shift and go to state 79


state 38

    (10) arguments -> variable_definition arguments .

    RPAREN          reduce using rule 10 (arguments -> variable_definition arguments .)


state 39

    (11) arguments -> COMMA arguments .

    RPAREN          reduce using rule 11 (arguments -> COMMA arguments .)


state 40

    (91) variable_definition -> K_INTEGER identifiers .

    COMMA           reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)
    K_INTEGER       reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)
    K_DOUBLE        reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)
    K_STRING        reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)
    RPAREN          reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)
    SEMI            reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)
    ASSIGN          reduce using rule 91 (variable_definition -> K_INTEGER identifiers .)


state 41

    (99) variable_definition -> K_INTEGER IDENTIFIER . LBRACKET RBRACKET
    (102) variable_definition -> K_INTEGER IDENTIFIER . LBRACKET expression RBRACKET
    (105) variable_definition -> K_INTEGER IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> IDENTIFIER . identifiers
    (95) identifiers -> IDENTIFIER . LBRACKET expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    LBRACKET        shift and go to state 81
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 82
    empty                          shift and go to state 43

state 42

    (97) identifiers -> COMMA . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)
    LPAREN          reduce using rule 155 (empty -> .)
    ICONSTANT       reduce using rule 155 (empty -> .)
    DCONSTANT       reduce using rule 155 (empty -> .)
    SCONSTANT       reduce using rule 155 (empty -> .)
    MINUS           reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 83
    empty                          shift and go to state 43

state 43

    (98) identifiers -> empty .

    COMMA           reduce using rule 98 (identifiers -> empty .)
    K_INTEGER       reduce using rule 98 (identifiers -> empty .)
    K_DOUBLE        reduce using rule 98 (identifiers -> empty .)
    K_STRING        reduce using rule 98 (identifiers -> empty .)
    RPAREN          reduce using rule 98 (identifiers -> empty .)
    SEMI            reduce using rule 98 (identifiers -> empty .)
    ASSIGN          reduce using rule 98 (identifiers -> empty .)
    IDENTIFIER      reduce using rule 98 (identifiers -> empty .)
    LPAREN          reduce using rule 98 (identifiers -> empty .)
    ICONSTANT       reduce using rule 98 (identifiers -> empty .)
    DCONSTANT       reduce using rule 98 (identifiers -> empty .)
    SCONSTANT       reduce using rule 98 (identifiers -> empty .)
    MINUS           reduce using rule 98 (identifiers -> empty .)


state 44

    (92) variable_definition -> K_DOUBLE identifiers .

    COMMA           reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)
    K_INTEGER       reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)
    K_DOUBLE        reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)
    K_STRING        reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)
    RPAREN          reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)
    SEMI            reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)
    ASSIGN          reduce using rule 92 (variable_definition -> K_DOUBLE identifiers .)


state 45

    (100) variable_definition -> K_DOUBLE IDENTIFIER . LBRACKET RBRACKET
    (103) variable_definition -> K_DOUBLE IDENTIFIER . LBRACKET expression RBRACKET
    (106) variable_definition -> K_DOUBLE IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> IDENTIFIER . identifiers
    (95) identifiers -> IDENTIFIER . LBRACKET expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    LBRACKET        shift and go to state 84
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 82
    empty                          shift and go to state 43

state 46

    (93) variable_definition -> K_STRING identifiers .

    COMMA           reduce using rule 93 (variable_definition -> K_STRING identifiers .)
    K_INTEGER       reduce using rule 93 (variable_definition -> K_STRING identifiers .)
    K_DOUBLE        reduce using rule 93 (variable_definition -> K_STRING identifiers .)
    K_STRING        reduce using rule 93 (variable_definition -> K_STRING identifiers .)
    RPAREN          reduce using rule 93 (variable_definition -> K_STRING identifiers .)
    SEMI            reduce using rule 93 (variable_definition -> K_STRING identifiers .)
    ASSIGN          reduce using rule 93 (variable_definition -> K_STRING identifiers .)


state 47

    (101) variable_definition -> K_STRING IDENTIFIER . LBRACKET RBRACKET
    (104) variable_definition -> K_STRING IDENTIFIER . LBRACKET expression RBRACKET
    (107) variable_definition -> K_STRING IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> IDENTIFIER . identifiers
    (95) identifiers -> IDENTIFIER . LBRACKET expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    LBRACKET        shift and go to state 85
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 82
    empty                          shift and go to state 43

state 48

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN . LCURLY scope_body RCURLY

    LCURLY          shift and go to state 86


state 49

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN . LCURLY scope_body RCURLY

    LCURLY          shift and go to state 87


state 50

    (7) function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN . LCURLY scope_body RCURLY

    LCURLY          shift and go to state 88


state 51

    (67) variable_assignment -> IDENTIFIER . ASSIGN variable_assignment
    (68) variable_assignment -> IDENTIFIER . ASSIGN function_call
    (69) variable_assignment -> IDENTIFIER . ASSIGN expression
    (70) variable_assignment -> IDENTIFIER . ASSIGN_DIVIDE expression
    (71) variable_assignment -> IDENTIFIER . ASSIGN_MULTIPLY expression
    (72) variable_assignment -> IDENTIFIER . ASSIGN_PLUS expression
    (73) variable_assignment -> IDENTIFIER . ASSIGN_MINUS expression
    (74) variable_assignment -> IDENTIFIER . ASSIGN_MOD expression
    (75) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (46) function_call -> IDENTIFIER . LPAREN function_call_args RPAREN
    (53) procedure_call -> IDENTIFIER . LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> IDENTIFIER . INCREMENT
    (66) variable_decrement_increment -> IDENTIFIER . DECREMENT

    ASSIGN          shift and go to state 89
    ASSIGN_DIVIDE   shift and go to state 90
    ASSIGN_MULTIPLY shift and go to state 91
    ASSIGN_PLUS     shift and go to state 92
    ASSIGN_MINUS    shift and go to state 93
    ASSIGN_MOD      shift and go to state 94
    LBRACKET        shift and go to state 95
    LPAREN          shift and go to state 96
    INCREMENT       shift and go to state 97
    DECREMENT       shift and go to state 98


state 52

    (8) procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 99


state 53

    (13) scope_body -> statement . scope_body
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    statement                      shift and go to state 53
    scope_body                     shift and go to state 100
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 54

    (14) scope_body -> function . scope_body
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    function                       shift and go to state 54
    scope_body                     shift and go to state 101
    statement                      shift and go to state 53
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 55

    (15) scope_body -> procedure . scope_body
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    procedure                      shift and go to state 55
    scope_body                     shift and go to state 102
    statement                      shift and go to state 53
    function                       shift and go to state 54
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 56

    (16) scope_body -> empty .
    (41) if -> empty .

  ! reduce/reduce conflict for RCURLY resolved using rule 16 (scope_body -> empty .)
    RCURLY          reduce using rule 16 (scope_body -> empty .)
    K_ELSE          reduce using rule 41 (if -> empty .)
    K_FUNCTION      reduce using rule 41 (if -> empty .)
    K_PROCEDURE     reduce using rule 41 (if -> empty .)
    K_INTEGER       reduce using rule 41 (if -> empty .)
    K_DOUBLE        reduce using rule 41 (if -> empty .)
    K_STRING        reduce using rule 41 (if -> empty .)
    IDENTIFIER      reduce using rule 41 (if -> empty .)
    K_RETURN        reduce using rule 41 (if -> empty .)
    K_DO            reduce using rule 41 (if -> empty .)
    K_WHILE         reduce using rule 41 (if -> empty .)
    K_PRINT_INTEGER reduce using rule 41 (if -> empty .)
    K_PRINT_DOUBLE  reduce using rule 41 (if -> empty .)
    K_PRINT_STRING  reduce using rule 41 (if -> empty .)
    K_READ_INTEGER  reduce using rule 41 (if -> empty .)
    K_READ_DOUBLE   reduce using rule 41 (if -> empty .)
    K_READ_STRING   reduce using rule 41 (if -> empty .)
    K_IF            reduce using rule 41 (if -> empty .)

  ! RCURLY          [ reduce using rule 41 (if -> empty .) ]


state 57

    (17) statement -> variable_definition . SEMI
    (90) variable_declaration -> variable_definition . ASSIGN expression identifiers

    SEMI            shift and go to state 103
    ASSIGN          shift and go to state 104


state 58

    (18) statement -> variable_declaration . SEMI

    SEMI            shift and go to state 105


state 59

    (19) statement -> variable_assignment . SEMI

    SEMI            shift and go to state 106


state 60

    (20) statement -> function_call . SEMI

    SEMI            shift and go to state 107


state 61

    (21) statement -> function_return . SEMI

    SEMI            shift and go to state 108


state 62

    (22) statement -> procedure_call . SEMI

    SEMI            shift and go to state 109


state 63

    (23) statement -> variable_decrement_increment . SEMI

    SEMI            shift and go to state 110


state 64

    (24) statement -> if_statement .

    K_FUNCTION      reduce using rule 24 (statement -> if_statement .)
    K_PROCEDURE     reduce using rule 24 (statement -> if_statement .)
    K_INTEGER       reduce using rule 24 (statement -> if_statement .)
    K_DOUBLE        reduce using rule 24 (statement -> if_statement .)
    K_STRING        reduce using rule 24 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 24 (statement -> if_statement .)
    K_RETURN        reduce using rule 24 (statement -> if_statement .)
    K_DO            reduce using rule 24 (statement -> if_statement .)
    K_WHILE         reduce using rule 24 (statement -> if_statement .)
    K_PRINT_INTEGER reduce using rule 24 (statement -> if_statement .)
    K_PRINT_DOUBLE  reduce using rule 24 (statement -> if_statement .)
    K_PRINT_STRING  reduce using rule 24 (statement -> if_statement .)
    K_READ_INTEGER  reduce using rule 24 (statement -> if_statement .)
    K_READ_DOUBLE   reduce using rule 24 (statement -> if_statement .)
    K_READ_STRING   reduce using rule 24 (statement -> if_statement .)
    K_IF            reduce using rule 24 (statement -> if_statement .)
    K_ELSE          reduce using rule 24 (statement -> if_statement .)
    RCURLY          reduce using rule 24 (statement -> if_statement .)


state 65

    (25) statement -> do_statement .

    K_FUNCTION      reduce using rule 25 (statement -> do_statement .)
    K_PROCEDURE     reduce using rule 25 (statement -> do_statement .)
    K_INTEGER       reduce using rule 25 (statement -> do_statement .)
    K_DOUBLE        reduce using rule 25 (statement -> do_statement .)
    K_STRING        reduce using rule 25 (statement -> do_statement .)
    IDENTIFIER      reduce using rule 25 (statement -> do_statement .)
    K_RETURN        reduce using rule 25 (statement -> do_statement .)
    K_DO            reduce using rule 25 (statement -> do_statement .)
    K_WHILE         reduce using rule 25 (statement -> do_statement .)
    K_PRINT_INTEGER reduce using rule 25 (statement -> do_statement .)
    K_PRINT_DOUBLE  reduce using rule 25 (statement -> do_statement .)
    K_PRINT_STRING  reduce using rule 25 (statement -> do_statement .)
    K_READ_INTEGER  reduce using rule 25 (statement -> do_statement .)
    K_READ_DOUBLE   reduce using rule 25 (statement -> do_statement .)
    K_READ_STRING   reduce using rule 25 (statement -> do_statement .)
    K_IF            reduce using rule 25 (statement -> do_statement .)
    K_ELSE          reduce using rule 25 (statement -> do_statement .)
    RCURLY          reduce using rule 25 (statement -> do_statement .)


state 66

    (26) statement -> while_statement .

    K_FUNCTION      reduce using rule 26 (statement -> while_statement .)
    K_PROCEDURE     reduce using rule 26 (statement -> while_statement .)
    K_INTEGER       reduce using rule 26 (statement -> while_statement .)
    K_DOUBLE        reduce using rule 26 (statement -> while_statement .)
    K_STRING        reduce using rule 26 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 26 (statement -> while_statement .)
    K_RETURN        reduce using rule 26 (statement -> while_statement .)
    K_DO            reduce using rule 26 (statement -> while_statement .)
    K_WHILE         reduce using rule 26 (statement -> while_statement .)
    K_PRINT_INTEGER reduce using rule 26 (statement -> while_statement .)
    K_PRINT_DOUBLE  reduce using rule 26 (statement -> while_statement .)
    K_PRINT_STRING  reduce using rule 26 (statement -> while_statement .)
    K_READ_INTEGER  reduce using rule 26 (statement -> while_statement .)
    K_READ_DOUBLE   reduce using rule 26 (statement -> while_statement .)
    K_READ_STRING   reduce using rule 26 (statement -> while_statement .)
    K_IF            reduce using rule 26 (statement -> while_statement .)
    K_ELSE          reduce using rule 26 (statement -> while_statement .)
    RCURLY          reduce using rule 26 (statement -> while_statement .)


state 67

    (45) function_call -> built_in_functions . LPAREN function_call_args RPAREN

    LPAREN          shift and go to state 111


state 68

    (47) function_return -> K_RETURN . IDENTIFIER
    (48) function_return -> K_RETURN . ICONSTANT
    (49) function_return -> K_RETURN . DCONSTANT
    (50) function_return -> K_RETURN . SCONSTANT
    (51) function_return -> K_RETURN . function_call
    (52) function_return -> K_RETURN . variable_assignment
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING

    IDENTIFIER      shift and go to state 112
    ICONSTANT       shift and go to state 113
    DCONSTANT       shift and go to state 114
    SCONSTANT       shift and go to state 115
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77

    function_call                  shift and go to state 116
    variable_assignment            shift and go to state 117
    built_in_functions             shift and go to state 67

state 69

    (37) if_statement -> if .
    (38) if_statement -> if . K_ELSE after_else

  ! shift/reduce conflict for K_ELSE resolved as shift
    K_FUNCTION      reduce using rule 37 (if_statement -> if .)
    K_PROCEDURE     reduce using rule 37 (if_statement -> if .)
    K_INTEGER       reduce using rule 37 (if_statement -> if .)
    K_DOUBLE        reduce using rule 37 (if_statement -> if .)
    K_STRING        reduce using rule 37 (if_statement -> if .)
    IDENTIFIER      reduce using rule 37 (if_statement -> if .)
    K_RETURN        reduce using rule 37 (if_statement -> if .)
    K_DO            reduce using rule 37 (if_statement -> if .)
    K_WHILE         reduce using rule 37 (if_statement -> if .)
    K_PRINT_INTEGER reduce using rule 37 (if_statement -> if .)
    K_PRINT_DOUBLE  reduce using rule 37 (if_statement -> if .)
    K_PRINT_STRING  reduce using rule 37 (if_statement -> if .)
    K_READ_INTEGER  reduce using rule 37 (if_statement -> if .)
    K_READ_DOUBLE   reduce using rule 37 (if_statement -> if .)
    K_READ_STRING   reduce using rule 37 (if_statement -> if .)
    K_IF            reduce using rule 37 (if_statement -> if .)
    RCURLY          reduce using rule 37 (if_statement -> if .)
    K_ELSE          shift and go to state 118

  ! K_ELSE          [ reduce using rule 37 (if_statement -> if .) ]


state 70

    (29) do_statement -> K_DO . LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> K_DO . LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> K_DO . LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> K_DO . LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO . LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> K_DO . LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> K_DO . LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> K_DO . LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement

    LPAREN          shift and go to state 119


state 71

    (27) while_statement -> K_WHILE . LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> K_WHILE . LPAREN boolean_logic RPAREN statement

    LPAREN          shift and go to state 120


state 72

    (54) built_in_functions -> K_PRINT_INTEGER .

    LPAREN          reduce using rule 54 (built_in_functions -> K_PRINT_INTEGER .)


state 73

    (55) built_in_functions -> K_PRINT_DOUBLE .

    LPAREN          reduce using rule 55 (built_in_functions -> K_PRINT_DOUBLE .)


state 74

    (56) built_in_functions -> K_PRINT_STRING .

    LPAREN          reduce using rule 56 (built_in_functions -> K_PRINT_STRING .)


state 75

    (57) built_in_functions -> K_READ_INTEGER .

    LPAREN          reduce using rule 57 (built_in_functions -> K_READ_INTEGER .)


state 76

    (58) built_in_functions -> K_READ_DOUBLE .

    LPAREN          reduce using rule 58 (built_in_functions -> K_READ_DOUBLE .)


state 77

    (59) built_in_functions -> K_READ_STRING .

    LPAREN          reduce using rule 59 (built_in_functions -> K_READ_STRING .)


state 78

    (39) if -> K_IF . LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> K_IF . LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY

    LPAREN          shift and go to state 121


state 79

    (9) procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 122
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 80

    (94) identifiers -> IDENTIFIER . identifiers
    (95) identifiers -> IDENTIFIER . LBRACKET expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LBRACKET        shift and go to state 123
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)
    LPAREN          reduce using rule 155 (empty -> .)
    ICONSTANT       reduce using rule 155 (empty -> .)
    DCONSTANT       reduce using rule 155 (empty -> .)
    SCONSTANT       reduce using rule 155 (empty -> .)
    MINUS           reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 82
    empty                          shift and go to state 43

state 81

    (99) variable_definition -> K_INTEGER IDENTIFIER LBRACKET . RBRACKET
    (102) variable_definition -> K_INTEGER IDENTIFIER LBRACKET . expression RBRACKET
    (105) variable_definition -> K_INTEGER IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (95) identifiers -> IDENTIFIER LBRACKET . expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET identifiers
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    RBRACKET        shift and go to state 125
    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 126
    variable_decrement_increment   shift and go to state 127
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 82

    (94) identifiers -> IDENTIFIER identifiers .

    COMMA           reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    K_INTEGER       reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    K_DOUBLE        reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    K_STRING        reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    RPAREN          reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    SEMI            reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    ASSIGN          reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    IDENTIFIER      reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    LPAREN          reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    ICONSTANT       reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    DCONSTANT       reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    SCONSTANT       reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)
    MINUS           reduce using rule 94 (identifiers -> IDENTIFIER identifiers .)


state 83

    (97) identifiers -> COMMA identifiers .

    COMMA           reduce using rule 97 (identifiers -> COMMA identifiers .)
    K_INTEGER       reduce using rule 97 (identifiers -> COMMA identifiers .)
    K_DOUBLE        reduce using rule 97 (identifiers -> COMMA identifiers .)
    K_STRING        reduce using rule 97 (identifiers -> COMMA identifiers .)
    RPAREN          reduce using rule 97 (identifiers -> COMMA identifiers .)
    SEMI            reduce using rule 97 (identifiers -> COMMA identifiers .)
    ASSIGN          reduce using rule 97 (identifiers -> COMMA identifiers .)
    IDENTIFIER      reduce using rule 97 (identifiers -> COMMA identifiers .)
    LPAREN          reduce using rule 97 (identifiers -> COMMA identifiers .)
    ICONSTANT       reduce using rule 97 (identifiers -> COMMA identifiers .)
    DCONSTANT       reduce using rule 97 (identifiers -> COMMA identifiers .)
    SCONSTANT       reduce using rule 97 (identifiers -> COMMA identifiers .)
    MINUS           reduce using rule 97 (identifiers -> COMMA identifiers .)


state 84

    (100) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET . RBRACKET
    (103) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET . expression RBRACKET
    (106) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (95) identifiers -> IDENTIFIER LBRACKET . expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET identifiers
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    RBRACKET        shift and go to state 135
    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 136
    variable_decrement_increment   shift and go to state 137
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 85

    (101) variable_definition -> K_STRING IDENTIFIER LBRACKET . RBRACKET
    (104) variable_definition -> K_STRING IDENTIFIER LBRACKET . expression RBRACKET
    (107) variable_definition -> K_STRING IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (95) identifiers -> IDENTIFIER LBRACKET . expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET identifiers
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    RBRACKET        shift and go to state 138
    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 139
    variable_decrement_increment   shift and go to state 140
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 86

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 141
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 87

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 142
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 88

    (7) function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 143
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 89

    (67) variable_assignment -> IDENTIFIER ASSIGN . variable_assignment
    (68) variable_assignment -> IDENTIFIER ASSIGN . function_call
    (69) variable_assignment -> IDENTIFIER ASSIGN . expression
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 144
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    variable_assignment            shift and go to state 145
    function_call                  shift and go to state 146
    expression                     shift and go to state 147
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 90

    (70) variable_assignment -> IDENTIFIER ASSIGN_DIVIDE . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 149
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 91

    (71) variable_assignment -> IDENTIFIER ASSIGN_MULTIPLY . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 150
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 92

    (72) variable_assignment -> IDENTIFIER ASSIGN_PLUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 151
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 93

    (73) variable_assignment -> IDENTIFIER ASSIGN_MINUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 152
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 94

    (74) variable_assignment -> IDENTIFIER ASSIGN_MOD . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 153
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 95

    (75) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 154
    variable_decrement_increment   shift and go to state 155
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 96

    (46) function_call -> IDENTIFIER LPAREN . function_call_args RPAREN
    (53) procedure_call -> IDENTIFIER LPAREN . procedure_call_args RPAREN
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (60) procedure_call_args -> . identifiers
    (61) procedure_call_args -> . term
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    RPAREN          reduce using rule 155 (empty -> .)
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    function_call_args             shift and go to state 157
    procedure_call_args            shift and go to state 158
    identifiers                    shift and go to state 159
    term                           shift and go to state 160
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 97

    (65) variable_decrement_increment -> IDENTIFIER INCREMENT .

    SEMI            reduce using rule 65 (variable_decrement_increment -> IDENTIFIER INCREMENT .)
    RBRACKET        reduce using rule 65 (variable_decrement_increment -> IDENTIFIER INCREMENT .)
    RPAREN          reduce using rule 65 (variable_decrement_increment -> IDENTIFIER INCREMENT .)


state 98

    (66) variable_decrement_increment -> IDENTIFIER DECREMENT .

    SEMI            reduce using rule 66 (variable_decrement_increment -> IDENTIFIER DECREMENT .)
    RBRACKET        reduce using rule 66 (variable_decrement_increment -> IDENTIFIER DECREMENT .)
    RPAREN          reduce using rule 66 (variable_decrement_increment -> IDENTIFIER DECREMENT .)


state 99

    (8) procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 8 (procedure -> K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY .)


state 100

    (13) scope_body -> statement scope_body .

    RCURLY          reduce using rule 13 (scope_body -> statement scope_body .)


state 101

    (14) scope_body -> function scope_body .

    RCURLY          reduce using rule 14 (scope_body -> function scope_body .)


state 102

    (15) scope_body -> procedure scope_body .

    RCURLY          reduce using rule 15 (scope_body -> procedure scope_body .)


state 103

    (17) statement -> variable_definition SEMI .

    K_FUNCTION      reduce using rule 17 (statement -> variable_definition SEMI .)
    K_PROCEDURE     reduce using rule 17 (statement -> variable_definition SEMI .)
    K_INTEGER       reduce using rule 17 (statement -> variable_definition SEMI .)
    K_DOUBLE        reduce using rule 17 (statement -> variable_definition SEMI .)
    K_STRING        reduce using rule 17 (statement -> variable_definition SEMI .)
    IDENTIFIER      reduce using rule 17 (statement -> variable_definition SEMI .)
    K_RETURN        reduce using rule 17 (statement -> variable_definition SEMI .)
    K_DO            reduce using rule 17 (statement -> variable_definition SEMI .)
    K_WHILE         reduce using rule 17 (statement -> variable_definition SEMI .)
    K_PRINT_INTEGER reduce using rule 17 (statement -> variable_definition SEMI .)
    K_PRINT_DOUBLE  reduce using rule 17 (statement -> variable_definition SEMI .)
    K_PRINT_STRING  reduce using rule 17 (statement -> variable_definition SEMI .)
    K_READ_INTEGER  reduce using rule 17 (statement -> variable_definition SEMI .)
    K_READ_DOUBLE   reduce using rule 17 (statement -> variable_definition SEMI .)
    K_READ_STRING   reduce using rule 17 (statement -> variable_definition SEMI .)
    K_IF            reduce using rule 17 (statement -> variable_definition SEMI .)
    K_ELSE          reduce using rule 17 (statement -> variable_definition SEMI .)
    RCURLY          reduce using rule 17 (statement -> variable_definition SEMI .)


state 104

    (90) variable_declaration -> variable_definition ASSIGN . expression identifiers
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 162
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 105

    (18) statement -> variable_declaration SEMI .

    K_FUNCTION      reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_PROCEDURE     reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_INTEGER       reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_DOUBLE        reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_STRING        reduce using rule 18 (statement -> variable_declaration SEMI .)
    IDENTIFIER      reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_RETURN        reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_DO            reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_WHILE         reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_PRINT_INTEGER reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_PRINT_DOUBLE  reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_PRINT_STRING  reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_READ_INTEGER  reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_READ_DOUBLE   reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_READ_STRING   reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_IF            reduce using rule 18 (statement -> variable_declaration SEMI .)
    K_ELSE          reduce using rule 18 (statement -> variable_declaration SEMI .)
    RCURLY          reduce using rule 18 (statement -> variable_declaration SEMI .)


state 106

    (19) statement -> variable_assignment SEMI .

    K_FUNCTION      reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_PROCEDURE     reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_INTEGER       reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_DOUBLE        reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_STRING        reduce using rule 19 (statement -> variable_assignment SEMI .)
    IDENTIFIER      reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_RETURN        reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_DO            reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_WHILE         reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_PRINT_INTEGER reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_PRINT_DOUBLE  reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_PRINT_STRING  reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_READ_INTEGER  reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_READ_DOUBLE   reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_READ_STRING   reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_IF            reduce using rule 19 (statement -> variable_assignment SEMI .)
    K_ELSE          reduce using rule 19 (statement -> variable_assignment SEMI .)
    RCURLY          reduce using rule 19 (statement -> variable_assignment SEMI .)


state 107

    (20) statement -> function_call SEMI .

    K_FUNCTION      reduce using rule 20 (statement -> function_call SEMI .)
    K_PROCEDURE     reduce using rule 20 (statement -> function_call SEMI .)
    K_INTEGER       reduce using rule 20 (statement -> function_call SEMI .)
    K_DOUBLE        reduce using rule 20 (statement -> function_call SEMI .)
    K_STRING        reduce using rule 20 (statement -> function_call SEMI .)
    IDENTIFIER      reduce using rule 20 (statement -> function_call SEMI .)
    K_RETURN        reduce using rule 20 (statement -> function_call SEMI .)
    K_DO            reduce using rule 20 (statement -> function_call SEMI .)
    K_WHILE         reduce using rule 20 (statement -> function_call SEMI .)
    K_PRINT_INTEGER reduce using rule 20 (statement -> function_call SEMI .)
    K_PRINT_DOUBLE  reduce using rule 20 (statement -> function_call SEMI .)
    K_PRINT_STRING  reduce using rule 20 (statement -> function_call SEMI .)
    K_READ_INTEGER  reduce using rule 20 (statement -> function_call SEMI .)
    K_READ_DOUBLE   reduce using rule 20 (statement -> function_call SEMI .)
    K_READ_STRING   reduce using rule 20 (statement -> function_call SEMI .)
    K_IF            reduce using rule 20 (statement -> function_call SEMI .)
    K_ELSE          reduce using rule 20 (statement -> function_call SEMI .)
    RCURLY          reduce using rule 20 (statement -> function_call SEMI .)


state 108

    (21) statement -> function_return SEMI .

    K_FUNCTION      reduce using rule 21 (statement -> function_return SEMI .)
    K_PROCEDURE     reduce using rule 21 (statement -> function_return SEMI .)
    K_INTEGER       reduce using rule 21 (statement -> function_return SEMI .)
    K_DOUBLE        reduce using rule 21 (statement -> function_return SEMI .)
    K_STRING        reduce using rule 21 (statement -> function_return SEMI .)
    IDENTIFIER      reduce using rule 21 (statement -> function_return SEMI .)
    K_RETURN        reduce using rule 21 (statement -> function_return SEMI .)
    K_DO            reduce using rule 21 (statement -> function_return SEMI .)
    K_WHILE         reduce using rule 21 (statement -> function_return SEMI .)
    K_PRINT_INTEGER reduce using rule 21 (statement -> function_return SEMI .)
    K_PRINT_DOUBLE  reduce using rule 21 (statement -> function_return SEMI .)
    K_PRINT_STRING  reduce using rule 21 (statement -> function_return SEMI .)
    K_READ_INTEGER  reduce using rule 21 (statement -> function_return SEMI .)
    K_READ_DOUBLE   reduce using rule 21 (statement -> function_return SEMI .)
    K_READ_STRING   reduce using rule 21 (statement -> function_return SEMI .)
    K_IF            reduce using rule 21 (statement -> function_return SEMI .)
    K_ELSE          reduce using rule 21 (statement -> function_return SEMI .)
    RCURLY          reduce using rule 21 (statement -> function_return SEMI .)


state 109

    (22) statement -> procedure_call SEMI .

    K_FUNCTION      reduce using rule 22 (statement -> procedure_call SEMI .)
    K_PROCEDURE     reduce using rule 22 (statement -> procedure_call SEMI .)
    K_INTEGER       reduce using rule 22 (statement -> procedure_call SEMI .)
    K_DOUBLE        reduce using rule 22 (statement -> procedure_call SEMI .)
    K_STRING        reduce using rule 22 (statement -> procedure_call SEMI .)
    IDENTIFIER      reduce using rule 22 (statement -> procedure_call SEMI .)
    K_RETURN        reduce using rule 22 (statement -> procedure_call SEMI .)
    K_DO            reduce using rule 22 (statement -> procedure_call SEMI .)
    K_WHILE         reduce using rule 22 (statement -> procedure_call SEMI .)
    K_PRINT_INTEGER reduce using rule 22 (statement -> procedure_call SEMI .)
    K_PRINT_DOUBLE  reduce using rule 22 (statement -> procedure_call SEMI .)
    K_PRINT_STRING  reduce using rule 22 (statement -> procedure_call SEMI .)
    K_READ_INTEGER  reduce using rule 22 (statement -> procedure_call SEMI .)
    K_READ_DOUBLE   reduce using rule 22 (statement -> procedure_call SEMI .)
    K_READ_STRING   reduce using rule 22 (statement -> procedure_call SEMI .)
    K_IF            reduce using rule 22 (statement -> procedure_call SEMI .)
    K_ELSE          reduce using rule 22 (statement -> procedure_call SEMI .)
    RCURLY          reduce using rule 22 (statement -> procedure_call SEMI .)


state 110

    (23) statement -> variable_decrement_increment SEMI .

    K_FUNCTION      reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_PROCEDURE     reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_INTEGER       reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_DOUBLE        reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_STRING        reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    IDENTIFIER      reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_RETURN        reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_DO            reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_WHILE         reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_PRINT_INTEGER reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_PRINT_DOUBLE  reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_PRINT_STRING  reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_READ_INTEGER  reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_READ_DOUBLE   reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_READ_STRING   reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_IF            reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    K_ELSE          reduce using rule 23 (statement -> variable_decrement_increment SEMI .)
    RCURLY          reduce using rule 23 (statement -> variable_decrement_increment SEMI .)


state 111

    (45) function_call -> built_in_functions LPAREN . function_call_args RPAREN
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    RPAREN          reduce using rule 155 (empty -> .)
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    function_call_args             shift and go to state 163
    identifiers                    shift and go to state 164
    term                           shift and go to state 165
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 112

    (47) function_return -> K_RETURN IDENTIFIER .
    (46) function_call -> IDENTIFIER . LPAREN function_call_args RPAREN
    (67) variable_assignment -> IDENTIFIER . ASSIGN variable_assignment
    (68) variable_assignment -> IDENTIFIER . ASSIGN function_call
    (69) variable_assignment -> IDENTIFIER . ASSIGN expression
    (70) variable_assignment -> IDENTIFIER . ASSIGN_DIVIDE expression
    (71) variable_assignment -> IDENTIFIER . ASSIGN_MULTIPLY expression
    (72) variable_assignment -> IDENTIFIER . ASSIGN_PLUS expression
    (73) variable_assignment -> IDENTIFIER . ASSIGN_MINUS expression
    (74) variable_assignment -> IDENTIFIER . ASSIGN_MOD expression
    (75) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression

    SEMI            reduce using rule 47 (function_return -> K_RETURN IDENTIFIER .)
    LPAREN          shift and go to state 166
    ASSIGN          shift and go to state 89
    ASSIGN_DIVIDE   shift and go to state 90
    ASSIGN_MULTIPLY shift and go to state 91
    ASSIGN_PLUS     shift and go to state 92
    ASSIGN_MINUS    shift and go to state 93
    ASSIGN_MOD      shift and go to state 94
    LBRACKET        shift and go to state 95


state 113

    (48) function_return -> K_RETURN ICONSTANT .

    SEMI            reduce using rule 48 (function_return -> K_RETURN ICONSTANT .)


state 114

    (49) function_return -> K_RETURN DCONSTANT .

    SEMI            reduce using rule 49 (function_return -> K_RETURN DCONSTANT .)


state 115

    (50) function_return -> K_RETURN SCONSTANT .

    SEMI            reduce using rule 50 (function_return -> K_RETURN SCONSTANT .)


state 116

    (51) function_return -> K_RETURN function_call .

    SEMI            reduce using rule 51 (function_return -> K_RETURN function_call .)


state 117

    (52) function_return -> K_RETURN variable_assignment .

    SEMI            reduce using rule 52 (function_return -> K_RETURN variable_assignment .)


state 118

    (38) if_statement -> if K_ELSE . after_else
    (42) after_else -> . statement
    (43) after_else -> . LCURLY scope_body RCURLY
    (44) after_else -> . if K_ELSE after_else
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (155) empty -> .
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
    LCURLY          shift and go to state 170
    K_IF            shift and go to state 78
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    if                             shift and go to state 167
    after_else                     shift and go to state 168
    statement                      shift and go to state 169
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    empty                          shift and go to state 171
    built_in_functions             shift and go to state 67

state 119

    (29) do_statement -> K_DO LPAREN . variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> K_DO LPAREN . variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> K_DO LPAREN . variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> K_DO LPAREN . variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN . variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> K_DO LPAREN . variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> K_DO LPAREN . variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> K_DO LPAREN . variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 174
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32

    variable_assignment            shift and go to state 172
    variable_definition            shift and go to state 173

state 120

    (27) while_statement -> K_WHILE LPAREN . boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> K_WHILE LPAREN . boolean_logic RPAREN statement
    (108) boolean_logic -> . arithmetic_logic DAND arithmetic_logic
    (109) boolean_logic -> . arithmetic_logic DOR arithmetic_logic
    (110) boolean_logic -> . NOT arithmetic_logic
    (111) boolean_logic -> . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    NOT             shift and go to state 177
    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    boolean_logic                  shift and go to state 175
    arithmetic_logic               shift and go to state 176
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 121

    (39) if -> K_IF LPAREN . boolean_logic RPAREN K_THEN statement
    (40) if -> K_IF LPAREN . boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (108) boolean_logic -> . arithmetic_logic DAND arithmetic_logic
    (109) boolean_logic -> . arithmetic_logic DOR arithmetic_logic
    (110) boolean_logic -> . NOT arithmetic_logic
    (111) boolean_logic -> . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    NOT             shift and go to state 177
    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    boolean_logic                  shift and go to state 181
    arithmetic_logic               shift and go to state 176
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 122

    (9) procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 182


state 123

    (95) identifiers -> IDENTIFIER LBRACKET . expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET identifiers
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 183
    variable_decrement_increment   shift and go to state 184
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 124

    (65) variable_decrement_increment -> IDENTIFIER . INCREMENT
    (66) variable_decrement_increment -> IDENTIFIER . DECREMENT
    (149) factor -> IDENTIFIER .
    (151) factor -> IDENTIFIER . LBRACKET expression RBRACKET
    (152) factor -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET

    INCREMENT       shift and go to state 97
    DECREMENT       shift and go to state 98
    DIVIDE          reduce using rule 149 (factor -> IDENTIFIER .)
    MULTIPLY        reduce using rule 149 (factor -> IDENTIFIER .)
    MOD             reduce using rule 149 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 149 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 149 (factor -> IDENTIFIER .)
    RBRACKET        reduce using rule 149 (factor -> IDENTIFIER .)
    LBRACKET        shift and go to state 185


state 125

    (99) variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .

    COMMA           reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)
    K_INTEGER       reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)
    K_DOUBLE        reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)
    K_STRING        reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)
    RPAREN          reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)
    SEMI            reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 99 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET RBRACKET .)


state 126

    (102) variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression . RBRACKET
    (95) identifiers -> IDENTIFIER LBRACKET expression . RBRACKET identifiers

    RBRACKET        shift and go to state 186


state 127

    (105) variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET
    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET identifiers

    RBRACKET        shift and go to state 187


state 128

    (136) expression -> term . PLUS expression
    (137) expression -> term . MINUS expression
    (138) expression -> term .

    PLUS            shift and go to state 188
    MINUS           shift and go to state 189
    RBRACKET        reduce using rule 138 (expression -> term .)
    SEMI            reduce using rule 138 (expression -> term .)
    RPAREN          reduce using rule 138 (expression -> term .)
    IDENTIFIER      reduce using rule 138 (expression -> term .)
    COMMA           reduce using rule 138 (expression -> term .)
    DEQ             reduce using rule 138 (expression -> term .)
    GEQ             reduce using rule 138 (expression -> term .)
    GT              reduce using rule 138 (expression -> term .)
    LEQ             reduce using rule 138 (expression -> term .)
    LT              reduce using rule 138 (expression -> term .)
    NE              reduce using rule 138 (expression -> term .)
    DAND            reduce using rule 138 (expression -> term .)
    DOR             reduce using rule 138 (expression -> term .)


state 129

    (147) factor -> MINUS . ICONSTANT
    (148) factor -> MINUS . DCONSTANT
    (150) factor -> MINUS . IDENTIFIER
    (153) factor -> MINUS . IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> MINUS . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    ICONSTANT       shift and go to state 190
    DCONSTANT       shift and go to state 191
    IDENTIFIER      shift and go to state 192


state 130

    (139) term -> factor . DIVIDE term
    (140) term -> factor . MULTIPLY term
    (141) term -> factor . MOD term
    (142) term -> factor .

    DIVIDE          shift and go to state 193
    MULTIPLY        shift and go to state 194
    MOD             shift and go to state 195
    PLUS            reduce using rule 142 (term -> factor .)
    MINUS           reduce using rule 142 (term -> factor .)
    RBRACKET        reduce using rule 142 (term -> factor .)
    SEMI            reduce using rule 142 (term -> factor .)
    RPAREN          reduce using rule 142 (term -> factor .)
    IDENTIFIER      reduce using rule 142 (term -> factor .)
    COMMA           reduce using rule 142 (term -> factor .)
    LPAREN          reduce using rule 142 (term -> factor .)
    ICONSTANT       reduce using rule 142 (term -> factor .)
    DCONSTANT       reduce using rule 142 (term -> factor .)
    SCONSTANT       reduce using rule 142 (term -> factor .)
    DEQ             reduce using rule 142 (term -> factor .)
    GEQ             reduce using rule 142 (term -> factor .)
    GT              reduce using rule 142 (term -> factor .)
    LEQ             reduce using rule 142 (term -> factor .)
    LT              reduce using rule 142 (term -> factor .)
    NE              reduce using rule 142 (term -> factor .)
    DAND            reduce using rule 142 (term -> factor .)
    DOR             reduce using rule 142 (term -> factor .)


state 131

    (143) factor -> LPAREN . expression RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 196
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 132

    (144) factor -> ICONSTANT .

    DIVIDE          reduce using rule 144 (factor -> ICONSTANT .)
    MULTIPLY        reduce using rule 144 (factor -> ICONSTANT .)
    MOD             reduce using rule 144 (factor -> ICONSTANT .)
    PLUS            reduce using rule 144 (factor -> ICONSTANT .)
    MINUS           reduce using rule 144 (factor -> ICONSTANT .)
    RBRACKET        reduce using rule 144 (factor -> ICONSTANT .)
    SEMI            reduce using rule 144 (factor -> ICONSTANT .)
    RPAREN          reduce using rule 144 (factor -> ICONSTANT .)
    IDENTIFIER      reduce using rule 144 (factor -> ICONSTANT .)
    COMMA           reduce using rule 144 (factor -> ICONSTANT .)
    LPAREN          reduce using rule 144 (factor -> ICONSTANT .)
    ICONSTANT       reduce using rule 144 (factor -> ICONSTANT .)
    DCONSTANT       reduce using rule 144 (factor -> ICONSTANT .)
    SCONSTANT       reduce using rule 144 (factor -> ICONSTANT .)
    DEQ             reduce using rule 144 (factor -> ICONSTANT .)
    GEQ             reduce using rule 144 (factor -> ICONSTANT .)
    GT              reduce using rule 144 (factor -> ICONSTANT .)
    LEQ             reduce using rule 144 (factor -> ICONSTANT .)
    LT              reduce using rule 144 (factor -> ICONSTANT .)
    NE              reduce using rule 144 (factor -> ICONSTANT .)
    DAND            reduce using rule 144 (factor -> ICONSTANT .)
    DOR             reduce using rule 144 (factor -> ICONSTANT .)


state 133

    (145) factor -> DCONSTANT .

    DIVIDE          reduce using rule 145 (factor -> DCONSTANT .)
    MULTIPLY        reduce using rule 145 (factor -> DCONSTANT .)
    MOD             reduce using rule 145 (factor -> DCONSTANT .)
    PLUS            reduce using rule 145 (factor -> DCONSTANT .)
    MINUS           reduce using rule 145 (factor -> DCONSTANT .)
    RBRACKET        reduce using rule 145 (factor -> DCONSTANT .)
    SEMI            reduce using rule 145 (factor -> DCONSTANT .)
    RPAREN          reduce using rule 145 (factor -> DCONSTANT .)
    IDENTIFIER      reduce using rule 145 (factor -> DCONSTANT .)
    COMMA           reduce using rule 145 (factor -> DCONSTANT .)
    LPAREN          reduce using rule 145 (factor -> DCONSTANT .)
    ICONSTANT       reduce using rule 145 (factor -> DCONSTANT .)
    DCONSTANT       reduce using rule 145 (factor -> DCONSTANT .)
    SCONSTANT       reduce using rule 145 (factor -> DCONSTANT .)
    DEQ             reduce using rule 145 (factor -> DCONSTANT .)
    GEQ             reduce using rule 145 (factor -> DCONSTANT .)
    GT              reduce using rule 145 (factor -> DCONSTANT .)
    LEQ             reduce using rule 145 (factor -> DCONSTANT .)
    LT              reduce using rule 145 (factor -> DCONSTANT .)
    NE              reduce using rule 145 (factor -> DCONSTANT .)
    DAND            reduce using rule 145 (factor -> DCONSTANT .)
    DOR             reduce using rule 145 (factor -> DCONSTANT .)


state 134

    (146) factor -> SCONSTANT .

    DIVIDE          reduce using rule 146 (factor -> SCONSTANT .)
    MULTIPLY        reduce using rule 146 (factor -> SCONSTANT .)
    MOD             reduce using rule 146 (factor -> SCONSTANT .)
    PLUS            reduce using rule 146 (factor -> SCONSTANT .)
    MINUS           reduce using rule 146 (factor -> SCONSTANT .)
    RBRACKET        reduce using rule 146 (factor -> SCONSTANT .)
    SEMI            reduce using rule 146 (factor -> SCONSTANT .)
    RPAREN          reduce using rule 146 (factor -> SCONSTANT .)
    IDENTIFIER      reduce using rule 146 (factor -> SCONSTANT .)
    COMMA           reduce using rule 146 (factor -> SCONSTANT .)
    LPAREN          reduce using rule 146 (factor -> SCONSTANT .)
    ICONSTANT       reduce using rule 146 (factor -> SCONSTANT .)
    DCONSTANT       reduce using rule 146 (factor -> SCONSTANT .)
    SCONSTANT       reduce using rule 146 (factor -> SCONSTANT .)
    DEQ             reduce using rule 146 (factor -> SCONSTANT .)
    GEQ             reduce using rule 146 (factor -> SCONSTANT .)
    GT              reduce using rule 146 (factor -> SCONSTANT .)
    LEQ             reduce using rule 146 (factor -> SCONSTANT .)
    LT              reduce using rule 146 (factor -> SCONSTANT .)
    NE              reduce using rule 146 (factor -> SCONSTANT .)
    DAND            reduce using rule 146 (factor -> SCONSTANT .)
    DOR             reduce using rule 146 (factor -> SCONSTANT .)


state 135

    (100) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .

    COMMA           reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)
    K_INTEGER       reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)
    K_DOUBLE        reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)
    K_STRING        reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)
    RPAREN          reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)
    SEMI            reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 100 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET RBRACKET .)


state 136

    (103) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression . RBRACKET
    (95) identifiers -> IDENTIFIER LBRACKET expression . RBRACKET identifiers

    RBRACKET        shift and go to state 197


state 137

    (106) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET
    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET identifiers

    RBRACKET        shift and go to state 198


state 138

    (101) variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .

    COMMA           reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)
    K_INTEGER       reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)
    K_DOUBLE        reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)
    K_STRING        reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)
    RPAREN          reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)
    SEMI            reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 101 (variable_definition -> K_STRING IDENTIFIER LBRACKET RBRACKET .)


state 139

    (104) variable_definition -> K_STRING IDENTIFIER LBRACKET expression . RBRACKET
    (95) identifiers -> IDENTIFIER LBRACKET expression . RBRACKET identifiers

    RBRACKET        shift and go to state 199


state 140

    (107) variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET
    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET identifiers

    RBRACKET        shift and go to state 200


state 141

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 201


state 142

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 202


state 143

    (7) function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 203


state 144

    (67) variable_assignment -> IDENTIFIER . ASSIGN variable_assignment
    (68) variable_assignment -> IDENTIFIER . ASSIGN function_call
    (69) variable_assignment -> IDENTIFIER . ASSIGN expression
    (70) variable_assignment -> IDENTIFIER . ASSIGN_DIVIDE expression
    (71) variable_assignment -> IDENTIFIER . ASSIGN_MULTIPLY expression
    (72) variable_assignment -> IDENTIFIER . ASSIGN_PLUS expression
    (73) variable_assignment -> IDENTIFIER . ASSIGN_MINUS expression
    (74) variable_assignment -> IDENTIFIER . ASSIGN_MOD expression
    (75) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (46) function_call -> IDENTIFIER . LPAREN function_call_args RPAREN
    (149) factor -> IDENTIFIER .
    (151) factor -> IDENTIFIER . LBRACKET expression RBRACKET
    (152) factor -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET

    ASSIGN          shift and go to state 89
    ASSIGN_DIVIDE   shift and go to state 90
    ASSIGN_MULTIPLY shift and go to state 91
    ASSIGN_PLUS     shift and go to state 92
    ASSIGN_MINUS    shift and go to state 93
    ASSIGN_MOD      shift and go to state 94
    LBRACKET        shift and go to state 204
    LPAREN          shift and go to state 166
    DIVIDE          reduce using rule 149 (factor -> IDENTIFIER .)
    MULTIPLY        reduce using rule 149 (factor -> IDENTIFIER .)
    MOD             reduce using rule 149 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 149 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 149 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 149 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 149 (factor -> IDENTIFIER .)


state 145

    (67) variable_assignment -> IDENTIFIER ASSIGN variable_assignment .

    SEMI            reduce using rule 67 (variable_assignment -> IDENTIFIER ASSIGN variable_assignment .)
    RPAREN          reduce using rule 67 (variable_assignment -> IDENTIFIER ASSIGN variable_assignment .)


state 146

    (68) variable_assignment -> IDENTIFIER ASSIGN function_call .

    SEMI            reduce using rule 68 (variable_assignment -> IDENTIFIER ASSIGN function_call .)
    RPAREN          reduce using rule 68 (variable_assignment -> IDENTIFIER ASSIGN function_call .)


state 147

    (69) variable_assignment -> IDENTIFIER ASSIGN expression .

    SEMI            reduce using rule 69 (variable_assignment -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 69 (variable_assignment -> IDENTIFIER ASSIGN expression .)


state 148

    (149) factor -> IDENTIFIER .
    (151) factor -> IDENTIFIER . LBRACKET expression RBRACKET
    (152) factor -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET

    DIVIDE          reduce using rule 149 (factor -> IDENTIFIER .)
    MULTIPLY        reduce using rule 149 (factor -> IDENTIFIER .)
    MOD             reduce using rule 149 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 149 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 149 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 149 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 149 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 149 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 149 (factor -> IDENTIFIER .)
    RBRACKET        reduce using rule 149 (factor -> IDENTIFIER .)
    DEQ             reduce using rule 149 (factor -> IDENTIFIER .)
    GEQ             reduce using rule 149 (factor -> IDENTIFIER .)
    GT              reduce using rule 149 (factor -> IDENTIFIER .)
    LEQ             reduce using rule 149 (factor -> IDENTIFIER .)
    LT              reduce using rule 149 (factor -> IDENTIFIER .)
    NE              reduce using rule 149 (factor -> IDENTIFIER .)
    DAND            reduce using rule 149 (factor -> IDENTIFIER .)
    DOR             reduce using rule 149 (factor -> IDENTIFIER .)
    LPAREN          reduce using rule 149 (factor -> IDENTIFIER .)
    ICONSTANT       reduce using rule 149 (factor -> IDENTIFIER .)
    DCONSTANT       reduce using rule 149 (factor -> IDENTIFIER .)
    SCONSTANT       reduce using rule 149 (factor -> IDENTIFIER .)
    LBRACKET        shift and go to state 185


state 149

    (70) variable_assignment -> IDENTIFIER ASSIGN_DIVIDE expression .

    SEMI            reduce using rule 70 (variable_assignment -> IDENTIFIER ASSIGN_DIVIDE expression .)
    RPAREN          reduce using rule 70 (variable_assignment -> IDENTIFIER ASSIGN_DIVIDE expression .)


state 150

    (71) variable_assignment -> IDENTIFIER ASSIGN_MULTIPLY expression .

    SEMI            reduce using rule 71 (variable_assignment -> IDENTIFIER ASSIGN_MULTIPLY expression .)
    RPAREN          reduce using rule 71 (variable_assignment -> IDENTIFIER ASSIGN_MULTIPLY expression .)


state 151

    (72) variable_assignment -> IDENTIFIER ASSIGN_PLUS expression .

    SEMI            reduce using rule 72 (variable_assignment -> IDENTIFIER ASSIGN_PLUS expression .)
    RPAREN          reduce using rule 72 (variable_assignment -> IDENTIFIER ASSIGN_PLUS expression .)


state 152

    (73) variable_assignment -> IDENTIFIER ASSIGN_MINUS expression .

    SEMI            reduce using rule 73 (variable_assignment -> IDENTIFIER ASSIGN_MINUS expression .)
    RPAREN          reduce using rule 73 (variable_assignment -> IDENTIFIER ASSIGN_MINUS expression .)


state 153

    (74) variable_assignment -> IDENTIFIER ASSIGN_MOD expression .

    SEMI            reduce using rule 74 (variable_assignment -> IDENTIFIER ASSIGN_MOD expression .)
    RPAREN          reduce using rule 74 (variable_assignment -> IDENTIFIER ASSIGN_MOD expression .)


state 154

    (75) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_MOD expression

    RBRACKET        shift and go to state 205


state 155

    (83) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_MOD expression

    RBRACKET        shift and go to state 206


state 156

    (94) identifiers -> IDENTIFIER . identifiers
    (95) identifiers -> IDENTIFIER . LBRACKET expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET identifiers
    (149) factor -> IDENTIFIER .
    (151) factor -> IDENTIFIER . LBRACKET expression RBRACKET
    (152) factor -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 149 (factor -> IDENTIFIER .)
  ! reduce/reduce conflict for ICONSTANT resolved using rule 149 (factor -> IDENTIFIER .)
  ! reduce/reduce conflict for DCONSTANT resolved using rule 149 (factor -> IDENTIFIER .)
  ! reduce/reduce conflict for SCONSTANT resolved using rule 149 (factor -> IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 149 (factor -> IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 149 (factor -> IDENTIFIER .)
    LBRACKET        shift and go to state 207
    DIVIDE          reduce using rule 149 (factor -> IDENTIFIER .)
    MULTIPLY        reduce using rule 149 (factor -> IDENTIFIER .)
    MOD             reduce using rule 149 (factor -> IDENTIFIER .)
    LPAREN          reduce using rule 149 (factor -> IDENTIFIER .)
    ICONSTANT       reduce using rule 149 (factor -> IDENTIFIER .)
    DCONSTANT       reduce using rule 149 (factor -> IDENTIFIER .)
    SCONSTANT       reduce using rule 149 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 149 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 149 (factor -> IDENTIFIER .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! IDENTIFIER      [ reduce using rule 149 (factor -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 149 (factor -> IDENTIFIER .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 82
    empty                          shift and go to state 43

state 157

    (46) function_call -> IDENTIFIER LPAREN function_call_args . RPAREN

    RPAREN          shift and go to state 208


state 158

    (53) procedure_call -> IDENTIFIER LPAREN procedure_call_args . RPAREN

    RPAREN          shift and go to state 209


state 159

    (62) function_call_args -> identifiers . function_call_args
    (60) procedure_call_args -> identifiers .
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! reduce/reduce conflict for RPAREN resolved using rule 60 (procedure_call_args -> identifiers .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RPAREN          reduce using rule 60 (procedure_call_args -> identifiers .)
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 164
    function_call_args             shift and go to state 210
    term                           shift and go to state 165
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 160

    (63) function_call_args -> term . function_call_args
    (61) procedure_call_args -> term .
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! reduce/reduce conflict for RPAREN resolved using rule 61 (procedure_call_args -> term .)
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RPAREN          reduce using rule 61 (procedure_call_args -> term .)
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    term                           shift and go to state 165
    function_call_args             shift and go to state 211
    identifiers                    shift and go to state 164
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 161

    (64) function_call_args -> empty .
    (98) identifiers -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 64 (function_call_args -> empty .)
    RPAREN          reduce using rule 64 (function_call_args -> empty .)
    IDENTIFIER      reduce using rule 98 (identifiers -> empty .)
    COMMA           reduce using rule 98 (identifiers -> empty .)
    LPAREN          reduce using rule 98 (identifiers -> empty .)
    ICONSTANT       reduce using rule 98 (identifiers -> empty .)
    DCONSTANT       reduce using rule 98 (identifiers -> empty .)
    SCONSTANT       reduce using rule 98 (identifiers -> empty .)
    MINUS           reduce using rule 98 (identifiers -> empty .)

  ! RPAREN          [ reduce using rule 98 (identifiers -> empty .) ]


state 162

    (90) variable_declaration -> variable_definition ASSIGN expression . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    SEMI            reduce using rule 155 (empty -> .)

    identifiers                    shift and go to state 212
    empty                          shift and go to state 43

state 163

    (45) function_call -> built_in_functions LPAREN function_call_args . RPAREN

    RPAREN          shift and go to state 213


state 164

    (62) function_call_args -> identifiers . function_call_args
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    RPAREN          reduce using rule 155 (empty -> .)
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 164
    function_call_args             shift and go to state 210
    term                           shift and go to state 165
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 165

    (63) function_call_args -> term . function_call_args
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    RPAREN          reduce using rule 155 (empty -> .)
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    term                           shift and go to state 165
    function_call_args             shift and go to state 211
    identifiers                    shift and go to state 164
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 166

    (46) function_call -> IDENTIFIER LPAREN . function_call_args RPAREN
    (62) function_call_args -> . identifiers function_call_args
    (63) function_call_args -> . term function_call_args
    (64) function_call_args -> . empty
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (155) empty -> .
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ICONSTANT resolved as shift
  ! shift/reduce conflict for DCONSTANT resolved as shift
  ! shift/reduce conflict for SCONSTANT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      shift and go to state 156
    COMMA           shift and go to state 42
    RPAREN          reduce using rule 155 (empty -> .)
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]

    function_call_args             shift and go to state 157
    identifiers                    shift and go to state 164
    term                           shift and go to state 165
    empty                          shift and go to state 161
    factor                         shift and go to state 130

state 167

    (44) after_else -> if . K_ELSE after_else
    (37) if_statement -> if .
    (38) if_statement -> if . K_ELSE after_else

  ! shift/reduce conflict for K_ELSE resolved as shift
    K_ELSE          shift and go to state 214
    K_FUNCTION      reduce using rule 37 (if_statement -> if .)
    K_PROCEDURE     reduce using rule 37 (if_statement -> if .)
    K_INTEGER       reduce using rule 37 (if_statement -> if .)
    K_DOUBLE        reduce using rule 37 (if_statement -> if .)
    K_STRING        reduce using rule 37 (if_statement -> if .)
    IDENTIFIER      reduce using rule 37 (if_statement -> if .)
    K_RETURN        reduce using rule 37 (if_statement -> if .)
    K_DO            reduce using rule 37 (if_statement -> if .)
    K_WHILE         reduce using rule 37 (if_statement -> if .)
    K_PRINT_INTEGER reduce using rule 37 (if_statement -> if .)
    K_PRINT_DOUBLE  reduce using rule 37 (if_statement -> if .)
    K_PRINT_STRING  reduce using rule 37 (if_statement -> if .)
    K_READ_INTEGER  reduce using rule 37 (if_statement -> if .)
    K_READ_DOUBLE   reduce using rule 37 (if_statement -> if .)
    K_READ_STRING   reduce using rule 37 (if_statement -> if .)
    K_IF            reduce using rule 37 (if_statement -> if .)
    RCURLY          reduce using rule 37 (if_statement -> if .)

  ! K_ELSE          [ reduce using rule 37 (if_statement -> if .) ]


state 168

    (38) if_statement -> if K_ELSE after_else .

    K_FUNCTION      reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PROCEDURE     reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_INTEGER       reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_DOUBLE        reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_STRING        reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    IDENTIFIER      reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_RETURN        reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_DO            reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_WHILE         reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PRINT_INTEGER reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PRINT_DOUBLE  reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PRINT_STRING  reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_READ_INTEGER  reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_READ_DOUBLE   reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_READ_STRING   reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_IF            reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_ELSE          reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    RCURLY          reduce using rule 38 (if_statement -> if K_ELSE after_else .)


state 169

    (42) after_else -> statement .

    K_FUNCTION      reduce using rule 42 (after_else -> statement .)
    K_PROCEDURE     reduce using rule 42 (after_else -> statement .)
    K_INTEGER       reduce using rule 42 (after_else -> statement .)
    K_DOUBLE        reduce using rule 42 (after_else -> statement .)
    K_STRING        reduce using rule 42 (after_else -> statement .)
    IDENTIFIER      reduce using rule 42 (after_else -> statement .)
    K_RETURN        reduce using rule 42 (after_else -> statement .)
    K_DO            reduce using rule 42 (after_else -> statement .)
    K_WHILE         reduce using rule 42 (after_else -> statement .)
    K_PRINT_INTEGER reduce using rule 42 (after_else -> statement .)
    K_PRINT_DOUBLE  reduce using rule 42 (after_else -> statement .)
    K_PRINT_STRING  reduce using rule 42 (after_else -> statement .)
    K_READ_INTEGER  reduce using rule 42 (after_else -> statement .)
    K_READ_DOUBLE   reduce using rule 42 (after_else -> statement .)
    K_READ_STRING   reduce using rule 42 (after_else -> statement .)
    K_IF            reduce using rule 42 (after_else -> statement .)
    K_ELSE          reduce using rule 42 (after_else -> statement .)
    RCURLY          reduce using rule 42 (after_else -> statement .)


state 170

    (43) after_else -> LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 215
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 171

    (41) if -> empty .

    K_FUNCTION      reduce using rule 41 (if -> empty .)
    K_PROCEDURE     reduce using rule 41 (if -> empty .)
    K_INTEGER       reduce using rule 41 (if -> empty .)
    K_DOUBLE        reduce using rule 41 (if -> empty .)
    K_STRING        reduce using rule 41 (if -> empty .)
    IDENTIFIER      reduce using rule 41 (if -> empty .)
    K_RETURN        reduce using rule 41 (if -> empty .)
    K_DO            reduce using rule 41 (if -> empty .)
    K_WHILE         reduce using rule 41 (if -> empty .)
    K_PRINT_INTEGER reduce using rule 41 (if -> empty .)
    K_PRINT_DOUBLE  reduce using rule 41 (if -> empty .)
    K_PRINT_STRING  reduce using rule 41 (if -> empty .)
    K_READ_INTEGER  reduce using rule 41 (if -> empty .)
    K_READ_DOUBLE   reduce using rule 41 (if -> empty .)
    K_READ_STRING   reduce using rule 41 (if -> empty .)
    K_IF            reduce using rule 41 (if -> empty .)
    K_ELSE          reduce using rule 41 (if -> empty .)
    RCURLY          reduce using rule 41 (if -> empty .)


state 172

    (29) do_statement -> K_DO LPAREN variable_assignment . SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> K_DO LPAREN variable_assignment . SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN variable_assignment . SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> K_DO LPAREN variable_assignment . SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement

    SEMI            shift and go to state 216


state 173

    (30) do_statement -> K_DO LPAREN variable_definition . SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> K_DO LPAREN variable_definition . SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (34) do_statement -> K_DO LPAREN variable_definition . SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (36) do_statement -> K_DO LPAREN variable_definition . SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement

    SEMI            shift and go to state 217


state 174

    (67) variable_assignment -> IDENTIFIER . ASSIGN variable_assignment
    (68) variable_assignment -> IDENTIFIER . ASSIGN function_call
    (69) variable_assignment -> IDENTIFIER . ASSIGN expression
    (70) variable_assignment -> IDENTIFIER . ASSIGN_DIVIDE expression
    (71) variable_assignment -> IDENTIFIER . ASSIGN_MULTIPLY expression
    (72) variable_assignment -> IDENTIFIER . ASSIGN_PLUS expression
    (73) variable_assignment -> IDENTIFIER . ASSIGN_MINUS expression
    (74) variable_assignment -> IDENTIFIER . ASSIGN_MOD expression
    (75) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression

    ASSIGN          shift and go to state 89
    ASSIGN_DIVIDE   shift and go to state 90
    ASSIGN_MULTIPLY shift and go to state 91
    ASSIGN_PLUS     shift and go to state 92
    ASSIGN_MINUS    shift and go to state 93
    ASSIGN_MOD      shift and go to state 94
    LBRACKET        shift and go to state 95


state 175

    (27) while_statement -> K_WHILE LPAREN boolean_logic . RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> K_WHILE LPAREN boolean_logic . RPAREN statement

    RPAREN          shift and go to state 218


state 176

    (108) boolean_logic -> arithmetic_logic . DAND arithmetic_logic
    (109) boolean_logic -> arithmetic_logic . DOR arithmetic_logic
    (111) boolean_logic -> arithmetic_logic .

    DAND            shift and go to state 219
    DOR             shift and go to state 220
    RPAREN          reduce using rule 111 (boolean_logic -> arithmetic_logic .)
    SEMI            reduce using rule 111 (boolean_logic -> arithmetic_logic .)


state 177

    (110) boolean_logic -> NOT . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    arithmetic_logic               shift and go to state 221
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 178

    (112) arithmetic_logic -> function_call . DEQ function_call
    (113) arithmetic_logic -> function_call . GEQ function_call
    (114) arithmetic_logic -> function_call . GT function_call
    (115) arithmetic_logic -> function_call . LEQ function_call
    (116) arithmetic_logic -> function_call . LT function_call
    (117) arithmetic_logic -> function_call . NE function_call
    (118) arithmetic_logic -> function_call . DEQ expression
    (119) arithmetic_logic -> function_call . GEQ expression
    (120) arithmetic_logic -> function_call . GT expression
    (121) arithmetic_logic -> function_call . LEQ expression
    (122) arithmetic_logic -> function_call . LT expression
    (123) arithmetic_logic -> function_call . NE expression

    DEQ             shift and go to state 222
    GEQ             shift and go to state 223
    GT              shift and go to state 224
    LEQ             shift and go to state 225
    LT              shift and go to state 226
    NE              shift and go to state 227


state 179

    (124) arithmetic_logic -> expression . DEQ expression
    (125) arithmetic_logic -> expression . GEQ expression
    (126) arithmetic_logic -> expression . GT expression
    (127) arithmetic_logic -> expression . LEQ expression
    (128) arithmetic_logic -> expression . LT expression
    (129) arithmetic_logic -> expression . NE expression
    (130) arithmetic_logic -> expression . DEQ function_call
    (131) arithmetic_logic -> expression . GEQ function_call
    (132) arithmetic_logic -> expression . GT function_call
    (133) arithmetic_logic -> expression . LEQ function_call
    (134) arithmetic_logic -> expression . LT function_call
    (135) arithmetic_logic -> expression . NE function_call

    DEQ             shift and go to state 228
    GEQ             shift and go to state 229
    GT              shift and go to state 230
    LEQ             shift and go to state 231
    LT              shift and go to state 232
    NE              shift and go to state 233


state 180

    (46) function_call -> IDENTIFIER . LPAREN function_call_args RPAREN
    (149) factor -> IDENTIFIER .
    (151) factor -> IDENTIFIER . LBRACKET expression RBRACKET
    (152) factor -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 166
    DIVIDE          reduce using rule 149 (factor -> IDENTIFIER .)
    MULTIPLY        reduce using rule 149 (factor -> IDENTIFIER .)
    MOD             reduce using rule 149 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 149 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 149 (factor -> IDENTIFIER .)
    DEQ             reduce using rule 149 (factor -> IDENTIFIER .)
    GEQ             reduce using rule 149 (factor -> IDENTIFIER .)
    GT              reduce using rule 149 (factor -> IDENTIFIER .)
    LEQ             reduce using rule 149 (factor -> IDENTIFIER .)
    LT              reduce using rule 149 (factor -> IDENTIFIER .)
    NE              reduce using rule 149 (factor -> IDENTIFIER .)
    DAND            reduce using rule 149 (factor -> IDENTIFIER .)
    DOR             reduce using rule 149 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 149 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 149 (factor -> IDENTIFIER .)
    LBRACKET        shift and go to state 185


state 181

    (39) if -> K_IF LPAREN boolean_logic . RPAREN K_THEN statement
    (40) if -> K_IF LPAREN boolean_logic . RPAREN K_THEN LCURLY scope_body RCURLY

    RPAREN          shift and go to state 234


state 182

    (9) procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 9 (procedure -> K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)


state 183

    (95) identifiers -> IDENTIFIER LBRACKET expression . RBRACKET identifiers

    RBRACKET        shift and go to state 235


state 184

    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET identifiers

    RBRACKET        shift and go to state 236


state 185

    (151) factor -> IDENTIFIER LBRACKET . expression RBRACKET
    (152) factor -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 237
    variable_decrement_increment   shift and go to state 238
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 186

    (102) variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .
    (95) identifiers -> IDENTIFIER LBRACKET expression RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for K_INTEGER resolved using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for K_STRING resolved using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for SEMI resolved using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    K_INTEGER       reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    K_DOUBLE        reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    K_STRING        reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 102 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! SEMI            [ reduce using rule 155 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 239
    empty                          shift and go to state 43

state 187

    (105) variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .
    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for K_INTEGER resolved using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for K_STRING resolved using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for SEMI resolved using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_INTEGER       reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_DOUBLE        reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_STRING        reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SEMI            reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    ASSIGN          reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 105 (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! SEMI            [ reduce using rule 155 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 240
    empty                          shift and go to state 43

state 188

    (136) expression -> term PLUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    term                           shift and go to state 128
    expression                     shift and go to state 241
    factor                         shift and go to state 130

state 189

    (137) expression -> term MINUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    term                           shift and go to state 128
    expression                     shift and go to state 242
    factor                         shift and go to state 130

state 190

    (147) factor -> MINUS ICONSTANT .

    DIVIDE          reduce using rule 147 (factor -> MINUS ICONSTANT .)
    MULTIPLY        reduce using rule 147 (factor -> MINUS ICONSTANT .)
    MOD             reduce using rule 147 (factor -> MINUS ICONSTANT .)
    PLUS            reduce using rule 147 (factor -> MINUS ICONSTANT .)
    MINUS           reduce using rule 147 (factor -> MINUS ICONSTANT .)
    RBRACKET        reduce using rule 147 (factor -> MINUS ICONSTANT .)
    SEMI            reduce using rule 147 (factor -> MINUS ICONSTANT .)
    RPAREN          reduce using rule 147 (factor -> MINUS ICONSTANT .)
    IDENTIFIER      reduce using rule 147 (factor -> MINUS ICONSTANT .)
    COMMA           reduce using rule 147 (factor -> MINUS ICONSTANT .)
    LPAREN          reduce using rule 147 (factor -> MINUS ICONSTANT .)
    ICONSTANT       reduce using rule 147 (factor -> MINUS ICONSTANT .)
    DCONSTANT       reduce using rule 147 (factor -> MINUS ICONSTANT .)
    SCONSTANT       reduce using rule 147 (factor -> MINUS ICONSTANT .)
    DEQ             reduce using rule 147 (factor -> MINUS ICONSTANT .)
    GEQ             reduce using rule 147 (factor -> MINUS ICONSTANT .)
    GT              reduce using rule 147 (factor -> MINUS ICONSTANT .)
    LEQ             reduce using rule 147 (factor -> MINUS ICONSTANT .)
    LT              reduce using rule 147 (factor -> MINUS ICONSTANT .)
    NE              reduce using rule 147 (factor -> MINUS ICONSTANT .)
    DAND            reduce using rule 147 (factor -> MINUS ICONSTANT .)
    DOR             reduce using rule 147 (factor -> MINUS ICONSTANT .)


state 191

    (148) factor -> MINUS DCONSTANT .

    DIVIDE          reduce using rule 148 (factor -> MINUS DCONSTANT .)
    MULTIPLY        reduce using rule 148 (factor -> MINUS DCONSTANT .)
    MOD             reduce using rule 148 (factor -> MINUS DCONSTANT .)
    PLUS            reduce using rule 148 (factor -> MINUS DCONSTANT .)
    MINUS           reduce using rule 148 (factor -> MINUS DCONSTANT .)
    RBRACKET        reduce using rule 148 (factor -> MINUS DCONSTANT .)
    SEMI            reduce using rule 148 (factor -> MINUS DCONSTANT .)
    RPAREN          reduce using rule 148 (factor -> MINUS DCONSTANT .)
    IDENTIFIER      reduce using rule 148 (factor -> MINUS DCONSTANT .)
    COMMA           reduce using rule 148 (factor -> MINUS DCONSTANT .)
    LPAREN          reduce using rule 148 (factor -> MINUS DCONSTANT .)
    ICONSTANT       reduce using rule 148 (factor -> MINUS DCONSTANT .)
    DCONSTANT       reduce using rule 148 (factor -> MINUS DCONSTANT .)
    SCONSTANT       reduce using rule 148 (factor -> MINUS DCONSTANT .)
    DEQ             reduce using rule 148 (factor -> MINUS DCONSTANT .)
    GEQ             reduce using rule 148 (factor -> MINUS DCONSTANT .)
    GT              reduce using rule 148 (factor -> MINUS DCONSTANT .)
    LEQ             reduce using rule 148 (factor -> MINUS DCONSTANT .)
    LT              reduce using rule 148 (factor -> MINUS DCONSTANT .)
    NE              reduce using rule 148 (factor -> MINUS DCONSTANT .)
    DAND            reduce using rule 148 (factor -> MINUS DCONSTANT .)
    DOR             reduce using rule 148 (factor -> MINUS DCONSTANT .)


state 192

    (150) factor -> MINUS IDENTIFIER .
    (153) factor -> MINUS IDENTIFIER . LBRACKET expression RBRACKET
    (154) factor -> MINUS IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET

    DIVIDE          reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    MOD             reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    PLUS            reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    MINUS           reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    RBRACKET        reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    SEMI            reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    RPAREN          reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    IDENTIFIER      reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    COMMA           reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    LPAREN          reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    ICONSTANT       reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    DCONSTANT       reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    SCONSTANT       reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    DEQ             reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    GEQ             reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    GT              reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    LEQ             reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    LT              reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    NE              reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    DAND            reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    DOR             reduce using rule 150 (factor -> MINUS IDENTIFIER .)
    LBRACKET        shift and go to state 243


state 193

    (139) term -> factor DIVIDE . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    factor                         shift and go to state 130
    term                           shift and go to state 244

state 194

    (140) term -> factor MULTIPLY . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    factor                         shift and go to state 130
    term                           shift and go to state 245

state 195

    (141) term -> factor MOD . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    factor                         shift and go to state 130
    term                           shift and go to state 246

state 196

    (143) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 247


state 197

    (103) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .
    (95) identifiers -> IDENTIFIER LBRACKET expression RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for K_INTEGER resolved using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for K_STRING resolved using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for SEMI resolved using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    K_INTEGER       reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    K_DOUBLE        reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    K_STRING        reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 103 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! SEMI            [ reduce using rule 155 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 239
    empty                          shift and go to state 43

state 198

    (106) variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .
    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for K_INTEGER resolved using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for K_STRING resolved using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for SEMI resolved using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_INTEGER       reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_DOUBLE        reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_STRING        reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SEMI            reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    ASSIGN          reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 106 (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! SEMI            [ reduce using rule 155 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 240
    empty                          shift and go to state 43

state 199

    (104) variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .
    (95) identifiers -> IDENTIFIER LBRACKET expression RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for K_INTEGER resolved using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for K_STRING resolved using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for SEMI resolved using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    K_INTEGER       reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    K_DOUBLE        reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    K_STRING        reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    ASSIGN          reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 104 (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! SEMI            [ reduce using rule 155 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 239
    empty                          shift and go to state 43

state 200

    (107) variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .
    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for K_INTEGER resolved using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for K_STRING resolved using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for SEMI resolved using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for ASSIGN resolved using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_INTEGER       reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_DOUBLE        reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    K_STRING        reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SEMI            reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    ASSIGN          reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! COMMA           [ reduce using rule 107 (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]
  ! SEMI            [ reduce using rule 155 (empty -> .) ]
  ! ASSIGN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 240
    empty                          shift and go to state 43

state 201

    (5) function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 5 (function -> K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)


state 202

    (6) function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 6 (function -> K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)


state 203

    (7) function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 7 (function -> K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY .)


state 204

    (75) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER LBRACKET . expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (151) factor -> IDENTIFIER LBRACKET . expression RBRACKET
    (152) factor -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 248
    variable_decrement_increment   shift and go to state 249
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 205

    (75) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN expression
    (78) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_MOD expression

    ASSIGN          shift and go to state 250
    ASSIGN_DIVIDE   shift and go to state 251
    ASSIGN_MULTIPLY shift and go to state 252
    ASSIGN_PLUS     shift and go to state 253
    ASSIGN_MINUS    shift and go to state 254
    ASSIGN_MOD      shift and go to state 255


state 206

    (83) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN expression
    (85) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_MOD expression

    ASSIGN          shift and go to state 256
    ASSIGN_DIVIDE   shift and go to state 257
    ASSIGN_MULTIPLY shift and go to state 258
    ASSIGN_PLUS     shift and go to state 259
    ASSIGN_MINUS    shift and go to state 260
    ASSIGN_MOD      shift and go to state 261


state 207

    (95) identifiers -> IDENTIFIER LBRACKET . expression RBRACKET identifiers
    (96) identifiers -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET identifiers
    (151) factor -> IDENTIFIER LBRACKET . expression RBRACKET
    (152) factor -> IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 262
    variable_decrement_increment   shift and go to state 263
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 208

    (46) function_call -> IDENTIFIER LPAREN function_call_args RPAREN .

    SEMI            reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    RPAREN          reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    DEQ             reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    GEQ             reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    GT              reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    LEQ             reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    LT              reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    NE              reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    DAND            reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)
    DOR             reduce using rule 46 (function_call -> IDENTIFIER LPAREN function_call_args RPAREN .)


state 209

    (53) procedure_call -> IDENTIFIER LPAREN procedure_call_args RPAREN .

    SEMI            reduce using rule 53 (procedure_call -> IDENTIFIER LPAREN procedure_call_args RPAREN .)


state 210

    (62) function_call_args -> identifiers function_call_args .

    RPAREN          reduce using rule 62 (function_call_args -> identifiers function_call_args .)


state 211

    (63) function_call_args -> term function_call_args .

    RPAREN          reduce using rule 63 (function_call_args -> term function_call_args .)


state 212

    (90) variable_declaration -> variable_definition ASSIGN expression identifiers .

    SEMI            reduce using rule 90 (variable_declaration -> variable_definition ASSIGN expression identifiers .)


state 213

    (45) function_call -> built_in_functions LPAREN function_call_args RPAREN .

    SEMI            reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    RPAREN          reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    DEQ             reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    GEQ             reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    GT              reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    LEQ             reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    LT              reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    NE              reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    DAND            reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)
    DOR             reduce using rule 45 (function_call -> built_in_functions LPAREN function_call_args RPAREN .)


state 214

    (44) after_else -> if K_ELSE . after_else
    (38) if_statement -> if K_ELSE . after_else
    (42) after_else -> . statement
    (43) after_else -> . LCURLY scope_body RCURLY
    (44) after_else -> . if K_ELSE after_else
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (155) empty -> .
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
    LCURLY          shift and go to state 170
    K_IF            shift and go to state 78
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    if                             shift and go to state 167
    after_else                     shift and go to state 264
    statement                      shift and go to state 169
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    empty                          shift and go to state 171
    built_in_functions             shift and go to state 67

state 215

    (43) after_else -> LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 265


state 216

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI . boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> K_DO LPAREN variable_assignment SEMI . boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN variable_assignment SEMI . boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> K_DO LPAREN variable_assignment SEMI . boolean_logic SEMI variable_decrement_increment RPAREN statement
    (108) boolean_logic -> . arithmetic_logic DAND arithmetic_logic
    (109) boolean_logic -> . arithmetic_logic DOR arithmetic_logic
    (110) boolean_logic -> . NOT arithmetic_logic
    (111) boolean_logic -> . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    NOT             shift and go to state 177
    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    boolean_logic                  shift and go to state 266
    arithmetic_logic               shift and go to state 176
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 217

    (30) do_statement -> K_DO LPAREN variable_definition SEMI . boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> K_DO LPAREN variable_definition SEMI . boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (34) do_statement -> K_DO LPAREN variable_definition SEMI . boolean_logic SEMI variable_assignment RPAREN statement
    (36) do_statement -> K_DO LPAREN variable_definition SEMI . boolean_logic SEMI variable_decrement_increment RPAREN statement
    (108) boolean_logic -> . arithmetic_logic DAND arithmetic_logic
    (109) boolean_logic -> . arithmetic_logic DOR arithmetic_logic
    (110) boolean_logic -> . NOT arithmetic_logic
    (111) boolean_logic -> . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    NOT             shift and go to state 177
    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    boolean_logic                  shift and go to state 267
    arithmetic_logic               shift and go to state 176
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 218

    (27) while_statement -> K_WHILE LPAREN boolean_logic RPAREN . LCURLY scope_body RCURLY
    (28) while_statement -> K_WHILE LPAREN boolean_logic RPAREN . statement
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (155) empty -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    LCURLY          shift and go to state 268
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    statement                      shift and go to state 269
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69
    empty                          shift and go to state 171

state 219

    (108) boolean_logic -> arithmetic_logic DAND . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    arithmetic_logic               shift and go to state 270
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 220

    (109) boolean_logic -> arithmetic_logic DOR . arithmetic_logic
    (112) arithmetic_logic -> . function_call DEQ function_call
    (113) arithmetic_logic -> . function_call GEQ function_call
    (114) arithmetic_logic -> . function_call GT function_call
    (115) arithmetic_logic -> . function_call LEQ function_call
    (116) arithmetic_logic -> . function_call LT function_call
    (117) arithmetic_logic -> . function_call NE function_call
    (118) arithmetic_logic -> . function_call DEQ expression
    (119) arithmetic_logic -> . function_call GEQ expression
    (120) arithmetic_logic -> . function_call GT expression
    (121) arithmetic_logic -> . function_call LEQ expression
    (122) arithmetic_logic -> . function_call LT expression
    (123) arithmetic_logic -> . function_call NE expression
    (124) arithmetic_logic -> . expression DEQ expression
    (125) arithmetic_logic -> . expression GEQ expression
    (126) arithmetic_logic -> . expression GT expression
    (127) arithmetic_logic -> . expression LEQ expression
    (128) arithmetic_logic -> . expression LT expression
    (129) arithmetic_logic -> . expression NE expression
    (130) arithmetic_logic -> . expression DEQ function_call
    (131) arithmetic_logic -> . expression GEQ function_call
    (132) arithmetic_logic -> . expression GT function_call
    (133) arithmetic_logic -> . expression LEQ function_call
    (134) arithmetic_logic -> . expression LT function_call
    (135) arithmetic_logic -> . expression NE function_call
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    arithmetic_logic               shift and go to state 271
    function_call                  shift and go to state 178
    expression                     shift and go to state 179
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 221

    (110) boolean_logic -> NOT arithmetic_logic .

    RPAREN          reduce using rule 110 (boolean_logic -> NOT arithmetic_logic .)
    SEMI            reduce using rule 110 (boolean_logic -> NOT arithmetic_logic .)


state 222

    (112) arithmetic_logic -> function_call DEQ . function_call
    (118) arithmetic_logic -> function_call DEQ . expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    function_call                  shift and go to state 272
    expression                     shift and go to state 273
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 223

    (113) arithmetic_logic -> function_call GEQ . function_call
    (119) arithmetic_logic -> function_call GEQ . expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    function_call                  shift and go to state 274
    expression                     shift and go to state 275
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 224

    (114) arithmetic_logic -> function_call GT . function_call
    (120) arithmetic_logic -> function_call GT . expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    function_call                  shift and go to state 276
    expression                     shift and go to state 277
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 225

    (115) arithmetic_logic -> function_call LEQ . function_call
    (121) arithmetic_logic -> function_call LEQ . expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    function_call                  shift and go to state 278
    expression                     shift and go to state 279
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 226

    (116) arithmetic_logic -> function_call LT . function_call
    (122) arithmetic_logic -> function_call LT . expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    function_call                  shift and go to state 280
    expression                     shift and go to state 281
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 227

    (117) arithmetic_logic -> function_call NE . function_call
    (123) arithmetic_logic -> function_call NE . expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    function_call                  shift and go to state 282
    expression                     shift and go to state 283
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 228

    (124) arithmetic_logic -> expression DEQ . expression
    (130) arithmetic_logic -> expression DEQ . function_call
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 284
    function_call                  shift and go to state 285
    term                           shift and go to state 128
    built_in_functions             shift and go to state 67
    factor                         shift and go to state 130

state 229

    (125) arithmetic_logic -> expression GEQ . expression
    (131) arithmetic_logic -> expression GEQ . function_call
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 286
    function_call                  shift and go to state 287
    term                           shift and go to state 128
    built_in_functions             shift and go to state 67
    factor                         shift and go to state 130

state 230

    (126) arithmetic_logic -> expression GT . expression
    (132) arithmetic_logic -> expression GT . function_call
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 288
    function_call                  shift and go to state 289
    term                           shift and go to state 128
    built_in_functions             shift and go to state 67
    factor                         shift and go to state 130

state 231

    (127) arithmetic_logic -> expression LEQ . expression
    (133) arithmetic_logic -> expression LEQ . function_call
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 290
    function_call                  shift and go to state 291
    term                           shift and go to state 128
    built_in_functions             shift and go to state 67
    factor                         shift and go to state 130

state 232

    (128) arithmetic_logic -> expression LT . expression
    (134) arithmetic_logic -> expression LT . function_call
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 292
    function_call                  shift and go to state 293
    term                           shift and go to state 128
    built_in_functions             shift and go to state 67
    factor                         shift and go to state 130

state 233

    (129) arithmetic_logic -> expression NE . expression
    (135) arithmetic_logic -> expression NE . function_call
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 180
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 294
    function_call                  shift and go to state 295
    term                           shift and go to state 128
    built_in_functions             shift and go to state 67
    factor                         shift and go to state 130

state 234

    (39) if -> K_IF LPAREN boolean_logic RPAREN . K_THEN statement
    (40) if -> K_IF LPAREN boolean_logic RPAREN . K_THEN LCURLY scope_body RCURLY

    K_THEN          shift and go to state 296


state 235

    (95) identifiers -> IDENTIFIER LBRACKET expression RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)
    LPAREN          reduce using rule 155 (empty -> .)
    ICONSTANT       reduce using rule 155 (empty -> .)
    DCONSTANT       reduce using rule 155 (empty -> .)
    SCONSTANT       reduce using rule 155 (empty -> .)
    MINUS           reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 239
    empty                          shift and go to state 43

state 236

    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . identifiers
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42
    K_INTEGER       reduce using rule 155 (empty -> .)
    K_DOUBLE        reduce using rule 155 (empty -> .)
    K_STRING        reduce using rule 155 (empty -> .)
    RPAREN          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    ASSIGN          reduce using rule 155 (empty -> .)
    LPAREN          reduce using rule 155 (empty -> .)
    ICONSTANT       reduce using rule 155 (empty -> .)
    DCONSTANT       reduce using rule 155 (empty -> .)
    SCONSTANT       reduce using rule 155 (empty -> .)
    MINUS           reduce using rule 155 (empty -> .)

  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 240
    empty                          shift and go to state 43

state 237

    (151) factor -> IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 297


state 238

    (152) factor -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET

    RBRACKET        shift and go to state 298


state 239

    (95) identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .

    COMMA           reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    K_INTEGER       reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    K_DOUBLE        reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    K_STRING        reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    RPAREN          reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    SEMI            reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    ASSIGN          reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    IDENTIFIER      reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    LPAREN          reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    ICONSTANT       reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    DCONSTANT       reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    SCONSTANT       reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)
    MINUS           reduce using rule 95 (identifiers -> IDENTIFIER LBRACKET expression RBRACKET identifiers .)


state 240

    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .

    COMMA           reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    K_INTEGER       reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    K_DOUBLE        reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    K_STRING        reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    RPAREN          reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    SEMI            reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    ASSIGN          reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    IDENTIFIER      reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    LPAREN          reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    ICONSTANT       reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    DCONSTANT       reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    SCONSTANT       reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)
    MINUS           reduce using rule 96 (identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers .)


state 241

    (136) expression -> term PLUS expression .

    RBRACKET        reduce using rule 136 (expression -> term PLUS expression .)
    SEMI            reduce using rule 136 (expression -> term PLUS expression .)
    RPAREN          reduce using rule 136 (expression -> term PLUS expression .)
    IDENTIFIER      reduce using rule 136 (expression -> term PLUS expression .)
    COMMA           reduce using rule 136 (expression -> term PLUS expression .)
    DEQ             reduce using rule 136 (expression -> term PLUS expression .)
    GEQ             reduce using rule 136 (expression -> term PLUS expression .)
    GT              reduce using rule 136 (expression -> term PLUS expression .)
    LEQ             reduce using rule 136 (expression -> term PLUS expression .)
    LT              reduce using rule 136 (expression -> term PLUS expression .)
    NE              reduce using rule 136 (expression -> term PLUS expression .)
    DAND            reduce using rule 136 (expression -> term PLUS expression .)
    DOR             reduce using rule 136 (expression -> term PLUS expression .)


state 242

    (137) expression -> term MINUS expression .

    RBRACKET        reduce using rule 137 (expression -> term MINUS expression .)
    SEMI            reduce using rule 137 (expression -> term MINUS expression .)
    RPAREN          reduce using rule 137 (expression -> term MINUS expression .)
    IDENTIFIER      reduce using rule 137 (expression -> term MINUS expression .)
    COMMA           reduce using rule 137 (expression -> term MINUS expression .)
    DEQ             reduce using rule 137 (expression -> term MINUS expression .)
    GEQ             reduce using rule 137 (expression -> term MINUS expression .)
    GT              reduce using rule 137 (expression -> term MINUS expression .)
    LEQ             reduce using rule 137 (expression -> term MINUS expression .)
    LT              reduce using rule 137 (expression -> term MINUS expression .)
    NE              reduce using rule 137 (expression -> term MINUS expression .)
    DAND            reduce using rule 137 (expression -> term MINUS expression .)
    DOR             reduce using rule 137 (expression -> term MINUS expression .)


state 243

    (153) factor -> MINUS IDENTIFIER LBRACKET . expression RBRACKET
    (154) factor -> MINUS IDENTIFIER LBRACKET . variable_decrement_increment RBRACKET
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 124
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 299
    variable_decrement_increment   shift and go to state 300
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 244

    (139) term -> factor DIVIDE term .

    PLUS            reduce using rule 139 (term -> factor DIVIDE term .)
    MINUS           reduce using rule 139 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 139 (term -> factor DIVIDE term .)
    SEMI            reduce using rule 139 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 139 (term -> factor DIVIDE term .)
    IDENTIFIER      reduce using rule 139 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 139 (term -> factor DIVIDE term .)
    LPAREN          reduce using rule 139 (term -> factor DIVIDE term .)
    ICONSTANT       reduce using rule 139 (term -> factor DIVIDE term .)
    DCONSTANT       reduce using rule 139 (term -> factor DIVIDE term .)
    SCONSTANT       reduce using rule 139 (term -> factor DIVIDE term .)
    DEQ             reduce using rule 139 (term -> factor DIVIDE term .)
    GEQ             reduce using rule 139 (term -> factor DIVIDE term .)
    GT              reduce using rule 139 (term -> factor DIVIDE term .)
    LEQ             reduce using rule 139 (term -> factor DIVIDE term .)
    LT              reduce using rule 139 (term -> factor DIVIDE term .)
    NE              reduce using rule 139 (term -> factor DIVIDE term .)
    DAND            reduce using rule 139 (term -> factor DIVIDE term .)
    DOR             reduce using rule 139 (term -> factor DIVIDE term .)


state 245

    (140) term -> factor MULTIPLY term .

    PLUS            reduce using rule 140 (term -> factor MULTIPLY term .)
    MINUS           reduce using rule 140 (term -> factor MULTIPLY term .)
    RBRACKET        reduce using rule 140 (term -> factor MULTIPLY term .)
    SEMI            reduce using rule 140 (term -> factor MULTIPLY term .)
    RPAREN          reduce using rule 140 (term -> factor MULTIPLY term .)
    IDENTIFIER      reduce using rule 140 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 140 (term -> factor MULTIPLY term .)
    LPAREN          reduce using rule 140 (term -> factor MULTIPLY term .)
    ICONSTANT       reduce using rule 140 (term -> factor MULTIPLY term .)
    DCONSTANT       reduce using rule 140 (term -> factor MULTIPLY term .)
    SCONSTANT       reduce using rule 140 (term -> factor MULTIPLY term .)
    DEQ             reduce using rule 140 (term -> factor MULTIPLY term .)
    GEQ             reduce using rule 140 (term -> factor MULTIPLY term .)
    GT              reduce using rule 140 (term -> factor MULTIPLY term .)
    LEQ             reduce using rule 140 (term -> factor MULTIPLY term .)
    LT              reduce using rule 140 (term -> factor MULTIPLY term .)
    NE              reduce using rule 140 (term -> factor MULTIPLY term .)
    DAND            reduce using rule 140 (term -> factor MULTIPLY term .)
    DOR             reduce using rule 140 (term -> factor MULTIPLY term .)


state 246

    (141) term -> factor MOD term .

    PLUS            reduce using rule 141 (term -> factor MOD term .)
    MINUS           reduce using rule 141 (term -> factor MOD term .)
    RBRACKET        reduce using rule 141 (term -> factor MOD term .)
    SEMI            reduce using rule 141 (term -> factor MOD term .)
    RPAREN          reduce using rule 141 (term -> factor MOD term .)
    IDENTIFIER      reduce using rule 141 (term -> factor MOD term .)
    COMMA           reduce using rule 141 (term -> factor MOD term .)
    LPAREN          reduce using rule 141 (term -> factor MOD term .)
    ICONSTANT       reduce using rule 141 (term -> factor MOD term .)
    DCONSTANT       reduce using rule 141 (term -> factor MOD term .)
    SCONSTANT       reduce using rule 141 (term -> factor MOD term .)
    DEQ             reduce using rule 141 (term -> factor MOD term .)
    GEQ             reduce using rule 141 (term -> factor MOD term .)
    GT              reduce using rule 141 (term -> factor MOD term .)
    LEQ             reduce using rule 141 (term -> factor MOD term .)
    LT              reduce using rule 141 (term -> factor MOD term .)
    NE              reduce using rule 141 (term -> factor MOD term .)
    DAND            reduce using rule 141 (term -> factor MOD term .)
    DOR             reduce using rule 141 (term -> factor MOD term .)


state 247

    (143) factor -> LPAREN expression RPAREN .

    DIVIDE          reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    ICONSTANT       reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    DCONSTANT       reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    SCONSTANT       reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    DEQ             reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    DAND            reduce using rule 143 (factor -> LPAREN expression RPAREN .)
    DOR             reduce using rule 143 (factor -> LPAREN expression RPAREN .)


state 248

    (75) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER LBRACKET expression . RBRACKET ASSIGN_MOD expression
    (151) factor -> IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 301


state 249

    (83) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET ASSIGN_MOD expression
    (152) factor -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET

    RBRACKET        shift and go to state 302


state 250

    (75) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN . variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN . function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN . expression
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 144
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    expression                     shift and go to state 303
    variable_assignment            shift and go to state 304
    function_call                  shift and go to state 305
    built_in_functions             shift and go to state 67
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 251

    (78) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 306
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 252

    (79) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 307
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 253

    (80) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 308
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 254

    (81) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 309
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 255

    (82) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 310
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 256

    (83) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN . variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN . expression
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    IDENTIFIER      shift and go to state 311
    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129

    variable_assignment            shift and go to state 312
    expression                     shift and go to state 313
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 257

    (85) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 314
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 258

    (86) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 315
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 259

    (87) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 316
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 260

    (88) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 317
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 261

    (89) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD . expression
    (136) expression -> . term PLUS expression
    (137) expression -> . term MINUS expression
    (138) expression -> . term
    (139) term -> . factor DIVIDE term
    (140) term -> . factor MULTIPLY term
    (141) term -> . factor MOD term
    (142) term -> . factor
    (143) factor -> . LPAREN expression RPAREN
    (144) factor -> . ICONSTANT
    (145) factor -> . DCONSTANT
    (146) factor -> . SCONSTANT
    (147) factor -> . MINUS ICONSTANT
    (148) factor -> . MINUS DCONSTANT
    (149) factor -> . IDENTIFIER
    (150) factor -> . MINUS IDENTIFIER
    (151) factor -> . IDENTIFIER LBRACKET expression RBRACKET
    (152) factor -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (153) factor -> . MINUS IDENTIFIER LBRACKET expression RBRACKET
    (154) factor -> . MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET

    LPAREN          shift and go to state 131
    ICONSTANT       shift and go to state 132
    DCONSTANT       shift and go to state 133
    SCONSTANT       shift and go to state 134
    MINUS           shift and go to state 129
    IDENTIFIER      shift and go to state 148

    expression                     shift and go to state 318
    term                           shift and go to state 128
    factor                         shift and go to state 130

state 262

    (95) identifiers -> IDENTIFIER LBRACKET expression . RBRACKET identifiers
    (151) factor -> IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 319


state 263

    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET identifiers
    (152) factor -> IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET

    RBRACKET        shift and go to state 320


state 264

    (44) after_else -> if K_ELSE after_else .
    (38) if_statement -> if K_ELSE after_else .

  ! reduce/reduce conflict for K_FUNCTION resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_PROCEDURE resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_INTEGER resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_DOUBLE resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_STRING resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_RETURN resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_DO resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_WHILE resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_PRINT_INTEGER resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_PRINT_DOUBLE resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_PRINT_STRING resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_READ_INTEGER resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_READ_DOUBLE resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_READ_STRING resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_IF resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for K_ELSE resolved using rule 38 (if_statement -> if K_ELSE after_else .)
  ! reduce/reduce conflict for RCURLY resolved using rule 38 (if_statement -> if K_ELSE after_else .)
    K_FUNCTION      reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PROCEDURE     reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_INTEGER       reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_DOUBLE        reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_STRING        reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    IDENTIFIER      reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_RETURN        reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_DO            reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_WHILE         reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PRINT_INTEGER reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PRINT_DOUBLE  reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_PRINT_STRING  reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_READ_INTEGER  reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_READ_DOUBLE   reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_READ_STRING   reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_IF            reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    K_ELSE          reduce using rule 38 (if_statement -> if K_ELSE after_else .)
    RCURLY          reduce using rule 38 (if_statement -> if K_ELSE after_else .)

  ! K_FUNCTION      [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_PROCEDURE     [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_INTEGER       [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_DOUBLE        [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_STRING        [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! IDENTIFIER      [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_RETURN        [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_DO            [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_WHILE         [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_PRINT_INTEGER [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_PRINT_STRING  [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_READ_INTEGER  [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_READ_DOUBLE   [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_READ_STRING   [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_IF            [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! K_ELSE          [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]
  ! RCURLY          [ reduce using rule 44 (after_else -> if K_ELSE after_else .) ]


state 265

    (43) after_else -> LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 43 (after_else -> LCURLY scope_body RCURLY .)


state 266

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic . SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic . SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic . SEMI variable_assignment RPAREN statement
    (35) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic . SEMI variable_decrement_increment RPAREN statement

    SEMI            shift and go to state 321


state 267

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic . SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic . SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (34) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic . SEMI variable_assignment RPAREN statement
    (36) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic . SEMI variable_decrement_increment RPAREN statement

    SEMI            shift and go to state 322


state 268

    (27) while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 323
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 269

    (28) while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .

    K_FUNCTION      reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_PROCEDURE     reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_INTEGER       reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_DOUBLE        reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_STRING        reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    IDENTIFIER      reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_RETURN        reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_DO            reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_WHILE         reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_PRINT_INTEGER reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_PRINT_DOUBLE  reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_PRINT_STRING  reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_READ_INTEGER  reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_READ_DOUBLE   reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_READ_STRING   reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_IF            reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    K_ELSE          reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)
    RCURLY          reduce using rule 28 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN statement .)


state 270

    (108) boolean_logic -> arithmetic_logic DAND arithmetic_logic .

    RPAREN          reduce using rule 108 (boolean_logic -> arithmetic_logic DAND arithmetic_logic .)
    SEMI            reduce using rule 108 (boolean_logic -> arithmetic_logic DAND arithmetic_logic .)


state 271

    (109) boolean_logic -> arithmetic_logic DOR arithmetic_logic .

    RPAREN          reduce using rule 109 (boolean_logic -> arithmetic_logic DOR arithmetic_logic .)
    SEMI            reduce using rule 109 (boolean_logic -> arithmetic_logic DOR arithmetic_logic .)


state 272

    (112) arithmetic_logic -> function_call DEQ function_call .

    DAND            reduce using rule 112 (arithmetic_logic -> function_call DEQ function_call .)
    DOR             reduce using rule 112 (arithmetic_logic -> function_call DEQ function_call .)
    RPAREN          reduce using rule 112 (arithmetic_logic -> function_call DEQ function_call .)
    SEMI            reduce using rule 112 (arithmetic_logic -> function_call DEQ function_call .)


state 273

    (118) arithmetic_logic -> function_call DEQ expression .

    DAND            reduce using rule 118 (arithmetic_logic -> function_call DEQ expression .)
    DOR             reduce using rule 118 (arithmetic_logic -> function_call DEQ expression .)
    RPAREN          reduce using rule 118 (arithmetic_logic -> function_call DEQ expression .)
    SEMI            reduce using rule 118 (arithmetic_logic -> function_call DEQ expression .)


state 274

    (113) arithmetic_logic -> function_call GEQ function_call .

    DAND            reduce using rule 113 (arithmetic_logic -> function_call GEQ function_call .)
    DOR             reduce using rule 113 (arithmetic_logic -> function_call GEQ function_call .)
    RPAREN          reduce using rule 113 (arithmetic_logic -> function_call GEQ function_call .)
    SEMI            reduce using rule 113 (arithmetic_logic -> function_call GEQ function_call .)


state 275

    (119) arithmetic_logic -> function_call GEQ expression .

    DAND            reduce using rule 119 (arithmetic_logic -> function_call GEQ expression .)
    DOR             reduce using rule 119 (arithmetic_logic -> function_call GEQ expression .)
    RPAREN          reduce using rule 119 (arithmetic_logic -> function_call GEQ expression .)
    SEMI            reduce using rule 119 (arithmetic_logic -> function_call GEQ expression .)


state 276

    (114) arithmetic_logic -> function_call GT function_call .

    DAND            reduce using rule 114 (arithmetic_logic -> function_call GT function_call .)
    DOR             reduce using rule 114 (arithmetic_logic -> function_call GT function_call .)
    RPAREN          reduce using rule 114 (arithmetic_logic -> function_call GT function_call .)
    SEMI            reduce using rule 114 (arithmetic_logic -> function_call GT function_call .)


state 277

    (120) arithmetic_logic -> function_call GT expression .

    DAND            reduce using rule 120 (arithmetic_logic -> function_call GT expression .)
    DOR             reduce using rule 120 (arithmetic_logic -> function_call GT expression .)
    RPAREN          reduce using rule 120 (arithmetic_logic -> function_call GT expression .)
    SEMI            reduce using rule 120 (arithmetic_logic -> function_call GT expression .)


state 278

    (115) arithmetic_logic -> function_call LEQ function_call .

    DAND            reduce using rule 115 (arithmetic_logic -> function_call LEQ function_call .)
    DOR             reduce using rule 115 (arithmetic_logic -> function_call LEQ function_call .)
    RPAREN          reduce using rule 115 (arithmetic_logic -> function_call LEQ function_call .)
    SEMI            reduce using rule 115 (arithmetic_logic -> function_call LEQ function_call .)


state 279

    (121) arithmetic_logic -> function_call LEQ expression .

    DAND            reduce using rule 121 (arithmetic_logic -> function_call LEQ expression .)
    DOR             reduce using rule 121 (arithmetic_logic -> function_call LEQ expression .)
    RPAREN          reduce using rule 121 (arithmetic_logic -> function_call LEQ expression .)
    SEMI            reduce using rule 121 (arithmetic_logic -> function_call LEQ expression .)


state 280

    (116) arithmetic_logic -> function_call LT function_call .

    DAND            reduce using rule 116 (arithmetic_logic -> function_call LT function_call .)
    DOR             reduce using rule 116 (arithmetic_logic -> function_call LT function_call .)
    RPAREN          reduce using rule 116 (arithmetic_logic -> function_call LT function_call .)
    SEMI            reduce using rule 116 (arithmetic_logic -> function_call LT function_call .)


state 281

    (122) arithmetic_logic -> function_call LT expression .

    DAND            reduce using rule 122 (arithmetic_logic -> function_call LT expression .)
    DOR             reduce using rule 122 (arithmetic_logic -> function_call LT expression .)
    RPAREN          reduce using rule 122 (arithmetic_logic -> function_call LT expression .)
    SEMI            reduce using rule 122 (arithmetic_logic -> function_call LT expression .)


state 282

    (117) arithmetic_logic -> function_call NE function_call .

    DAND            reduce using rule 117 (arithmetic_logic -> function_call NE function_call .)
    DOR             reduce using rule 117 (arithmetic_logic -> function_call NE function_call .)
    RPAREN          reduce using rule 117 (arithmetic_logic -> function_call NE function_call .)
    SEMI            reduce using rule 117 (arithmetic_logic -> function_call NE function_call .)


state 283

    (123) arithmetic_logic -> function_call NE expression .

    DAND            reduce using rule 123 (arithmetic_logic -> function_call NE expression .)
    DOR             reduce using rule 123 (arithmetic_logic -> function_call NE expression .)
    RPAREN          reduce using rule 123 (arithmetic_logic -> function_call NE expression .)
    SEMI            reduce using rule 123 (arithmetic_logic -> function_call NE expression .)


state 284

    (124) arithmetic_logic -> expression DEQ expression .

    DAND            reduce using rule 124 (arithmetic_logic -> expression DEQ expression .)
    DOR             reduce using rule 124 (arithmetic_logic -> expression DEQ expression .)
    RPAREN          reduce using rule 124 (arithmetic_logic -> expression DEQ expression .)
    SEMI            reduce using rule 124 (arithmetic_logic -> expression DEQ expression .)


state 285

    (130) arithmetic_logic -> expression DEQ function_call .

    DAND            reduce using rule 130 (arithmetic_logic -> expression DEQ function_call .)
    DOR             reduce using rule 130 (arithmetic_logic -> expression DEQ function_call .)
    RPAREN          reduce using rule 130 (arithmetic_logic -> expression DEQ function_call .)
    SEMI            reduce using rule 130 (arithmetic_logic -> expression DEQ function_call .)


state 286

    (125) arithmetic_logic -> expression GEQ expression .

    DAND            reduce using rule 125 (arithmetic_logic -> expression GEQ expression .)
    DOR             reduce using rule 125 (arithmetic_logic -> expression GEQ expression .)
    RPAREN          reduce using rule 125 (arithmetic_logic -> expression GEQ expression .)
    SEMI            reduce using rule 125 (arithmetic_logic -> expression GEQ expression .)


state 287

    (131) arithmetic_logic -> expression GEQ function_call .

    DAND            reduce using rule 131 (arithmetic_logic -> expression GEQ function_call .)
    DOR             reduce using rule 131 (arithmetic_logic -> expression GEQ function_call .)
    RPAREN          reduce using rule 131 (arithmetic_logic -> expression GEQ function_call .)
    SEMI            reduce using rule 131 (arithmetic_logic -> expression GEQ function_call .)


state 288

    (126) arithmetic_logic -> expression GT expression .

    DAND            reduce using rule 126 (arithmetic_logic -> expression GT expression .)
    DOR             reduce using rule 126 (arithmetic_logic -> expression GT expression .)
    RPAREN          reduce using rule 126 (arithmetic_logic -> expression GT expression .)
    SEMI            reduce using rule 126 (arithmetic_logic -> expression GT expression .)


state 289

    (132) arithmetic_logic -> expression GT function_call .

    DAND            reduce using rule 132 (arithmetic_logic -> expression GT function_call .)
    DOR             reduce using rule 132 (arithmetic_logic -> expression GT function_call .)
    RPAREN          reduce using rule 132 (arithmetic_logic -> expression GT function_call .)
    SEMI            reduce using rule 132 (arithmetic_logic -> expression GT function_call .)


state 290

    (127) arithmetic_logic -> expression LEQ expression .

    DAND            reduce using rule 127 (arithmetic_logic -> expression LEQ expression .)
    DOR             reduce using rule 127 (arithmetic_logic -> expression LEQ expression .)
    RPAREN          reduce using rule 127 (arithmetic_logic -> expression LEQ expression .)
    SEMI            reduce using rule 127 (arithmetic_logic -> expression LEQ expression .)


state 291

    (133) arithmetic_logic -> expression LEQ function_call .

    DAND            reduce using rule 133 (arithmetic_logic -> expression LEQ function_call .)
    DOR             reduce using rule 133 (arithmetic_logic -> expression LEQ function_call .)
    RPAREN          reduce using rule 133 (arithmetic_logic -> expression LEQ function_call .)
    SEMI            reduce using rule 133 (arithmetic_logic -> expression LEQ function_call .)


state 292

    (128) arithmetic_logic -> expression LT expression .

    DAND            reduce using rule 128 (arithmetic_logic -> expression LT expression .)
    DOR             reduce using rule 128 (arithmetic_logic -> expression LT expression .)
    RPAREN          reduce using rule 128 (arithmetic_logic -> expression LT expression .)
    SEMI            reduce using rule 128 (arithmetic_logic -> expression LT expression .)


state 293

    (134) arithmetic_logic -> expression LT function_call .

    DAND            reduce using rule 134 (arithmetic_logic -> expression LT function_call .)
    DOR             reduce using rule 134 (arithmetic_logic -> expression LT function_call .)
    RPAREN          reduce using rule 134 (arithmetic_logic -> expression LT function_call .)
    SEMI            reduce using rule 134 (arithmetic_logic -> expression LT function_call .)


state 294

    (129) arithmetic_logic -> expression NE expression .

    DAND            reduce using rule 129 (arithmetic_logic -> expression NE expression .)
    DOR             reduce using rule 129 (arithmetic_logic -> expression NE expression .)
    RPAREN          reduce using rule 129 (arithmetic_logic -> expression NE expression .)
    SEMI            reduce using rule 129 (arithmetic_logic -> expression NE expression .)


state 295

    (135) arithmetic_logic -> expression NE function_call .

    DAND            reduce using rule 135 (arithmetic_logic -> expression NE function_call .)
    DOR             reduce using rule 135 (arithmetic_logic -> expression NE function_call .)
    RPAREN          reduce using rule 135 (arithmetic_logic -> expression NE function_call .)
    SEMI            reduce using rule 135 (arithmetic_logic -> expression NE function_call .)


state 296

    (39) if -> K_IF LPAREN boolean_logic RPAREN K_THEN . statement
    (40) if -> K_IF LPAREN boolean_logic RPAREN K_THEN . LCURLY scope_body RCURLY
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (155) empty -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    LCURLY          shift and go to state 325
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    statement                      shift and go to state 324
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69
    empty                          shift and go to state 171

state 297

    (151) factor -> IDENTIFIER LBRACKET expression RBRACKET .

    DIVIDE          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    DEQ             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    GT              reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    LT              reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    NE              reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    DAND            reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    DOR             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    ICONSTANT       reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    DCONSTANT       reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    SCONSTANT       reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)


state 298

    (152) factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .

    DIVIDE          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MULTIPLY        reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MOD             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    PLUS            reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MINUS           reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RBRACKET        reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SEMI            reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    IDENTIFIER      reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    COMMA           reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DEQ             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    GEQ             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    GT              reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LEQ             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LT              reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    NE              reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DAND            reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DOR             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LPAREN          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    ICONSTANT       reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DCONSTANT       reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SCONSTANT       reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)


state 299

    (153) factor -> MINUS IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 326


state 300

    (154) factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment . RBRACKET

    RBRACKET        shift and go to state 327


state 301

    (75) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN expression
    (78) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET . ASSIGN_MOD expression
    (151) factor -> IDENTIFIER LBRACKET expression RBRACKET .

    ASSIGN          shift and go to state 250
    ASSIGN_DIVIDE   shift and go to state 251
    ASSIGN_MULTIPLY shift and go to state 252
    ASSIGN_PLUS     shift and go to state 253
    ASSIGN_MINUS    shift and go to state 254
    ASSIGN_MOD      shift and go to state 255
    DIVIDE          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)


state 302

    (83) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN expression
    (85) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . ASSIGN_MOD expression
    (152) factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .

    ASSIGN          shift and go to state 256
    ASSIGN_DIVIDE   shift and go to state 257
    ASSIGN_MULTIPLY shift and go to state 258
    ASSIGN_PLUS     shift and go to state 259
    ASSIGN_MINUS    shift and go to state 260
    ASSIGN_MOD      shift and go to state 261
    DIVIDE          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MULTIPLY        reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MOD             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    PLUS            reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MINUS           reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SEMI            reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)


state 303

    (77) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression .

    SEMI            reduce using rule 77 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression .)
    RPAREN          reduce using rule 77 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression .)


state 304

    (75) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment .

    SEMI            reduce using rule 75 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment .)
    RPAREN          reduce using rule 75 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment .)


state 305

    (76) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call .

    SEMI            reduce using rule 76 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call .)
    RPAREN          reduce using rule 76 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call .)


state 306

    (78) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression .

    SEMI            reduce using rule 78 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression .)
    RPAREN          reduce using rule 78 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression .)


state 307

    (79) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression .

    SEMI            reduce using rule 79 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression .)
    RPAREN          reduce using rule 79 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression .)


state 308

    (80) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression .

    SEMI            reduce using rule 80 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression .)
    RPAREN          reduce using rule 80 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression .)


state 309

    (81) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression .

    SEMI            reduce using rule 81 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression .)
    RPAREN          reduce using rule 81 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression .)


state 310

    (82) variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression .

    SEMI            reduce using rule 82 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression .)
    RPAREN          reduce using rule 82 (variable_assignment -> IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression .)


state 311

    (67) variable_assignment -> IDENTIFIER . ASSIGN variable_assignment
    (68) variable_assignment -> IDENTIFIER . ASSIGN function_call
    (69) variable_assignment -> IDENTIFIER . ASSIGN expression
    (70) variable_assignment -> IDENTIFIER . ASSIGN_DIVIDE expression
    (71) variable_assignment -> IDENTIFIER . ASSIGN_MULTIPLY expression
    (72) variable_assignment -> IDENTIFIER . ASSIGN_PLUS expression
    (73) variable_assignment -> IDENTIFIER . ASSIGN_MINUS expression
    (74) variable_assignment -> IDENTIFIER . ASSIGN_MOD expression
    (75) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (149) factor -> IDENTIFIER .
    (151) factor -> IDENTIFIER . LBRACKET expression RBRACKET
    (152) factor -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET

    ASSIGN          shift and go to state 89
    ASSIGN_DIVIDE   shift and go to state 90
    ASSIGN_MULTIPLY shift and go to state 91
    ASSIGN_PLUS     shift and go to state 92
    ASSIGN_MINUS    shift and go to state 93
    ASSIGN_MOD      shift and go to state 94
    LBRACKET        shift and go to state 204
    DIVIDE          reduce using rule 149 (factor -> IDENTIFIER .)
    MULTIPLY        reduce using rule 149 (factor -> IDENTIFIER .)
    MOD             reduce using rule 149 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 149 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 149 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 149 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 149 (factor -> IDENTIFIER .)


state 312

    (83) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment .

    SEMI            reduce using rule 83 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment .)
    RPAREN          reduce using rule 83 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment .)


state 313

    (84) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression .

    SEMI            reduce using rule 84 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression .)
    RPAREN          reduce using rule 84 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression .)


state 314

    (85) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression .

    SEMI            reduce using rule 85 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression .)
    RPAREN          reduce using rule 85 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression .)


state 315

    (86) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression .

    SEMI            reduce using rule 86 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression .)
    RPAREN          reduce using rule 86 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression .)


state 316

    (87) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression .

    SEMI            reduce using rule 87 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression .)
    RPAREN          reduce using rule 87 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression .)


state 317

    (88) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression .

    SEMI            reduce using rule 88 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression .)
    RPAREN          reduce using rule 88 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression .)


state 318

    (89) variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression .

    SEMI            reduce using rule 89 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression .)
    RPAREN          reduce using rule 89 (variable_assignment -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression .)


state 319

    (95) identifiers -> IDENTIFIER LBRACKET expression RBRACKET . identifiers
    (151) factor -> IDENTIFIER LBRACKET expression RBRACKET .
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for ICONSTANT resolved using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for DCONSTANT resolved using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for SCONSTANT resolved using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for MINUS resolved using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    ICONSTANT       reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    DCONSTANT       reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    SCONSTANT       reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! IDENTIFIER      [ reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .) ]
  ! COMMA           [ reduce using rule 151 (factor -> IDENTIFIER LBRACKET expression RBRACKET .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 239
    empty                          shift and go to state 43

state 320

    (96) identifiers -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET . identifiers
    (152) factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .
    (94) identifiers -> . IDENTIFIER identifiers
    (95) identifiers -> . IDENTIFIER LBRACKET expression RBRACKET identifiers
    (96) identifiers -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET identifiers
    (97) identifiers -> . COMMA identifiers
    (98) identifiers -> . empty
    (155) empty -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for ICONSTANT resolved using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for DCONSTANT resolved using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for SCONSTANT resolved using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for MINUS resolved using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
  ! reduce/reduce conflict for RPAREN resolved using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DIVIDE          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MULTIPLY        reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MOD             reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LPAREN          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    ICONSTANT       reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DCONSTANT       reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SCONSTANT       reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MINUS           reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    IDENTIFIER      shift and go to state 80
    COMMA           shift and go to state 42

  ! IDENTIFIER      [ reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .) ]
  ! COMMA           [ reduce using rule 152 (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! COMMA           [ reduce using rule 155 (empty -> .) ]
  ! LPAREN          [ reduce using rule 155 (empty -> .) ]
  ! ICONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! DCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! SCONSTANT       [ reduce using rule 155 (empty -> .) ]
  ! MINUS           [ reduce using rule 155 (empty -> .) ]
  ! RPAREN          [ reduce using rule 155 (empty -> .) ]

    identifiers                    shift and go to state 240
    empty                          shift and go to state 43

state 321

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI . variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI . variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI . variable_assignment RPAREN statement
    (35) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI . variable_decrement_increment RPAREN statement
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT

    IDENTIFIER      shift and go to state 330

    variable_assignment            shift and go to state 328
    variable_decrement_increment   shift and go to state 329

state 322

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI . variable_assignment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI . variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (34) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI . variable_assignment RPAREN statement
    (36) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI . variable_decrement_increment RPAREN statement
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT

    IDENTIFIER      shift and go to state 330

    variable_assignment            shift and go to state 331
    variable_decrement_increment   shift and go to state 332

state 323

    (27) while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 333


state 324

    (39) if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .

    K_ELSE          reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_FUNCTION      reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_PROCEDURE     reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_INTEGER       reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_DOUBLE        reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_STRING        reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    IDENTIFIER      reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_RETURN        reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_DO            reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_WHILE         reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_PRINT_INTEGER reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_PRINT_DOUBLE  reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_PRINT_STRING  reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_READ_INTEGER  reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_READ_DOUBLE   reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_READ_STRING   reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    K_IF            reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)
    RCURLY          reduce using rule 39 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN statement .)


state 325

    (40) if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    scope_body                     shift and go to state 334
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 326

    (153) factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .

    DIVIDE          reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    IDENTIFIER      reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    ICONSTANT       reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    DCONSTANT       reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    SCONSTANT       reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    DEQ             reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    GT              reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    LT              reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    NE              reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    DAND            reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)
    DOR             reduce using rule 153 (factor -> MINUS IDENTIFIER LBRACKET expression RBRACKET .)


state 327

    (154) factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .

    DIVIDE          reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MULTIPLY        reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MOD             reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    PLUS            reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    MINUS           reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RBRACKET        reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SEMI            reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    RPAREN          reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    IDENTIFIER      reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    COMMA           reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LPAREN          reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    ICONSTANT       reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DCONSTANT       reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    SCONSTANT       reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DEQ             reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    GEQ             reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    GT              reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LEQ             reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    LT              reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    NE              reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DAND            reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)
    DOR             reduce using rule 154 (factor -> MINUS IDENTIFIER LBRACKET variable_decrement_increment RBRACKET .)


state 328

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment . RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment . RPAREN statement

    RPAREN          shift and go to state 335


state 329

    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment . RPAREN LCURLY scope_body RCURLY
    (35) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment . RPAREN statement

    RPAREN          shift and go to state 336


state 330

    (67) variable_assignment -> IDENTIFIER . ASSIGN variable_assignment
    (68) variable_assignment -> IDENTIFIER . ASSIGN function_call
    (69) variable_assignment -> IDENTIFIER . ASSIGN expression
    (70) variable_assignment -> IDENTIFIER . ASSIGN_DIVIDE expression
    (71) variable_assignment -> IDENTIFIER . ASSIGN_MULTIPLY expression
    (72) variable_assignment -> IDENTIFIER . ASSIGN_PLUS expression
    (73) variable_assignment -> IDENTIFIER . ASSIGN_MINUS expression
    (74) variable_assignment -> IDENTIFIER . ASSIGN_MOD expression
    (75) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> IDENTIFIER . LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> IDENTIFIER . LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (65) variable_decrement_increment -> IDENTIFIER . INCREMENT
    (66) variable_decrement_increment -> IDENTIFIER . DECREMENT

    ASSIGN          shift and go to state 89
    ASSIGN_DIVIDE   shift and go to state 90
    ASSIGN_MULTIPLY shift and go to state 91
    ASSIGN_PLUS     shift and go to state 92
    ASSIGN_MINUS    shift and go to state 93
    ASSIGN_MOD      shift and go to state 94
    LBRACKET        shift and go to state 95
    INCREMENT       shift and go to state 97
    DECREMENT       shift and go to state 98


state 331

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment . RPAREN LCURLY scope_body RCURLY
    (34) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment . RPAREN statement

    RPAREN          shift and go to state 337


state 332

    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment . RPAREN LCURLY scope_body RCURLY
    (36) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment . RPAREN statement

    RPAREN          shift and go to state 338


state 333

    (27) while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 27 (while_statement -> K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY .)


state 334

    (40) if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 339


state 335

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN . LCURLY scope_body RCURLY
    (33) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN . statement
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (155) empty -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    LCURLY          shift and go to state 340
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_assignment            shift and go to state 59
    statement                      shift and go to state 341
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69
    empty                          shift and go to state 171

state 336

    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN . LCURLY scope_body RCURLY
    (35) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN . statement
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (155) empty -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    LCURLY          shift and go to state 342
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_assignment            shift and go to state 59
    variable_decrement_increment   shift and go to state 63
    statement                      shift and go to state 343
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69
    empty                          shift and go to state 171

state 337

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN . LCURLY scope_body RCURLY
    (34) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN . statement
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (155) empty -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    LCURLY          shift and go to state 344
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_definition            shift and go to state 57
    variable_assignment            shift and go to state 59
    statement                      shift and go to state 345
    variable_declaration           shift and go to state 58
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69
    empty                          shift and go to state 171

state 338

    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN . LCURLY scope_body RCURLY
    (36) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN . statement
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty
    (155) empty -> .

  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    LCURLY          shift and go to state 346
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78
    K_FUNCTION      reduce using rule 155 (empty -> .)
    K_PROCEDURE     reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    RCURLY          reduce using rule 155 (empty -> .)

  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_definition            shift and go to state 57
    variable_decrement_increment   shift and go to state 63
    statement                      shift and go to state 347
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69
    empty                          shift and go to state 171

state 339

    (40) if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .

    K_ELSE          reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_FUNCTION      reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 40 (if -> K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY .)


state 340

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_assignment            shift and go to state 59
    scope_body                     shift and go to state 348
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 341

    (33) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .

    K_FUNCTION      reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PROCEDURE     reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_INTEGER       reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_DOUBLE        reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_STRING        reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    IDENTIFIER      reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_RETURN        reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_DO            reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_WHILE         reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PRINT_INTEGER reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PRINT_DOUBLE  reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PRINT_STRING  reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_READ_INTEGER  reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_READ_DOUBLE   reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_READ_STRING   reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_IF            reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_ELSE          reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    RCURLY          reduce using rule 33 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement .)


state 342

    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_assignment            shift and go to state 59
    variable_decrement_increment   shift and go to state 63
    scope_body                     shift and go to state 349
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_definition            shift and go to state 57
    variable_declaration           shift and go to state 58
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 343

    (35) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .

    K_FUNCTION      reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PROCEDURE     reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_INTEGER       reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_DOUBLE        reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_STRING        reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    IDENTIFIER      reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_RETURN        reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_DO            reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_WHILE         reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PRINT_INTEGER reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PRINT_DOUBLE  reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PRINT_STRING  reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_READ_INTEGER  reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_READ_DOUBLE   reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_READ_STRING   reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_IF            reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_ELSE          reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    RCURLY          reduce using rule 35 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)


state 344

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_definition            shift and go to state 57
    variable_assignment            shift and go to state 59
    scope_body                     shift and go to state 350
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_declaration           shift and go to state 58
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    variable_decrement_increment   shift and go to state 63
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 345

    (34) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .

    K_FUNCTION      reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PROCEDURE     reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_INTEGER       reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_DOUBLE        reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_STRING        reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    IDENTIFIER      reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_RETURN        reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_DO            reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_WHILE         reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PRINT_INTEGER reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PRINT_DOUBLE  reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_PRINT_STRING  reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_READ_INTEGER  reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_READ_DOUBLE   reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_READ_STRING   reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_IF            reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    K_ELSE          reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)
    RCURLY          reduce using rule 34 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement .)


state 346

    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY . scope_body RCURLY
    (13) scope_body -> . statement scope_body
    (14) scope_body -> . function scope_body
    (15) scope_body -> . procedure scope_body
    (16) scope_body -> . empty
    (17) statement -> . variable_definition SEMI
    (18) statement -> . variable_declaration SEMI
    (19) statement -> . variable_assignment SEMI
    (20) statement -> . function_call SEMI
    (21) statement -> . function_return SEMI
    (22) statement -> . procedure_call SEMI
    (23) statement -> . variable_decrement_increment SEMI
    (24) statement -> . if_statement
    (25) statement -> . do_statement
    (26) statement -> . while_statement
    (5) function -> . K_FUNCTION K_INTEGER IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (6) function -> . K_FUNCTION K_DOUBLE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (7) function -> . K_FUNCTION K_STRING IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (8) procedure -> . K_PROCEDURE IDENTIFIER LPAREN RPAREN LCURLY scope_body RCURLY
    (9) procedure -> . K_PROCEDURE IDENTIFIER LPAREN arguments RPAREN LCURLY scope_body RCURLY
    (155) empty -> .
    (91) variable_definition -> . K_INTEGER identifiers
    (92) variable_definition -> . K_DOUBLE identifiers
    (93) variable_definition -> . K_STRING identifiers
    (99) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET RBRACKET
    (100) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET RBRACKET
    (101) variable_definition -> . K_STRING IDENTIFIER LBRACKET RBRACKET
    (102) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET expression RBRACKET
    (103) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET
    (104) variable_definition -> . K_STRING IDENTIFIER LBRACKET expression RBRACKET
    (105) variable_definition -> . K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (106) variable_definition -> . K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (107) variable_definition -> . K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET
    (90) variable_declaration -> . variable_definition ASSIGN expression identifiers
    (67) variable_assignment -> . IDENTIFIER ASSIGN variable_assignment
    (68) variable_assignment -> . IDENTIFIER ASSIGN function_call
    (69) variable_assignment -> . IDENTIFIER ASSIGN expression
    (70) variable_assignment -> . IDENTIFIER ASSIGN_DIVIDE expression
    (71) variable_assignment -> . IDENTIFIER ASSIGN_MULTIPLY expression
    (72) variable_assignment -> . IDENTIFIER ASSIGN_PLUS expression
    (73) variable_assignment -> . IDENTIFIER ASSIGN_MINUS expression
    (74) variable_assignment -> . IDENTIFIER ASSIGN_MOD expression
    (75) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN variable_assignment
    (76) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN function_call
    (77) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN expression
    (78) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_DIVIDE expression
    (79) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MULTIPLY expression
    (80) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_PLUS expression
    (81) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MINUS expression
    (82) variable_assignment -> . IDENTIFIER LBRACKET expression RBRACKET ASSIGN_MOD expression
    (83) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN variable_assignment
    (84) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN expression
    (85) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_DIVIDE expression
    (86) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MULTIPLY expression
    (87) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_PLUS expression
    (88) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MINUS expression
    (89) variable_assignment -> . IDENTIFIER LBRACKET variable_decrement_increment RBRACKET ASSIGN_MOD expression
    (45) function_call -> . built_in_functions LPAREN function_call_args RPAREN
    (46) function_call -> . IDENTIFIER LPAREN function_call_args RPAREN
    (47) function_return -> . K_RETURN IDENTIFIER
    (48) function_return -> . K_RETURN ICONSTANT
    (49) function_return -> . K_RETURN DCONSTANT
    (50) function_return -> . K_RETURN SCONSTANT
    (51) function_return -> . K_RETURN function_call
    (52) function_return -> . K_RETURN variable_assignment
    (53) procedure_call -> . IDENTIFIER LPAREN procedure_call_args RPAREN
    (65) variable_decrement_increment -> . IDENTIFIER INCREMENT
    (66) variable_decrement_increment -> . IDENTIFIER DECREMENT
    (37) if_statement -> . if
    (38) if_statement -> . if K_ELSE after_else
    (29) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (30) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY
    (31) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (32) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY
    (33) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (34) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN statement
    (35) do_statement -> . K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (36) do_statement -> . K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement
    (27) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN LCURLY scope_body RCURLY
    (28) while_statement -> . K_WHILE LPAREN boolean_logic RPAREN statement
    (54) built_in_functions -> . K_PRINT_INTEGER
    (55) built_in_functions -> . K_PRINT_DOUBLE
    (56) built_in_functions -> . K_PRINT_STRING
    (57) built_in_functions -> . K_READ_INTEGER
    (58) built_in_functions -> . K_READ_DOUBLE
    (59) built_in_functions -> . K_READ_STRING
    (39) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN statement
    (40) if -> . K_IF LPAREN boolean_logic RPAREN K_THEN LCURLY scope_body RCURLY
    (41) if -> . empty

  ! shift/reduce conflict for K_FUNCTION resolved as shift
  ! shift/reduce conflict for K_PROCEDURE resolved as shift
  ! shift/reduce conflict for K_INTEGER resolved as shift
  ! shift/reduce conflict for K_DOUBLE resolved as shift
  ! shift/reduce conflict for K_STRING resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for K_RETURN resolved as shift
  ! shift/reduce conflict for K_DO resolved as shift
  ! shift/reduce conflict for K_WHILE resolved as shift
  ! shift/reduce conflict for K_PRINT_INTEGER resolved as shift
  ! shift/reduce conflict for K_PRINT_DOUBLE resolved as shift
  ! shift/reduce conflict for K_PRINT_STRING resolved as shift
  ! shift/reduce conflict for K_READ_INTEGER resolved as shift
  ! shift/reduce conflict for K_READ_DOUBLE resolved as shift
  ! shift/reduce conflict for K_READ_STRING resolved as shift
  ! shift/reduce conflict for K_IF resolved as shift
    K_FUNCTION      shift and go to state 9
    K_PROCEDURE     shift and go to state 10
    RCURLY          reduce using rule 155 (empty -> .)
    K_ELSE          reduce using rule 155 (empty -> .)
    K_INTEGER       shift and go to state 30
    K_DOUBLE        shift and go to state 31
    K_STRING        shift and go to state 32
    IDENTIFIER      shift and go to state 51
    K_RETURN        shift and go to state 68
    K_DO            shift and go to state 70
    K_WHILE         shift and go to state 71
    K_PRINT_INTEGER shift and go to state 72
    K_PRINT_DOUBLE  shift and go to state 73
    K_PRINT_STRING  shift and go to state 74
    K_READ_INTEGER  shift and go to state 75
    K_READ_DOUBLE   shift and go to state 76
    K_READ_STRING   shift and go to state 77
    K_IF            shift and go to state 78

  ! K_FUNCTION      [ reduce using rule 155 (empty -> .) ]
  ! K_PROCEDURE     [ reduce using rule 155 (empty -> .) ]
  ! K_INTEGER       [ reduce using rule 155 (empty -> .) ]
  ! K_DOUBLE        [ reduce using rule 155 (empty -> .) ]
  ! K_STRING        [ reduce using rule 155 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 155 (empty -> .) ]
  ! K_RETURN        [ reduce using rule 155 (empty -> .) ]
  ! K_DO            [ reduce using rule 155 (empty -> .) ]
  ! K_WHILE         [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_INTEGER [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_DOUBLE  [ reduce using rule 155 (empty -> .) ]
  ! K_PRINT_STRING  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_INTEGER  [ reduce using rule 155 (empty -> .) ]
  ! K_READ_DOUBLE   [ reduce using rule 155 (empty -> .) ]
  ! K_READ_STRING   [ reduce using rule 155 (empty -> .) ]
  ! K_IF            [ reduce using rule 155 (empty -> .) ]

    variable_definition            shift and go to state 57
    variable_decrement_increment   shift and go to state 63
    scope_body                     shift and go to state 351
    statement                      shift and go to state 53
    function                       shift and go to state 54
    procedure                      shift and go to state 55
    empty                          shift and go to state 56
    variable_declaration           shift and go to state 58
    variable_assignment            shift and go to state 59
    function_call                  shift and go to state 60
    function_return                shift and go to state 61
    procedure_call                 shift and go to state 62
    if_statement                   shift and go to state 64
    do_statement                   shift and go to state 65
    while_statement                shift and go to state 66
    built_in_functions             shift and go to state 67
    if                             shift and go to state 69

state 347

    (36) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .

    K_FUNCTION      reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PROCEDURE     reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_INTEGER       reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_DOUBLE        reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_STRING        reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    IDENTIFIER      reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_RETURN        reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_DO            reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_WHILE         reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PRINT_INTEGER reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PRINT_DOUBLE  reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_PRINT_STRING  reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_READ_INTEGER  reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_READ_DOUBLE   reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_READ_STRING   reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_IF            reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    K_ELSE          reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)
    RCURLY          reduce using rule 36 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN statement .)


state 348

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 352


state 349

    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 353


state 350

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 354


state 351

    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body . RCURLY

    RCURLY          shift and go to state 355


state 352

    (29) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 29 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)


state 353

    (31) do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 31 (do_statement -> K_DO LPAREN variable_assignment SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)


state 354

    (30) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 30 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_assignment RPAREN LCURLY scope_body RCURLY .)


state 355

    (32) do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .

    K_FUNCTION      reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PROCEDURE     reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_INTEGER       reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_DOUBLE        reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_STRING        reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    IDENTIFIER      reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_RETURN        reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_DO            reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_WHILE         reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_INTEGER reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_DOUBLE  reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_PRINT_STRING  reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_READ_INTEGER  reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_READ_DOUBLE   reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_READ_STRING   reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_IF            reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    K_ELSE          reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)
    RCURLY          reduce using rule 32 (do_statement -> K_DO LPAREN variable_definition SEMI boolean_logic SEMI variable_decrement_increment RPAREN LCURLY scope_body RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 21 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 30 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 31 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 32 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 36 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 36 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 36 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 36 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 36 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 36 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 36 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 36 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 36 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 36 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 36 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 36 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 36 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 41 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 42 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 42 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 45 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 47 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 53 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 53 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 53 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 53 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 53 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 53 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 53 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 53 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 53 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 53 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 53 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 53 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 53 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 53 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 53 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 54 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 54 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 54 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 54 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 54 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 54 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 54 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 54 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 54 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 54 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 54 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 54 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 54 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 54 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 54 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 54 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 55 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 55 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 55 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 55 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 55 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 55 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 55 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 55 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 55 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 55 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 55 resolved as shift
WARNING: shift/reduce conflict for K_ELSE in state 69 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 79 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 79 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 79 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 79 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 79 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 79 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 79 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 79 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 79 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 79 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 79 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 80 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 80 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 86 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 86 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 86 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 86 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 86 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 86 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 86 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 86 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 86 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 86 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 86 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 86 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 86 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 86 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 87 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 87 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 87 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 87 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 87 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 87 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 87 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 87 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 87 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 87 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 87 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 87 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 87 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 87 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 87 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 87 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 88 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 88 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 88 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 88 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 88 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 88 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 88 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 88 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 88 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 88 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 88 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 88 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 88 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 88 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 88 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 88 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 96 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 96 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 96 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 96 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 96 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 111 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 111 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 111 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 111 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 118 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 118 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 118 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 118 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 118 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 118 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 118 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 118 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 118 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 118 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 118 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 118 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 118 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 118 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 156 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 156 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 156 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 156 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 159 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 159 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 159 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 159 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 159 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 159 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 159 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 160 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 160 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 160 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 160 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 160 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 164 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 164 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 164 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 164 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 164 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 164 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 164 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 165 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 165 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 165 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 165 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 165 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 166 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 166 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 166 resolved as shift
WARNING: shift/reduce conflict for ICONSTANT in state 166 resolved as shift
WARNING: shift/reduce conflict for DCONSTANT in state 166 resolved as shift
WARNING: shift/reduce conflict for SCONSTANT in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for K_ELSE in state 167 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 170 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 170 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 170 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 170 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 170 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 170 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 170 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 170 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 170 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 170 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 170 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 170 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 170 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 186 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 186 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 187 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 187 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 197 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 197 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 198 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 198 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 199 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 199 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 200 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 200 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 214 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 214 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 214 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 214 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 214 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 214 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 214 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 214 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 214 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 214 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 214 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 214 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 214 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 214 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 218 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 218 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 218 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 218 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 218 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 218 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 218 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 218 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 218 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 218 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 218 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 218 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 218 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 218 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 235 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 235 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 236 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 236 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 268 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 268 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 268 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 268 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 268 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 268 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 268 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 268 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 268 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 268 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 268 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 268 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 268 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 268 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 268 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 268 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 296 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 296 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 296 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 296 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 296 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 296 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 296 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 296 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 296 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 296 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 296 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 296 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 296 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 296 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 319 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 319 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 319 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 319 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 320 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 320 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 320 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 320 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 325 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 325 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 325 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 325 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 325 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 325 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 325 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 325 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 325 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 325 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 325 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 325 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 325 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 325 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 325 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 325 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 335 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 335 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 335 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 335 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 335 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 335 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 335 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 335 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 335 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 335 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 335 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 335 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 335 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 335 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 336 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 336 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 336 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 336 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 336 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 336 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 336 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 336 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 336 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 336 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 336 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 336 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 336 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 336 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 337 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 337 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 337 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 337 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 337 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 337 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 337 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 337 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 337 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 337 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 337 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 337 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 337 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 337 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 338 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 338 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 338 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 338 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 338 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 338 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 338 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 338 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 338 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 338 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 338 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 338 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 338 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 338 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 340 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 340 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 340 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 340 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 340 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 340 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 340 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 340 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 340 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 340 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 340 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 340 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 340 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 340 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 340 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 340 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 342 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 342 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 342 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 342 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 342 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 342 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 342 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 342 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 342 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 342 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 342 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 342 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 342 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 342 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 342 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 342 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 344 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 344 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 344 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 344 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 344 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 344 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 344 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 344 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 344 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 344 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 344 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 344 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 344 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 344 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 344 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 344 resolved as shift
WARNING: shift/reduce conflict for K_FUNCTION in state 346 resolved as shift
WARNING: shift/reduce conflict for K_PROCEDURE in state 346 resolved as shift
WARNING: shift/reduce conflict for K_INTEGER in state 346 resolved as shift
WARNING: shift/reduce conflict for K_DOUBLE in state 346 resolved as shift
WARNING: shift/reduce conflict for K_STRING in state 346 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 346 resolved as shift
WARNING: shift/reduce conflict for K_RETURN in state 346 resolved as shift
WARNING: shift/reduce conflict for K_DO in state 346 resolved as shift
WARNING: shift/reduce conflict for K_WHILE in state 346 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_INTEGER in state 346 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_DOUBLE in state 346 resolved as shift
WARNING: shift/reduce conflict for K_PRINT_STRING in state 346 resolved as shift
WARNING: shift/reduce conflict for K_READ_INTEGER in state 346 resolved as shift
WARNING: shift/reduce conflict for K_READ_DOUBLE in state 346 resolved as shift
WARNING: shift/reduce conflict for K_READ_STRING in state 346 resolved as shift
WARNING: shift/reduce conflict for K_IF in state 346 resolved as shift
WARNING: reduce/reduce conflict in state 56 resolved using rule (scope_body -> empty)
WARNING: rejected rule (if -> empty) in state 56
WARNING: reduce/reduce conflict in state 156 resolved using rule (factor -> IDENTIFIER)
WARNING: rejected rule (empty -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 159 resolved using rule (procedure_call_args -> identifiers)
WARNING: rejected rule (empty -> <empty>) in state 159
WARNING: reduce/reduce conflict in state 160 resolved using rule (procedure_call_args -> term)
WARNING: rejected rule (empty -> <empty>) in state 160
WARNING: reduce/reduce conflict in state 161 resolved using rule (function_call_args -> empty)
WARNING: rejected rule (identifiers -> empty) in state 161
WARNING: reduce/reduce conflict in state 186 resolved using rule (variable_definition -> K_INTEGER IDENTIFIER LBRACKET expression RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (variable_definition -> K_INTEGER IDENTIFIER LBRACKET variable_decrement_increment RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 187
WARNING: reduce/reduce conflict in state 197 resolved using rule (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET expression RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (variable_definition -> K_DOUBLE IDENTIFIER LBRACKET variable_decrement_increment RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 198
WARNING: reduce/reduce conflict in state 199 resolved using rule (variable_definition -> K_STRING IDENTIFIER LBRACKET expression RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (variable_definition -> K_STRING IDENTIFIER LBRACKET variable_decrement_increment RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 200
WARNING: reduce/reduce conflict in state 264 resolved using rule (if_statement -> if K_ELSE after_else)
WARNING: rejected rule (after_else -> if K_ELSE after_else) in state 264
WARNING: reduce/reduce conflict in state 319 resolved using rule (factor -> IDENTIFIER LBRACKET expression RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 319
WARNING: reduce/reduce conflict in state 320 resolved using rule (factor -> IDENTIFIER LBRACKET variable_decrement_increment RBRACKET)
WARNING: rejected rule (empty -> <empty>) in state 320
WARNING: Rule (after_else -> if K_ELSE after_else) is never reduced
